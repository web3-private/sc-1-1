{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xBC982f7E03039694fdBEF80C1AF1C6b5e260D026",
      "txHash": "0xd217063bd393905e75b48eefc8700d5c9830759831ea07d5c80015573cd85d95",
      "kind": "transparent"
    },
    {
      "address": "0x1Dad5f047392bCd4F10cE0c713c64eCCED20d776",
      "txHash": "0x49f354696eb65c8ac5d9d74b849271a6a787796430783abb7b1778812324568c",
      "kind": "transparent"
    },
    {
      "address": "0x0b51a977C2BBD1474Befdee4221DaD7eDFe12e70",
      "txHash": "0xef1d75de341bca28b72627052d93ab6ef221fd2d8ccede902d5a7b9bee7bd575",
      "kind": "transparent"
    },
    {
      "address": "0x3ebeF098B0D561F84A4B0C015373d26C51F06677",
      "txHash": "0xae22e76a3726d1075de3ced9183838db032636d67f1fe96479135d8caed18a16",
      "kind": "transparent"
    },
    {
      "address": "0xE2e169709D6a15c214293b7Dd2bE3ab920B4D7E1",
      "txHash": "0x6bce24a0d207710578bc5fb0ba0018b99fe1b45554ac869b987fc2512b8b78a1",
      "kind": "transparent"
    },
    {
      "address": "0xe301180627842F52E755d20C6ff5a3621F05d869",
      "txHash": "0xdd7048a90d0c4fe04199d6aae0b2b8fd56b092d4e7409a1463aa09f170364efa",
      "kind": "transparent"
    },
    {
      "address": "0x16d1312C9d82cc0c0D50C06E750a31CE36cd64c8",
      "txHash": "0xd0ea01b8af2cb1f930c1c7528555e4fac1ad5179bb3f8ddab48826d58240b308",
      "kind": "transparent"
    },
    {
      "address": "0x56fce8Ad4F794b9eE81CfeAD290AB5c719F10516",
      "txHash": "0x89ac1965c57869aebeface22f1c873624d731a4fbe61949e5167eb451c157a5a",
      "kind": "transparent"
    },
    {
      "address": "0xb292824B4595141f2A1Ab95A942383d88A3E3d94",
      "txHash": "0x57d2d809b73f72a561d59bd470f62c2b50aca2cc1cc12d717c8c14dedd5bb1c8",
      "kind": "transparent"
    },
    {
      "address": "0x4136a82025C04E802D4c07A2Ab8c9ec4085d3E71",
      "txHash": "0xa4220ef1844bd439ee1ddff9cdc9d531283fc88232c36f1836f37b9f3894988e",
      "kind": "transparent"
    },
    {
      "address": "0xfBf3126347Cb3e1B6688b704Da50026619D09329",
      "txHash": "0x16ff4a6a59ab87ed86abad9a5c4632c6ca48d904dadd0d9f03f60d1c3d778489",
      "kind": "transparent"
    },
    {
      "address": "0xfE531F542210cE18afAb3d49694196182E4C72d3",
      "txHash": "0x1a049ff4d34afb56a8766adedf1602cf0936127ac166f43d4370335bcaff7351",
      "kind": "transparent"
    },
    {
      "address": "0x607BDa00f0621484Ec980D82a80B1741D98D71C3",
      "txHash": "0xff3fe21cf0df63fc5e08c40a422e5b3fda5de9d31c882c06ee84f9d90f9067b5",
      "kind": "transparent"
    },
    {
      "address": "0xFC278bE2874db160f365AfFf42d9F3050d7278df",
      "txHash": "0x2f886b197dfbec4399cdb63248e60d20c1477d1f8c8bba5869a29c89246ce4cc",
      "kind": "transparent"
    },
    {
      "address": "0x3DEBE66C5271eAf2D4eBCbD5bb2012b24A02895c",
      "txHash": "0x351a8c2bb156eedfda93f4d0535c39fd18b63c8e490328cecbe4b548fc1ec193",
      "kind": "transparent"
    },
    {
      "address": "0x0B233ACAa5494DEc8979a220b2059341F7E573DF",
      "txHash": "0x3902eee27f7267b4f90248a2ded22aa7a43b3580c7c84f64baa08ba7fea6ee34",
      "kind": "transparent"
    }
  ],
  "impls": {
    "c5bcf36c337f1a09a66749181d20f7cb4bf3363d0573ac99b76b44999bfc2575": {
      "address": "0xBdAD630D5919004F0CFb22C143c0F157025eA7ea",
      "txHash": "0x3ecc9d9e791f49cbf84f7d1449521326461af4ab14424d6497cd8e56a7c5e075",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "101",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "102",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_struct(Counter)1846_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "154",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "204",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "254",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:48"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "304",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_decimals",
            "offset": 0,
            "slot": "354",
            "type": "t_uint8",
            "contract": "TokenBaseUpgradeable",
            "src": "contracts/TokenBaseUpgradeable.sol:22"
          },
          {
            "label": "currency",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "TokenBaseUpgradeable",
            "src": "contracts/TokenBaseUpgradeable.sol:23"
          },
          {
            "label": "basisPointsRate",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "AbstractTokenFee",
            "src": "contracts/extensions/AbstractTokenFee.sol:8"
          },
          {
            "label": "maximumFee",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "AbstractTokenFee",
            "src": "contracts/extensions/AbstractTokenFee.sol:9"
          },
          {
            "label": "feeAccounts",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AbstractTokenFee",
            "src": "contracts/extensions/AbstractTokenFee.sol:15"
          },
          {
            "label": "feeRateAccounts",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AbstractTokenFee",
            "src": "contracts/extensions/AbstractTokenFee.sol:17"
          },
          {
            "label": "feeAccountKeys",
            "offset": 0,
            "slot": "360",
            "type": "t_array(t_address)dyn_storage",
            "contract": "AbstractTokenFee",
            "src": "contracts/extensions/AbstractTokenFee.sol:19"
          },
          {
            "label": "blacklister",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "Blacklistable",
            "src": "contracts/Blacklistable.sol:11"
          },
          {
            "label": "balanceAndBlacklistStates",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TokenUpgradeable1",
            "src": "contracts/TokenUpgradeable1.sol:18"
          },
          {
            "label": "balanceAndWhitelistStates",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TokenUpgradeable1",
            "src": "contracts/TokenUpgradeable1.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)1846_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)1846_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "2e06ddc2b28fbddc327a6df82ca9962d2210ce32d947ee6988284a635a031cbb": {
      "address": "0x0bB9F375984041dc6cBC3F647FAf398b876477CE",
      "txHash": "0x4f7801c0a505dc96379128c93d0e4dc92ed927797f252004730a2c37e1511772",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:48"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "301",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_struct(Counter)1911_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "354",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "minters",
            "offset": 0,
            "slot": "404",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Minterable",
            "src": "contracts/Minterable.sol:7"
          },
          {
            "label": "masterMinter",
            "offset": 0,
            "slot": "405",
            "type": "t_address",
            "contract": "Minterable",
            "src": "contracts/Minterable.sol:8"
          },
          {
            "label": "minterAllowed",
            "offset": 0,
            "slot": "406",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Minterable",
            "src": "contracts/Minterable.sol:9"
          },
          {
            "label": "_decimals",
            "offset": 0,
            "slot": "407",
            "type": "t_uint8",
            "contract": "TokenBaseUpgradeableTemp",
            "src": "contracts/TokenBaseUpgradeableTemp.sol:17"
          },
          {
            "label": "currency",
            "offset": 0,
            "slot": "408",
            "type": "t_string_storage",
            "contract": "TokenBaseUpgradeableTemp",
            "src": "contracts/TokenBaseUpgradeableTemp.sol:18"
          },
          {
            "label": "blacklister",
            "offset": 0,
            "slot": "409",
            "type": "t_address",
            "contract": "Blacklistable",
            "src": "contracts/Blacklistable.sol:11"
          },
          {
            "label": "balanceAndBlacklistStates",
            "offset": 0,
            "slot": "410",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TokenUpgradeableTemp",
            "src": "contracts/TokenUpgradeableTemp.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)1911_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)1911_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "01059a2b046643de261def19ae9bc0b0725c77812d9c8beee38b40fd69147d1b": {
      "address": "0x2Aa50A81f28757cb2A4a9542CB839B651C76b449",
      "txHash": "0xc93fed58eb7871e4a2de9c2cd2a0a4a6692398092cc31c7692802631c6416b94",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "basisPointsRate",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "FeeAggregator",
            "src": "contracts/interfaces/FeeAggregator.sol:46"
          },
          {
            "label": "maximumFee",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "FeeAggregator",
            "src": "contracts/interfaces/FeeAggregator.sol:47"
          },
          {
            "label": "feeAccounts",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FeeAggregator",
            "src": "contracts/interfaces/FeeAggregator.sol:53"
          },
          {
            "label": "feeRateAccounts",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FeeAggregator",
            "src": "contracts/interfaces/FeeAggregator.sol:55"
          },
          {
            "label": "feeAccountKeys",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_address)dyn_storage",
            "contract": "FeeAggregator",
            "src": "contracts/interfaces/FeeAggregator.sol:57"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
