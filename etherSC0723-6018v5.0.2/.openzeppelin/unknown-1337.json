{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x1275D096B9DBf2347bD2a131Fb6BDaB0B4882487",
      "txHash": "0xf65bf2ec741f87a817011139857f04b21549d670866e3a364175235b237d0e0d",
      "kind": "transparent"
    },
    {
      "address": "0x712516e61C8B383dF4A63CFe83d7701Bce54B03e",
      "txHash": "0x47a060de5a0031702de3d007e4673583e52341a0873923f98094bc8d63b75d7d",
      "kind": "transparent"
    },
    {
      "address": "0xbCF26943C0197d2eE0E5D05c716Be60cc2761508",
      "txHash": "0x4e1f5ae7eefeef3df316cb77500e1f819a78d661aaa7dbbd1897b655f0dc6a97",
      "kind": "transparent"
    },
    {
      "address": "0x59F2f1fCfE2474fD5F0b9BA1E73ca90b143Eb8d0",
      "txHash": "0x32620822fd3dba16a6c05e0a97295a09b55b8406f5047b5046a1336a15a398e1",
      "kind": "transparent"
    },
    {
      "address": "0xC6bA8C3233eCF65B761049ef63466945c362EdD2",
      "txHash": "0xc627d4c90fe248c367754fdfa820989f6b9a612cd096214882ac009743632f7f",
      "kind": "transparent"
    },
    {
      "address": "0xE5BD5bDC03371fB239956dbbF40bD185D6c2ea28",
      "txHash": "0x34d9d5efc3593c2369a036b184c806ee0928c1997acaa83f259d9544077aec22",
      "kind": "transparent"
    },
    {
      "address": "0xAd5d57aD9bB17d34Debb88566ab2F5dB879Cc46F",
      "txHash": "0x17cbac10d06fedfd51bdfea8cc6e990752de156e1260e7a7c708ef1ab34fb45f",
      "kind": "transparent"
    },
    {
      "address": "0x05Aa229Aec102f78CE0E852A812a388F076Aa555",
      "txHash": "0xc7a5a0a3770c4f75eb9472dd77f937cc7702a710067884be3a28ca2441cab32a",
      "kind": "transparent"
    },
    {
      "address": "0x0b48aF34f4c854F5ae1A3D587da471FeA45bAD52",
      "txHash": "0x822169b8ca222ec6c28ac743b20cf05a1dee8b5a607efa7b81775cdc133cb0cb",
      "kind": "transparent"
    },
    {
      "address": "0x0f5D1ef48f12b6f691401bfe88c2037c690a6afe",
      "txHash": "0x3413bd5ff2cc898c867a1be8cac65024a47185d4b72e4ea86136543d19510b7b",
      "kind": "transparent"
    },
    {
      "address": "0x90118d110B07ABB82Ba8980D1c5cC96EeA810d2C",
      "txHash": "0x6f76ab7ca416444188ef973bd84c66c9f34fbaacca7fdd2b65a3e1954bd1f088",
      "kind": "transparent"
    },
    {
      "address": "0xcA03Dc4665A8C3603cb4Fd5Ce71Af9649dC00d44",
      "txHash": "0x2c3ed258b55f1b3efe5f986015fb9aa8976ca8b1c6393123f08b38f1d2faf433",
      "kind": "transparent"
    },
    {
      "address": "0x2dE080e97B0caE9825375D31f5D0eD5751fDf16D",
      "txHash": "0x9e82e2fec0845b087d093a97ab384d8957419303e6fbcc4a0b91bbf74fcbe267",
      "kind": "transparent"
    },
    {
      "address": "0x73eccD6288e117cAcA738BDAD4FEC51312166C1A",
      "txHash": "0x40a2ba0a4ea85608a0219fc1b6c97dc6083c5fd712244bbb1b5c76ee9249defb",
      "kind": "transparent"
    },
    {
      "address": "0x381445710b5e73d34aF196c53A3D5cDa58EDBf7A",
      "txHash": "0x7de92bfe58f3f6331d4f43c37978883ed803581b9be32abe1cf88667425d5bc5",
      "kind": "transparent"
    },
    {
      "address": "0x1e2F4432bFeF9E9Ad39DA6d272F4aFf33629c770",
      "txHash": "0x107bc9ea93656bb229f5dabe0d1676fb4f087caeb4e192af183b31ad6a9d7f1c",
      "kind": "transparent"
    },
    {
      "address": "0xed17543171C1459714cdC6519b58fFcC29A3C3c9",
      "txHash": "0xc619fda9e9cf3ee11efc3b429d600e5c35e5bef9a9631e8d4df72947a9515b9b",
      "kind": "transparent"
    },
    {
      "address": "0x677df0cb865368207999F2862Ece576dC56D8dF6",
      "txHash": "0x84d542a9ccd6648a14b8ccff3c6f48e74fc692c2e22ad884c1a9b63c69e77734",
      "kind": "transparent"
    },
    {
      "address": "0x0Cf17D5DcDA9cF25889cEc9ae5610B0FB9725F65",
      "txHash": "0xa8948e587a24d55d14241b801105f24cf62e9a1347eea2c012756c9b5f7604b5",
      "kind": "transparent"
    },
    {
      "address": "0xcEC91d876E8f003110D43381359b1bAd124e7F2b",
      "txHash": "0x78a6aa48b8d49218c194ee01e0ee24662b3ab9bf3c04242e2ec5440538f6a6b7",
      "kind": "transparent"
    },
    {
      "address": "0x5370F78c6af2Da9cF6642382A3a75F9D5aEc9cc1",
      "txHash": "0xe963d65f2edc3afe73978e40600c0536e0ca4ce5f7e1c4bedb1e306552d8d904",
      "kind": "transparent"
    },
    {
      "address": "0xC76A71C4492c11bbaDC841342C4Cb470b5d12193",
      "txHash": "0x0bcb2e440d4711739c3df1e4aeb2c0aed127fb3c5f928dea174269ad01b13335",
      "kind": "transparent"
    },
    {
      "address": "0xF818A7C2AFC45cF4B9DDC48933C9A1edD624e46f",
      "txHash": "0x20880d526317fbbbfa7e875251c66b80f47ba741af141036d7913f1068ae4835",
      "kind": "transparent"
    },
    {
      "address": "0x093e8F4d8f267d2CeEc9eB889E2054710d187beD",
      "txHash": "0x24a49a1aba163d61fd1d268ce95775fc15ea0570d33b0e2bbbc39c6385f6a22a",
      "kind": "transparent"
    },
    {
      "address": "0x71C95911E9a5D330f4D621842EC243EE1343292e",
      "txHash": "0x060182dc1cd0e8ac8834a20688ac5f880fa4b8e49c7b543930438cc6b5fa645a",
      "kind": "transparent"
    },
    {
      "address": "0x948B3c65b89DF0B4894ABE91E6D02FE579834F8F",
      "txHash": "0x3547490cf7a628a6611629efa3ad3021f4f62c3d9bd6f5b0c6af1e3c0f5a87a5",
      "kind": "transparent"
    },
    {
      "address": "0x1a6a3e7Bb246158dF31d8f924B84D961669Ba4e5",
      "txHash": "0x3baad3f65e8c4d1c0bbc8c9d0adeee2d79652ca9b36f203a96bda5b353742c8e",
      "kind": "transparent"
    }
  ],
  "impls": {
    "6ebd7b39065a7ed71e29d75894c757eaf3454cd037d13a2560c7b15250b9542b": {
      "address": "0xc63d2a04762529edB649d7a4cC3E57A0085e8544",
      "txHash": "0xb51f35146915d7749147960a7123cec8577ce6f85f51ad5f4be7bdbbfbc570a6",
      "layout": {
        "solcVersion": "0.8.26",
        "storage": [
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Minterable",
            "src": "contracts/Minterable.sol:9"
          },
          {
            "label": "basisPointsRate",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "FeeAggregator",
            "src": "contracts/interfaces/FeeAggregator.sol:12"
          },
          {
            "label": "feeAccount",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "FeeAggregator",
            "src": "contracts/interfaces/FeeAggregator.sol:14"
          },
          {
            "label": "maximumFee",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "FeeAggregator",
            "src": "contracts/interfaces/FeeAggregator.sol:15"
          },
          {
            "label": "feeAccounts",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FeeAggregator",
            "src": "contracts/interfaces/FeeAggregator.sol:21"
          },
          {
            "label": "feeRateAccounts",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FeeAggregator",
            "src": "contracts/interfaces/FeeAggregator.sol:23"
          },
          {
            "label": "feeAccountKeys",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_address)dyn_storage",
            "contract": "FeeAggregator",
            "src": "contracts/interfaces/FeeAggregator.sol:25"
          },
          {
            "label": "lastLockTime",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TimeLock",
            "src": "contracts/interfaces/TimeLock.sol:7"
          },
          {
            "label": "timeLockStatus",
            "offset": 0,
            "slot": "8",
            "type": "t_bool",
            "contract": "TimeLock",
            "src": "contracts/interfaces/TimeLock.sol:9"
          },
          {
            "label": "_decimals",
            "offset": 1,
            "slot": "8",
            "type": "t_uint8",
            "contract": "TokenBaseUpgradeable",
            "src": "contracts/TokenBaseUpgradeable.sol:32"
          },
          {
            "label": "whitestatus",
            "offset": 2,
            "slot": "8",
            "type": "t_bool",
            "contract": "TokenUpgradeable",
            "src": "contracts/TokenUpgradeable.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2111_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlEnumerableStorage)272_storage": {
            "label": "struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage",
            "members": [
              {
                "label": "_roleMembers",
                "type": "t_mapping(t_bytes32,t_struct(AddressSet)2111_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)35_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2111_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1967_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(EIP712Storage)977_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC20Storage)455_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)358_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NoncesStorage)817_storage": {
            "label": "struct NoncesUpgradeable.NoncesStorage",
            "members": [
              {
                "label": "_nonces",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)178_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)880_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)1967_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_positions",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControlEnumerable": [
            {
              "contract": "AccessControlEnumerableUpgradeable",
              "label": "_roleMembers",
              "type": "t_mapping(t_bytes32,t_struct(AddressSet)2111_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol:19",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
