{
	"id": "3c8ed4ce0104026a38c44635b83da97a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"rescue/Rescuable.sol": {
				"content": "/**\n * SPDX-License-Identifier: Apache-2.0\n *\n * Copyright (c) 2023, Circle Internet Financial, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npragma solidity 0.6.12;\n\nimport { Ownable } from \"../access/Ownable.sol\";\n// import { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n// import { SafeERC20 } from \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\nimport { IERC20 } from \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/IERC20.sol\";\nimport { SafeERC20 } from \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol\";\n\n\ncontract Rescuable is Ownable {\n    using SafeERC20 for IERC20;\n\n    address private _rescuer;\n\n    event RescuerChanged(address indexed newRescuer);\n\n    /**\n     * @notice Returns current rescuer\n     * @return Rescuer's address\n     */\n    function rescuer() external view returns (address) {\n        return _rescuer;\n    }\n\n    /**\n     * @notice Revert if called by any account other than the rescuer.\n     */\n    modifier onlyRescuer() {\n        require(msg.sender == _rescuer, \"Rescuable: caller is not the rescuer\");\n        _;\n    }\n\n    /**\n     * @notice Rescue ERC20 tokens locked up in this contract.\n     * @param tokenContract ERC20 token contract address\n     * @param to        Recipient address\n     * @param amount    Amount to withdraw\n     */\n    function rescueERC20(\n        IERC20 tokenContract,\n        address to,\n        uint256 amount\n    ) external onlyRescuer {\n        tokenContract.safeTransfer(to, amount);\n    }\n\n    /**\n     * @notice Updates the rescuer address.\n     * @param newRescuer The address of the new rescuer.\n     */\n    function updateRescuer(address newRescuer) external onlyOwner {\n        require(\n            newRescuer != address(0),\n            \"Rescuable: new rescuer is the zero address\"\n        );\n        _rescuer = newRescuer;\n        emit RescuerChanged(newRescuer);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"access/Ownable.sol": {
				"content": "/**\n * SPDX-License-Identifier: MIT\n *\n * Copyright (c) 2018 zOS Global Limited.\n * Copyright (c) 2018-2020 CENTRE SECZ\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\npragma solidity 0.6.12;\n\n/**\n * @notice The Ownable contract has an owner address, and provides basic\n * authorization control functions\n * @dev Forked from https://github.com/OpenZeppelin/openzeppelin-labs/blob/3887ab77b8adafba4a26ace002f3a684c1a3388b/upgradeability_ownership/contracts/ownership/Ownable.sol\n * Modifications:\n * 1. Consolidate OwnableStorage into this contract (7/13/18)\n * 2. Reformat, conform to Solidity 0.6 syntax, and add error messages (5/13/20)\n * 3. Make public functions external (5/27/20)\n */\ncontract Ownable {\n    // Owner of the contract\n    address private _owner;\n\n    /**\n     * @dev Event to show ownership has been transferred\n     * @param previousOwner representing the address of the previous owner\n     * @param newOwner representing the address of the new owner\n     */\n    event OwnershipTransferred(address previousOwner, address newOwner);\n\n    /**\n     * @dev The constructor sets the original owner of the contract to the sender account.\n     */\n    constructor() public {\n        setOwner(msg.sender);\n    }\n\n    /**\n     * @dev Tells the address of the owner\n     * @return the address of the owner\n     */\n    function owner() external view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Tells the address of the owner\n     * @return the address of the owner\n     */\n    function getOwner() internal view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Sets a new owner address\n     */\n    function setOwner(address newOwner) internal {\n        _owner = newOwner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(msg.sender == _owner, \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\n     * @param newOwner The address to transfer ownership to.\n     */\n    function transferOwnership(address newOwner) external onlyOwner {\n        require(\n            newOwner != address(0),\n            \"Ownable: new owner is the zero address\"\n        );\n        emit OwnershipTransferred(_owner, newOwner);\n        setOwner(newOwner);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2 <0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 2000000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Forked from https://github.com/OpenZeppelin/openzeppelin-labs/blob/3887ab77b8adafba4a26ace002f3a684c1a3388b/upgradeability_ownership/contracts/ownership/Ownable.sol Modifications: 1. Consolidate OwnableStorage into this contract (7/13/18) 2. Reformat, conform to Solidity 0.6 syntax, and add error messages (5/13/20) 3. Make public functions external (5/27/20)",
						"events": {
							"OwnershipTransferred(address,address)": {
								"details": "Event to show ownership has been transferred",
								"params": {
									"newOwner": "representing the address of the new owner",
									"previousOwner": "representing the address of the previous owner"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "The constructor sets the original owner of the contract to the sender account."
							},
							"owner()": {
								"details": "Tells the address of the owner",
								"returns": {
									"_0": "the address of the owner"
								}
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"access/Ownable.sol\":1718:3404  contract Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"access/Ownable.sol\":2193:2251  constructor() public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"access/Ownable.sol\":2224:2244  setOwner(msg.sender) */\n  tag_4\n    /* \"access/Ownable.sol\":2233:2243  msg.sender */\n  caller\n    /* \"access/Ownable.sol\":2224:2232  setOwner */\n  tag_5\n    /* \"access/Ownable.sol\":2224:2244  setOwner(msg.sender) */\n  jump\t// in\ntag_4:\n    /* \"access/Ownable.sol\":1718:3404  contract Ownable {... */\n  jump(tag_6)\n    /* \"access/Ownable.sol\":2681:2760  function setOwner(address newOwner) internal {... */\ntag_5:\n    /* \"access/Ownable.sol\":2736:2742  _owner */\n  0x00\n    /* \"access/Ownable.sol\":2736:2753  _owner = newOwner */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"access/Ownable.sol\":2681:2760  function setOwner(address newOwner) internal {... */\n  jump\t// out\n    /* \"access/Ownable.sol\":1718:3404  contract Ownable {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"access/Ownable.sol\":1718:3404  contract Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"access/Ownable.sol\":2356:2435  function owner() external view returns (address) {... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      0x40\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"access/Ownable.sol\":3133:3402  function transferOwnership(address newOwner) external onlyOwner {... */\n    tag_4:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_9\n      jump\t// in\n    tag_7:\n      stop\n        /* \"access/Ownable.sol\":2356:2435  function owner() external view returns (address) {... */\n    tag_6:\n        /* \"access/Ownable.sol\":2396:2403  address */\n      0x00\n        /* \"access/Ownable.sol\":2422:2428  _owner */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"access/Ownable.sol\":2356:2435  function owner() external view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"access/Ownable.sol\":3133:3402  function transferOwnership(address newOwner) external onlyOwner {... */\n    tag_9:\n        /* \"access/Ownable.sol\":2901:2907  _owner */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x00))\n        /* \"access/Ownable.sol\":2887:2897  msg.sender */\n      caller\n        /* \"access/Ownable.sol\":2887:2907  msg.sender == _owner */\n      eq\n        /* \"access/Ownable.sol\":2879:2944  require(msg.sender == _owner, \"Ownable: caller is not the owner\") */\n      tag_12\n      jumpi\n      0x40\n      dup1\n      mload\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_12:\n        /* \"access/Ownable.sol\":3228:3250  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"access/Ownable.sol\":3207:3314  require(... */\n      tag_14\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_14:\n        /* \"access/Ownable.sol\":3350:3356  _owner */\n      sload(0x00)\n        /* \"access/Ownable.sol\":3329:3367  OwnershipTransferred(_owner, newOwner) */\n      0x40\n      dup1\n      mload\n        /* \"access/Ownable.sol\":3350:3356  _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap3\n      dup4\n      and\n        /* \"access/Ownable.sol\":3329:3367  OwnershipTransferred(_owner, newOwner) */\n      dup2\n      mstore\n      swap2\n      dup4\n      and\n      0x20\n      dup4\n      add\n      mstore\n      dup1\n      mload\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log1\n        /* \"access/Ownable.sol\":3377:3395  setOwner(newOwner) */\n      tag_15\n        /* \"access/Ownable.sol\":3386:3394  newOwner */\n      dup2\n        /* \"access/Ownable.sol\":3377:3385  setOwner */\n      tag_16\n        /* \"access/Ownable.sol\":3377:3395  setOwner(newOwner) */\n      jump\t// in\n    tag_15:\n        /* \"access/Ownable.sol\":3133:3402  function transferOwnership(address newOwner) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"access/Ownable.sol\":2681:2760  function setOwner(address newOwner) internal {... */\n    tag_16:\n        /* \"access/Ownable.sol\":2736:2742  _owner */\n      0x00\n        /* \"access/Ownable.sol\":2736:2753  _owner = newOwner */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"access/Ownable.sol\":2681:2760  function setOwner(address newOwner) internal {... */\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n\n    auxdata: 0xa2646970667358221220cb3bdca54d5cd5f1a8f2a609d73c6913ac22e888642a4e585923d26d0ca983e164736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061001a3361001f565b610041565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6102b3806100506000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638da5cb5b1461003b578063f2fde38b1461006c575b600080fd5b6100436100a1565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61009f6004803603602081101561008257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166100bd565b005b60005473ffffffffffffffffffffffffffffffffffffffff1690565b60005473ffffffffffffffffffffffffffffffffffffffff16331461014357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff81166101af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806102586026913960400191505060405180910390fd5b6000546040805173ffffffffffffffffffffffffffffffffffffffff9283168152918316602083015280517f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09281900390910190a161020d81610210565b50565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220cb3bdca54d5cd5f1a8f2a609d73c6913ac22e888642a4e585923d26d0ca983e164736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x1F JUMP JUMPDEST PUSH2 0x41 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x2B3 DUP1 PUSH2 0x50 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0xA1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBD JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x143 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x258 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 PUSH2 0x20D DUP2 PUSH2 0x210 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373A2646970667358221220CB3BDCA54D5C 0xD5 CALL 0xA8 CALLCODE 0xA6 MULMOD 0xD7 EXTCODECOPY PUSH10 0x13AC22E888642A4E5859 0x23 0xD2 PUSH14 0xCA983E164736F6C634300060C00 CALLER ",
							"sourceMap": "1718:1686:0:-:0;;;2193:58;;;;;;;;;-1:-1:-1;2224:20:0;2233:10;2224:8;:20::i;:::-;1718:1686;;2681:79;2736:6;:17;;-1:-1:-1;;;;;;2736:17:0;-1:-1:-1;;;;;2736:17:0;;;;;;;;;;2681:79::o;1718:1686::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80638da5cb5b1461003b578063f2fde38b1461006c575b600080fd5b6100436100a1565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61009f6004803603602081101561008257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166100bd565b005b60005473ffffffffffffffffffffffffffffffffffffffff1690565b60005473ffffffffffffffffffffffffffffffffffffffff16331461014357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff81166101af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806102586026913960400191505060405180910390fd5b6000546040805173ffffffffffffffffffffffffffffffffffffffff9283168152918316602083015280517f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09281900390910190a161020d81610210565b50565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220cb3bdca54d5cd5f1a8f2a609d73c6913ac22e888642a4e585923d26d0ca983e164736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0xA1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBD JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x143 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x258 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 PUSH2 0x20D DUP2 PUSH2 0x210 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373A2646970667358221220CB3BDCA54D5C 0xD5 CALL 0xA8 CALLCODE 0xA6 MULMOD 0xD7 EXTCODECOPY PUSH10 0x13AC22E888642A4E5859 0x23 0xD2 PUSH14 0xCA983E164736F6C634300060C00 CALLER ",
							"sourceMap": "1718:1686:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2356:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3133:269;;;;;;;;;;;;;;;;-1:-1:-1;3133:269:0;;;;:::i;:::-;;2356:79;2396:7;2422:6;;;2356:79;:::o;3133:269::-;2901:6;;;;2887:10;:20;2879:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3228:22:::1;::::0;::::1;3207:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3350:6;::::0;3329:38:::1;::::0;;3350:6:::1;::::0;;::::1;3329:38:::0;;;;::::1;;::::0;::::1;::::0;;;::::1;::::0;;;;;;;;::::1;3377:18;3386:8;3377;:18::i;:::-;3133:269:::0;:::o;2681:79::-;2736:6;:17;;;;;;;;;;;;;;;2681:79::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "138200",
								"executionCost": "21090",
								"totalCost": "159290"
							},
							"external": {
								"owner()": "991",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"getOwner()": "infinite",
								"setOwner(address)": "20851"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1718,
									"end": 3404,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1718,
									"end": 3404,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1718,
									"end": 3404,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2193,
									"end": 2251,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2193,
									"end": 2251,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2193,
									"end": 2251,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2193,
									"end": 2251,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2193,
									"end": 2251,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2193,
									"end": 2251,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2193,
									"end": 2251,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2193,
									"end": 2251,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2193,
									"end": 2251,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2193,
									"end": 2251,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2224,
									"end": 2244,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2233,
									"end": 2243,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 2224,
									"end": 2232,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2224,
									"end": 2244,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2224,
									"end": 2244,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2224,
									"end": 2244,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1718,
									"end": 3404,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1718,
									"end": 3404,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2681,
									"end": 2760,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2681,
									"end": 2760,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2736,
									"end": 2742,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2681,
									"end": 2760,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1718,
									"end": 3404,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1718,
									"end": 3404,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1718,
									"end": 3404,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1718,
									"end": 3404,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1718,
									"end": 3404,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1718,
									"end": 3404,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1718,
									"end": 3404,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1718,
									"end": 3404,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1718,
									"end": 3404,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cb3bdca54d5cd5f1a8f2a609d73c6913ac22e888642a4e585923d26d0ca983e164736f6c634300060c0033",
									".code": [
										{
											"begin": 1718,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 3404,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2422,
											"end": 2428,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2428,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2422,
											"end": 2428,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2901,
											"end": 2907,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2907,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2901,
											"end": 2907,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2897,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3228,
											"end": 3250,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3228,
											"end": 3250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3228,
											"end": 3250,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "PUSH data",
											"source": 0,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3350,
											"end": 3356,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3356,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3350,
											"end": 3356,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3356,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3356,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 3377,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3386,
											"end": 3394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3377,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3377,
											"end": 3395,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3377,
											"end": 3395,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3377,
											"end": 3395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2681,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2681,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2753,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2753,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 2736,
											"end": 2753,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2753,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2736,
											"end": 2753,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2753,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2753,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2753,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2753,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2681,
											"end": 2760,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Forked from https://github.com/OpenZeppelin/openzeppelin-labs/blob/3887ab77b8adafba4a26ace002f3a684c1a3388b/upgradeability_ownership/contracts/ownership/Ownable.sol Modifications: 1. Consolidate OwnableStorage into this contract (7/13/18) 2. Reformat, conform to Solidity 0.6 syntax, and add error messages (5/13/20) 3. Make public functions external (5/27/20)\",\"events\":{\"OwnershipTransferred(address,address)\":{\"details\":\"Event to show ownership has been transferred\",\"params\":{\"newOwner\":\"representing the address of the new owner\",\"previousOwner\":\"representing the address of the previous owner\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"The constructor sets the original owner of the contract to the sender account.\"},\"owner()\":{\"details\":\"Tells the address of the owner\",\"returns\":{\"_0\":\"the address of the owner\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"The Ownable contract has an owner address, and provides basic authorization control functions\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000000},\"remappings\":[]},\"sources\":{\"access/Ownable.sol\":{\"keccak256\":\"0x69c9a7b00a543b5dce3376277b8d258006e0f3072c5c08603c5b2df25c68cc3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c457b7ba521bb3077bd2b2c6abcafea1fbc59091cddad1f6a02325f5d180f3e\",\"dweb:/ipfs/QmQVw7n5563svTYhAeghy3sRGDqwQrc7EuakgVLG5Edcf3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "The Ownable contract has an owner address, and provides basic authorization control functions",
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122053a19384fbf4807b60c82517a1aa1990786fbb55844501769a422250dbe0a6f864736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122053a19384fbf4807b60c82517a1aa1990786fbb55844501769a422250dbe0a6f864736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 LOG1 SWAP4 DUP5 0xFB DELEGATECALL DUP1 PUSH28 0x60C82517A1AA1990786FBB55844501769A422250DBE0A6F864736F6C PUSH4 0x4300060C STOP CALLER ",
							"sourceMap": "630:6594:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122053a19384fbf4807b60c82517a1aa1990786fbb55844501769a422250dbe0a6f864736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 LOG1 SWAP4 DUP5 0xFB DELEGATECALL DUP1 PUSH28 0x60C82517A1AA1990786FBB55844501769A422250DBE0A6F864736F6C PUSH4 0x4300060C STOP CALLER ",
							"sourceMap": "630:6594:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122053a19384fbf4807b60c82517a1aa1990786fbb55844501769a422250dbe0a6f864736f6c634300060c0033",
									".code": [
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol\":616:3720  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol\":616:3720  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122068cfd36fee4a716c99257fcb4ec0ebc4e02e734cfcfe5f7b9f1119c588fbab0d64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122068cfd36fee4a716c99257fcb4ec0ebc4e02e734cfcfe5f7b9f1119c588fbab0d64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xCFD36FEE4A716C9925 PUSH32 0xCB4EC0EBC4E02E734CFCFE5F7B9F1119C588FBAB0D64736F6C634300060C0033 ",
							"sourceMap": "616:3104:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122068cfd36fee4a716c99257fcb4ec0ebc4e02e734cfcfe5f7b9f1119c588fbab0d64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xCFD36FEE4A716C9925 PUSH32 0xCB4EC0EBC4E02E734CFCFE5F7B9F1119C588FBAB0D64736F6C634300060C0033 ",
							"sourceMap": "616:3104:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122068cfd36fee4a716c99257fcb4ec0ebc4e02e734cfcfe5f7b9f1119c588fbab0d64736f6c634300060c0033",
									".code": [
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":134:7818  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":134:7818  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220edb2a8d5cc6f56355403576885ea6648be68274f859f42067384b7acde2fe54464736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220edb2a8d5cc6f56355403576885ea6648be68274f859f42067384b7acde2fe54464736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xB2 0xA8 0xD5 0xCC PUSH16 0x56355403576885EA6648BE68274F859F TIMESTAMP MOD PUSH20 0x84B7ACDE2FE54464736F6C634300060C00330000 ",
							"sourceMap": "134:7684:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220edb2a8d5cc6f56355403576885ea6648be68274f859f42067384b7acde2fe54464736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xB2 0xA8 0xD5 0xCC PUSH16 0x56355403576885EA6648BE68274F859F TIMESTAMP MOD PUSH20 0x84B7ACDE2FE54464736F6C634300060C00330000 ",
							"sourceMap": "134:7684:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "INVALID",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220edb2a8d5cc6f56355403576885ea6648be68274f859f42067384b7acde2fe54464736f6c634300060c0033",
									".code": [
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"rescue/Rescuable.sol": {
				"Rescuable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newRescuer",
									"type": "address"
								}
							],
							"name": "RescuerChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "tokenContract",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "rescueERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rescuer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newRescuer",
									"type": "address"
								}
							],
							"name": "updateRescuer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Tells the address of the owner",
								"returns": {
									"_0": "the address of the owner"
								}
							},
							"rescueERC20(address,address,uint256)": {
								"params": {
									"amount": "Amount to withdraw",
									"to": "Recipient address",
									"tokenContract": "ERC20 token contract address"
								}
							},
							"rescuer()": {
								"returns": {
									"_0": "Rescuer's address"
								}
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							},
							"updateRescuer(address)": {
								"params": {
									"newRescuer": "The address of the new rescuer."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"rescue/Rescuable.sol\":1152:2486  contract Rescuable is Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"access/Ownable.sol\":2224:2244  setOwner(msg.sender) */\n  tag_4\n    /* \"access/Ownable.sol\":2233:2243  msg.sender */\n  caller\n    /* \"access/Ownable.sol\":2224:2232  setOwner */\n  tag_5\n    /* \"access/Ownable.sol\":2224:2244  setOwner(msg.sender) */\n  jump\t// in\ntag_4:\n    /* \"rescue/Rescuable.sol\":1152:2486  contract Rescuable is Ownable {... */\n  jump(tag_6)\n    /* \"access/Ownable.sol\":2681:2760  function setOwner(address newOwner) internal {... */\ntag_5:\n    /* \"access/Ownable.sol\":2736:2742  _owner */\n  0x00\n    /* \"access/Ownable.sol\":2736:2753  _owner = newOwner */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"access/Ownable.sol\":2681:2760  function setOwner(address newOwner) internal {... */\n  jump\t// out\n    /* \"rescue/Rescuable.sol\":1152:2486  contract Rescuable is Ownable {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"rescue/Rescuable.sol\":1152:2486  contract Rescuable is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xb2118a8d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_8:\n      dup1\n      0x2ab60045\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x38a63183\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"rescue/Rescuable.sol\":2220:2484  function updateRescuer(address newRescuer) external onlyOwner {... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_11\n      jump\t// in\n    tag_9:\n      stop\n        /* \"rescue/Rescuable.sol\":1395:1478  function rescuer() external view returns (address) {... */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      0x40\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"access/Ownable.sol\":2356:2435  function owner() external view returns (address) {... */\n    tag_5:\n      tag_12\n      tag_15\n      jump\t// in\n        /* \"rescue/Rescuable.sol\":1920:2097  function rescueERC20(... */\n    tag_6:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_18\n      jump\t// in\n        /* \"access/Ownable.sol\":3133:3402  function transferOwnership(address newOwner) external onlyOwner {... */\n    tag_7:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_21\n      jump\t// in\n        /* \"rescue/Rescuable.sol\":2220:2484  function updateRescuer(address newRescuer) external onlyOwner {... */\n    tag_11:\n        /* \"access/Ownable.sol\":2901:2907  _owner */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x00))\n        /* \"access/Ownable.sol\":2887:2897  msg.sender */\n      caller\n        /* \"access/Ownable.sol\":2887:2907  msg.sender == _owner */\n      eq\n        /* \"access/Ownable.sol\":2879:2944  require(msg.sender == _owner, \"Ownable: caller is not the owner\") */\n      tag_23\n      jumpi\n      0x40\n      dup1\n      mload\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_23:\n        /* \"rescue/Rescuable.sol\":2313:2337  newRescuer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"rescue/Rescuable.sol\":2292:2405  require(... */\n      tag_25\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_2b73485905d4051917013780743b3f01a5e5307ebb5dfb7e3a6d0a16dcb40a3f\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_25:\n        /* \"rescue/Rescuable.sol\":2415:2423  _rescuer */\n      0x01\n        /* \"rescue/Rescuable.sol\":2415:2436  _rescuer = newRescuer */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"rescue/Rescuable.sol\":2451:2477  RescuerChanged(newRescuer) */\n      mload(0x40)\n      0xe475e580d85111348e40d8ca33cfdd74c30fe1655c2d8537a13abc10065ffa5a\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"rescue/Rescuable.sol\":2220:2484  function updateRescuer(address newRescuer) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"rescue/Rescuable.sol\":1395:1478  function rescuer() external view returns (address) {... */\n    tag_13:\n        /* \"rescue/Rescuable.sol\":1463:1471  _rescuer */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x01))\n        /* \"rescue/Rescuable.sol\":1395:1478  function rescuer() external view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"access/Ownable.sol\":2356:2435  function owner() external view returns (address) {... */\n    tag_15:\n        /* \"access/Ownable.sol\":2396:2403  address */\n      0x00\n        /* \"access/Ownable.sol\":2422:2428  _owner */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"access/Ownable.sol\":2356:2435  function owner() external view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"rescue/Rescuable.sol\":1920:2097  function rescueERC20(... */\n    tag_18:\n        /* \"rescue/Rescuable.sol\":1626:1634  _rescuer */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x01))\n        /* \"rescue/Rescuable.sol\":1612:1622  msg.sender */\n      caller\n        /* \"rescue/Rescuable.sol\":1612:1634  msg.sender == _rescuer */\n      eq\n        /* \"rescue/Rescuable.sol\":1604:1675  require(msg.sender == _rescuer, \"Rescuable: caller is not the rescuer\") */\n      tag_29\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_8bca11e2be39f1d0fced52e0acd4b8db520b6b8403c87b45e64d1349895f0aab\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_29:\n        /* \"rescue/Rescuable.sol\":2052:2090  tokenContract.safeTransfer(to, amount) */\n      tag_31\n        /* \"rescue/Rescuable.sol\":2052:2078  tokenContract.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"rescue/Rescuable.sol\":2079:2081  to */\n      dup4\n        /* \"rescue/Rescuable.sol\":2083:2089  amount */\n      dup4\n        /* \"rescue/Rescuable.sol\":2052:2078  tokenContract.safeTransfer */\n      tag_32\n        /* \"rescue/Rescuable.sol\":2052:2090  tokenContract.safeTransfer(to, amount) */\n      jump\t// in\n    tag_31:\n        /* \"rescue/Rescuable.sol\":1920:2097  function rescueERC20(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"access/Ownable.sol\":3133:3402  function transferOwnership(address newOwner) external onlyOwner {... */\n    tag_21:\n        /* \"access/Ownable.sol\":2901:2907  _owner */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x00))\n        /* \"access/Ownable.sol\":2887:2897  msg.sender */\n      caller\n        /* \"access/Ownable.sol\":2887:2907  msg.sender == _owner */\n      eq\n        /* \"access/Ownable.sol\":2879:2944  require(msg.sender == _owner, \"Ownable: caller is not the owner\") */\n      tag_34\n      jumpi\n      0x40\n      dup1\n      mload\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_34:\n        /* \"access/Ownable.sol\":3228:3250  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"access/Ownable.sol\":3207:3314  require(... */\n      tag_36\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_36:\n        /* \"access/Ownable.sol\":3350:3356  _owner */\n      sload(0x00)\n        /* \"access/Ownable.sol\":3329:3367  OwnershipTransferred(_owner, newOwner) */\n      0x40\n      dup1\n      mload\n        /* \"access/Ownable.sol\":3350:3356  _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap3\n      dup4\n      and\n        /* \"access/Ownable.sol\":3329:3367  OwnershipTransferred(_owner, newOwner) */\n      dup2\n      mstore\n      swap2\n      dup4\n      and\n      0x20\n      dup4\n      add\n      mstore\n      dup1\n      mload\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log1\n        /* \"access/Ownable.sol\":3377:3395  setOwner(newOwner) */\n      tag_37\n        /* \"access/Ownable.sol\":3386:3394  newOwner */\n      dup2\n        /* \"access/Ownable.sol\":3377:3385  setOwner */\n      tag_38\n        /* \"access/Ownable.sol\":3377:3395  setOwner(newOwner) */\n      jump\t// in\n    tag_37:\n        /* \"access/Ownable.sol\":3133:3402  function transferOwnership(address newOwner) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol\":704:879  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_32:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol\":813:871  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x40\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x64\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol\":836:859  token.transfer.selector */\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol\":813:871  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      or\n      swap1\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol\":786:872  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_31\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol\":806:811  token */\n      dup5\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol\":786:805  _callOptionalReturn */\n      tag_41\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol\":786:872  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n        /* \"access/Ownable.sol\":2681:2760  function setOwner(address newOwner) internal {... */\n    tag_38:\n        /* \"access/Ownable.sol\":2736:2742  _owner */\n      0x00\n        /* \"access/Ownable.sol\":2736:2753  _owner = newOwner */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"access/Ownable.sol\":2681:2760  function setOwner(address newOwner) internal {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol\":2967:3718  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_41:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol\":3386:3409  bytes memory returndata */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_44\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol\":3440:3444  data */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol\":3420:3425  token */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol\":3412:3439  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_45\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_44:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol\":3495:3512  returndata.length */\n      dup1\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol\":3386:3481  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol\":3495:3516  returndata.length > 0 */\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol\":3491:3712  if (returndata.length > 0) { // Return data is optional... */\n      tag_31\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol\":3635:3645  returndata */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol\":3624:3654  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol\":3616:3701  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_31\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":3581:3774  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_45:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":3684:3696  bytes memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":3715:3767  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_50\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":3737:3743  target */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":3745:3749  data */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":3751:3752  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":3754:3766  errorMessage */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":3715:3736  functionCallWithValue */\n      tag_51\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":3715:3767  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_50:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":3708:3767  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":3581:3774  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_49:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":4608:5131  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_51:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":4735:4747  bytes memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":4792:4797  value */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":4767:4788  address(this).balance */\n      selfbalance\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":4767:4797  address(this).balance >= value */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":4759:4840  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_53\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_53:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":4858:4876  isContract(target) */\n      tag_54\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":4869:4875  target */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":4858:4868  isContract */\n      tag_55\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":4858:4876  isContract(target) */\n      jump\t// in\n    tag_54:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":4850:4910  require(isContract(target), \"Address: call to non-contract\") */\n      tag_56\n      jumpi\n      0x40\n      dup1\n      mload\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1d\n      0x24\n      dup3\n      add\n      mstore\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_56:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":4981:4993  bool success */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":4995:5018  bytes memory returndata */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":5022:5028  target */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":5022:5033  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":5042:5047  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":5050:5054  data */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":5022:5055  target.call{ value: value }(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_57:\n      0x20\n      dup4\n      lt\n      tag_59\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      swap1\n      swap3\n      add\n      swap2\n      0x20\n      swap2\n      dup3\n      add\n      swap2\n      add\n      jump(tag_57)\n    tag_59:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_62\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_61)\n    tag_62:\n      0x60\n      swap2\n      pop\n    tag_61:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":4980:5055  (bool success, bytes memory returndata) = target.call{ value: value }(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":5072:5124  _verifyCallResult(success, returndata, errorMessage) */\n      tag_63\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":5090:5097  success */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":5099:5109  returndata */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":5111:5123  errorMessage */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":5072:5089  _verifyCallResult */\n      tag_64\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":5072:5124  _verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_63:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":5065:5124  return _verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":4608:5131  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n    tag_55:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":1086:1106  extcodesize(account) */\n      extcodesize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":1124:1132  size > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":7091:7816  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_64:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":7206:7218  bytes memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":7234:7241  success */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n      iszero\n      tag_67\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":7264:7274  returndata */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":7257:7274  return returndata */\n      jump(tag_49)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n    tag_67:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":7375:7392  returndata.length */\n      dup3\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":7375:7396  returndata.length > 0 */\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":7371:7800  if (returndata.length > 0) {... */\n      tag_69\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":7633:7643  returndata */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":7627:7644  mload(returndata) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":7693:7708  returndata_size */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":7680:7690  returndata */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":7676:7678  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":7672:7691  add(32, returndata) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":7665:7709  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":7582:7727  {... */\n    tag_69:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":7772:7784  errorMessage */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":7765:7785  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_71:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_73\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_71)\n    tag_73:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_74\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_74:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_2b73485905d4051917013780743b3f01a5e5307ebb5dfb7e3a6d0a16dcb40a3f 526573637561626c653a206e6577207265736375657220697320746865207a65726f2061646472657373\n    data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c 416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c\n    data_8bca11e2be39f1d0fced52e0acd4b8db520b6b8403c87b45e64d1349895f0aab 526573637561626c653a2063616c6c6572206973206e6f74207468652072657363756572\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n\n    auxdata: 0xa2646970667358221220f9d1b03c12575f2dc604c701fbfd021417c6ba9df4034cf2a50bdbbe2696752064736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061001a3361001f565b610041565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b610a10806100506000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80638da5cb5b116100505780638da5cb5b146100d2578063b2118a8d146100da578063f2fde38b1461011d57610067565b80632ab600451461006c57806338a63183146100a1575b600080fd5b61009f6004803603602081101561008257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610150565b005b6100a96102b1565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6100a96102cd565b61009f600480360360608110156100f057600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356102e9565b61009f6004803603602081101561013357600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661037f565b60005473ffffffffffffffffffffffffffffffffffffffff1633146101d657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8116610242576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061093d602a913960400191505060405180910390fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517fe475e580d85111348e40d8ca33cfdd74c30fe1655c2d8537a13abc10065ffa5a90600090a250565b60015473ffffffffffffffffffffffffffffffffffffffff1690565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b60015473ffffffffffffffffffffffffffffffffffffffff163314610359576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061098d6024913960400191505060405180910390fd5b61037a73ffffffffffffffffffffffffffffffffffffffff841683836104d2565b505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461040557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8116610471576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806109176026913960400191505060405180910390fd5b6000546040805173ffffffffffffffffffffffffffffffffffffffff9283168152918316602083015280517f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09281900390910190a16104cf8161055f565b50565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905261037a9084906105a6565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6060610608826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661067e9092919063ffffffff16565b80519091501561037a5780806020019051602081101561062757600080fd5b505161037a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806109b1602a913960400191505060405180910390fd5b606061068d8484600085610697565b90505b9392505050565b6060824710156106f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806109676026913960400191505060405180910390fd5b6106fb85610852565b61076657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b602083106107d057805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610793565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610832576040519150601f19603f3d011682016040523d82523d6000602084013e610837565b606091505b5091509150610847828286610858565b979650505050505050565b3b151590565b60608315610867575081610690565b8251156108775782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108db5781810151838201526020016108c3565b50505050905090810190601f1680156109085780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373526573637561626c653a206e6577207265736375657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c526573637561626c653a2063616c6c6572206973206e6f742074686520726573637565725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220f9d1b03c12575f2dc604c701fbfd021417c6ba9df4034cf2a50bdbbe2696752064736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x1F JUMP JUMPDEST PUSH2 0x41 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xA10 DUP1 PUSH2 0x50 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x67 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x50 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0xB2118A8D EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x11D JUMPI PUSH2 0x67 JUMP JUMPDEST DUP1 PUSH4 0x2AB60045 EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x38A63183 EQ PUSH2 0xA1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x150 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA9 PUSH2 0x2B1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xA9 PUSH2 0x2CD JUMP JUMPDEST PUSH2 0x9F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x2E9 JUMP JUMPDEST PUSH2 0x9F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x37F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1D6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x242 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x93D PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE475E580D85111348E40D8CA33CFDD74C30FE1655C2D8537A13ABC10065FFA5A SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x359 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x98D PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x37A PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND DUP4 DUP4 PUSH2 0x4D2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x405 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x471 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x917 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 PUSH2 0x4CF DUP2 PUSH2 0x55F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x37A SWAP1 DUP5 SWAP1 PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH2 0x608 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x67E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x37A JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x37A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x9B1 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0x68D DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x697 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x6F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x967 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6FB DUP6 PUSH2 0x852 JUMP JUMPDEST PUSH2 0x766 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x7D0 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x793 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x832 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x837 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x847 DUP3 DUP3 DUP7 PUSH2 0x858 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x867 JUMPI POP DUP2 PUSH2 0x690 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x877 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8DB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x8C3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x908 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373526573637561626C653A206E65772072 PUSH6 0x736375657220 PUSH10 0x7320746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C52657363 PUSH22 0x61626C653A2063616C6C6572206973206E6F74207468 PUSH6 0x207265736375 PUSH6 0x725361666545 MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A2646970667358221220F9D1B03C SLT JUMPI 0x5F 0x2D 0xC6 DIV 0xC7 ADD 0xFB REVERT MUL EQ OR 0xC6 0xBA SWAP14 DELEGATECALL SUB 0x4C CALLCODE 0xA5 SIGNEXTEND 0xDB 0xBE 0x26 SWAP7 PUSH22 0x2064736F6C634300060C003300000000000000000000 ",
							"sourceMap": "1152:1334:5:-:0;;;;;;;;;;;;-1:-1:-1;2224:20:0;2233:10;2224:8;:20::i;:::-;1152:1334:5;;2681:79:0;2736:6;:17;;-1:-1:-1;;;;;;2736:17:0;-1:-1:-1;;;;;2736:17:0;;;;;;;;;;2681:79::o;1152:1334:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100675760003560e01c80638da5cb5b116100505780638da5cb5b146100d2578063b2118a8d146100da578063f2fde38b1461011d57610067565b80632ab600451461006c57806338a63183146100a1575b600080fd5b61009f6004803603602081101561008257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610150565b005b6100a96102b1565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6100a96102cd565b61009f600480360360608110156100f057600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356102e9565b61009f6004803603602081101561013357600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661037f565b60005473ffffffffffffffffffffffffffffffffffffffff1633146101d657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8116610242576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061093d602a913960400191505060405180910390fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517fe475e580d85111348e40d8ca33cfdd74c30fe1655c2d8537a13abc10065ffa5a90600090a250565b60015473ffffffffffffffffffffffffffffffffffffffff1690565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b60015473ffffffffffffffffffffffffffffffffffffffff163314610359576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061098d6024913960400191505060405180910390fd5b61037a73ffffffffffffffffffffffffffffffffffffffff841683836104d2565b505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461040557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8116610471576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806109176026913960400191505060405180910390fd5b6000546040805173ffffffffffffffffffffffffffffffffffffffff9283168152918316602083015280517f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09281900390910190a16104cf8161055f565b50565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905261037a9084906105a6565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6060610608826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661067e9092919063ffffffff16565b80519091501561037a5780806020019051602081101561062757600080fd5b505161037a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806109b1602a913960400191505060405180910390fd5b606061068d8484600085610697565b90505b9392505050565b6060824710156106f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806109676026913960400191505060405180910390fd5b6106fb85610852565b61076657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b602083106107d057805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610793565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610832576040519150601f19603f3d011682016040523d82523d6000602084013e610837565b606091505b5091509150610847828286610858565b979650505050505050565b3b151590565b60608315610867575081610690565b8251156108775782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108db5781810151838201526020016108c3565b50505050905090810190601f1680156109085780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373526573637561626c653a206e6577207265736375657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c526573637561626c653a2063616c6c6572206973206e6f742074686520726573637565725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220f9d1b03c12575f2dc604c701fbfd021417c6ba9df4034cf2a50bdbbe2696752064736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x67 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x50 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0xB2118A8D EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x11D JUMPI PUSH2 0x67 JUMP JUMPDEST DUP1 PUSH4 0x2AB60045 EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x38A63183 EQ PUSH2 0xA1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x150 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA9 PUSH2 0x2B1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xA9 PUSH2 0x2CD JUMP JUMPDEST PUSH2 0x9F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x2E9 JUMP JUMPDEST PUSH2 0x9F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x37F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1D6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x242 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x93D PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE475E580D85111348E40D8CA33CFDD74C30FE1655C2D8537A13ABC10065FFA5A SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x359 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x98D PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x37A PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND DUP4 DUP4 PUSH2 0x4D2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x405 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x471 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x917 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 PUSH2 0x4CF DUP2 PUSH2 0x55F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x37A SWAP1 DUP5 SWAP1 PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH2 0x608 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x67E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x37A JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x37A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x9B1 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0x68D DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x697 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x6F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x967 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6FB DUP6 PUSH2 0x852 JUMP JUMPDEST PUSH2 0x766 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x7D0 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x793 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x832 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x837 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x847 DUP3 DUP3 DUP7 PUSH2 0x858 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x867 JUMPI POP DUP2 PUSH2 0x690 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x877 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8DB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x8C3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x908 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373526573637561626C653A206E65772072 PUSH6 0x736375657220 PUSH10 0x7320746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C52657363 PUSH22 0x61626C653A2063616C6C6572206973206E6F74207468 PUSH6 0x207265736375 PUSH6 0x725361666545 MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A2646970667358221220F9D1B03C SLT JUMPI 0x5F 0x2D 0xC6 DIV 0xC7 ADD 0xFB REVERT MUL EQ OR 0xC6 0xBA SWAP14 DELEGATECALL SUB 0x4C CALLCODE 0xA5 SIGNEXTEND 0xDB 0xBE 0x26 SWAP7 PUSH22 0x2064736F6C634300060C003300000000000000000000 ",
							"sourceMap": "1152:1334:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2220:264;;;;;;;;;;;;;;;;-1:-1:-1;2220:264:5;;;;:::i;:::-;;1395:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2356:79:0;;;:::i;1920:177:5:-;;;;;;;;;;;;;;;;-1:-1:-1;1920:177:5;;;;;;;;;;;;;;;;;;:::i;3133:269:0:-;;;;;;;;;;;;;;;;-1:-1:-1;3133:269:0;;;;:::i;2220:264:5:-;2901:6:0;;;;2887:10;:20;2879:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2313:24:5::1;::::0;::::1;2292:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2415:8;:21:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;2451:26:::1;::::0;::::1;::::0;-1:-1:-1;;2451:26:5::1;2220:264:::0;:::o;1395:83::-;1463:8;;;;1395:83;:::o;2356:79:0:-;2396:7;2422:6;;;2356:79;:::o;1920:177:5:-;1626:8;;;;1612:10;:22;1604:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2052:38:::1;:26;::::0;::::1;2079:2:::0;2083:6;2052:26:::1;:38::i;:::-;1920:177:::0;;;:::o;3133:269:0:-;2901:6;;;;2887:10;:20;2879:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3228:22:::1;::::0;::::1;3207:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3350:6;::::0;3329:38:::1;::::0;;3350:6:::1;::::0;;::::1;3329:38:::0;;;;::::1;;::::0;::::1;::::0;;;::::1;::::0;;;;;;;;::::1;3377:18;3386:8;3377;:18::i;:::-;3133:269:::0;:::o;704:175:3:-;813:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;836:23;813:58;;;786:86;;806:5;;786:19;:86::i;2681:79:0:-;2736:6;:17;;;;;;;;;;;;;;;2681:79::o;2967:751:3:-;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;3412:27;;;;:69;;;;;:::i;:::-;3495:17;;3386:95;;-1:-1:-1;3495:21:3;3491:221;;3635:10;3624:30;;;;;;;;;;;;;;;-1:-1:-1;3624:30:3;3616:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3581:193:4;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;;3581:193;;;;;;:::o;4608:523::-;4735:12;4792:5;4767:21;:30;;4759:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;:11;;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;4608:523;-1:-1:-1;;;;;;;4608:523:4:o;726:413::-;1086:20;1124:8;;;726:413::o;7091:725::-;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:4;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "515200",
								"executionCost": "21456",
								"totalCost": "536656"
							},
							"external": {
								"owner()": "1013",
								"rescueERC20(address,address,uint256)": "infinite",
								"rescuer()": "1036",
								"transferOwnership(address)": "infinite",
								"updateRescuer(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1152,
									"end": 2486,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 1152,
									"end": 2486,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1152,
									"end": 2486,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1152,
									"end": 2486,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 1152,
									"end": 2486,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1152,
									"end": 2486,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1152,
									"end": 2486,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1152,
									"end": 2486,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1152,
									"end": 2486,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1152,
									"end": 2486,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1152,
									"end": 2486,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1152,
									"end": 2486,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1152,
									"end": 2486,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2224,
									"end": 2244,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2233,
									"end": 2243,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 2224,
									"end": 2232,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2224,
									"end": 2244,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2224,
									"end": 2244,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2224,
									"end": 2244,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1152,
									"end": 2486,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1152,
									"end": 2486,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2681,
									"end": 2760,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2681,
									"end": 2760,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2736,
									"end": 2742,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2681,
									"end": 2760,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1152,
									"end": 2486,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1152,
									"end": 2486,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1152,
									"end": 2486,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1152,
									"end": 2486,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1152,
									"end": 2486,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1152,
									"end": 2486,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1152,
									"end": 2486,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1152,
									"end": 2486,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1152,
									"end": 2486,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f9d1b03c12575f2dc604c701fbfd021417c6ba9df4034cf2a50bdbbe2696752064736f6c634300060c0033",
									".code": [
										{
											"begin": 1152,
											"end": 2486,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "PUSH",
											"source": 5,
											"value": "B2118A8D"
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "PUSH",
											"source": 5,
											"value": "2AB60045"
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "PUSH",
											"source": 5,
											"value": "38A63183"
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 2486,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2484,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2220,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2220,
											"end": 2484,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2220,
											"end": 2484,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2484,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2484,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2484,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2484,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2484,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2484,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2220,
											"end": 2484,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2484,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2484,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2484,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2484,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2220,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2220,
											"end": 2484,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2484,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2220,
											"end": 2484,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2220,
											"end": 2484,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2220,
											"end": 2484,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2220,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2484,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1478,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1395,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1395,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1395,
											"end": 1478,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1395,
											"end": 1478,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1395,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1478,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1395,
											"end": 1478,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1478,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1478,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1395,
											"end": 1478,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1478,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1478,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1478,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1478,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1478,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1478,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1478,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1478,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1478,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1478,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1395,
											"end": 1478,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1478,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1478,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2220,
											"end": 2484,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2220,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 2907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2901,
											"end": 2907,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2907,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2901,
											"end": 2907,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2897,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2313,
											"end": 2337,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2313,
											"end": 2337,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2313,
											"end": 2337,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "PUSH",
											"source": 5,
											"value": "2A"
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "PUSH data",
											"source": 5,
											"value": "2B73485905D4051917013780743B3F01A5E5307EBB5DFB7E3A6D0A16DCB40A3F"
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "PUSH",
											"source": 5,
											"value": "2A"
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 2292,
											"end": 2405,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2423,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2415,
											"end": 2436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2436,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2436,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 2415,
											"end": 2436,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2436,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2415,
											"end": 2436,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2436,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2436,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2436,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2436,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2477,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2451,
											"end": 2477,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2477,
											"name": "PUSH",
											"source": 5,
											"value": "E475E580D85111348E40D8CA33CFDD74C30FE1655C2D8537A13ABC10065FFA5A"
										},
										{
											"begin": 2451,
											"end": 2477,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2451,
											"end": 2477,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2484,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2484,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1395,
											"end": 1478,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1395,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1471,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1463,
											"end": 1471,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1471,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1463,
											"end": 1471,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1478,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1478,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2422,
											"end": 2428,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2428,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2422,
											"end": 2428,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2435,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1626,
											"end": 1634,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1626,
											"end": 1634,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1626,
											"end": 1634,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1626,
											"end": 1634,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1612,
											"end": 1622,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1612,
											"end": 1634,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "PUSH data",
											"source": 5,
											"value": "8BCA11E2BE39F1D0FCED52E0ACD4B8DB520B6B8403C87B45E64D1349895F0AAB"
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1604,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2052,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2052,
											"end": 2078,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2078,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2081,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2089,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2052,
											"end": 2090,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2052,
											"end": 2090,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2052,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2097,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2901,
											"end": 2907,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2907,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2901,
											"end": 2907,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2897,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2879,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3228,
											"end": 3250,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3228,
											"end": 3250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3228,
											"end": 3250,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "PUSH data",
											"source": 0,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3207,
											"end": 3314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3350,
											"end": 3356,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3356,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3350,
											"end": 3356,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3356,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3356,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3367,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 3377,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3386,
											"end": 3394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3377,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3377,
											"end": 3395,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3377,
											"end": 3395,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3377,
											"end": 3395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3402,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 704,
											"end": 879,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 704,
											"end": 879,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 836,
											"end": 859,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 786,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 786,
											"end": 872,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 806,
											"end": 811,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 806,
											"end": 811,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 786,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 786,
											"end": 872,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2681,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2681,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2753,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2753,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 2736,
											"end": 2753,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2753,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2736,
											"end": 2753,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2753,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2753,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2753,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2753,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2681,
											"end": 2760,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3386,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3440,
											"end": 3444,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 3,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3425,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3495,
											"end": 3512,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3495,
											"end": 3512,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3386,
											"end": 3481,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3386,
											"end": 3481,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3495,
											"end": 3516,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3635,
											"end": 3645,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 3,
											"value": "2A"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH data",
											"source": 3,
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 3,
											"value": "2A"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3684,
											"end": 3696,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3737,
											"end": 3743,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3745,
											"end": 3749,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3751,
											"end": 3752,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3715,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3767,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3767,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4792,
											"end": 4797,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4788,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4797,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4797,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH data",
											"source": 4,
											"value": "565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4869,
											"end": 4875,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4858,
											"end": 4868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 4,
											"value": "1D"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 4,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 4993,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4995,
											"end": 5018,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5022,
											"end": 5028,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5033,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5022,
											"end": 5033,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5042,
											"end": 5047,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5050,
											"end": 5054,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5090,
											"end": 5097,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5099,
											"end": 5109,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5111,
											"end": 5123,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5072,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5065,
											"end": 5124,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1086,
											"end": 1106,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7206,
											"end": 7218,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7234,
											"end": 7241,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7264,
											"end": 7274,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7392,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7392,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7396,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7627,
											"end": 7644,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7693,
											"end": 7708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7680,
											"end": 7690,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7676,
											"end": 7678,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7672,
											"end": 7691,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7665,
											"end": 7709,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7582,
											"end": 7727,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 7582,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7772,
											"end": 7784,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "REVERT",
											"source": 4
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"2B73485905D4051917013780743B3F01A5E5307EBB5DFB7E3A6D0A16DCB40A3F": "526573637561626c653a206e6577207265736375657220697320746865207a65726f2061646472657373",
										"565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
										"8BCA11E2BE39F1D0FCED52E0ACD4B8DB520B6B8403C87B45E64D1349895F0AAB": "526573637561626c653a2063616c6c6572206973206e6f74207468652072657363756572",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564"
									}
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"rescueERC20(address,address,uint256)": "b2118a8d",
							"rescuer()": "38a63183",
							"transferOwnership(address)": "f2fde38b",
							"updateRescuer(address)": "2ab60045"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRescuer\",\"type\":\"address\"}],\"name\":\"RescuerChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rescuer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRescuer\",\"type\":\"address\"}],\"name\":\"updateRescuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Tells the address of the owner\",\"returns\":{\"_0\":\"the address of the owner\"}},\"rescueERC20(address,address,uint256)\":{\"params\":{\"amount\":\"Amount to withdraw\",\"to\":\"Recipient address\",\"tokenContract\":\"ERC20 token contract address\"}},\"rescuer()\":{\"returns\":{\"_0\":\"Rescuer's address\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"updateRescuer(address)\":{\"params\":{\"newRescuer\":\"The address of the new rescuer.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"rescueERC20(address,address,uint256)\":{\"notice\":\"Rescue ERC20 tokens locked up in this contract.\"},\"rescuer()\":{\"notice\":\"Returns current rescuer\"},\"updateRescuer(address)\":{\"notice\":\"Updates the rescuer address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"rescue/Rescuable.sol\":\"Rescuable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000000},\"remappings\":[]},\"sources\":{\"access/Ownable.sol\":{\"keccak256\":\"0x69c9a7b00a543b5dce3376277b8d258006e0f3072c5c08603c5b2df25c68cc3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c457b7ba521bb3077bd2b2c6abcafea1fbc59091cddad1f6a02325f5d180f3e\",\"dweb:/ipfs/QmQVw7n5563svTYhAeghy3sRGDqwQrc7EuakgVLG5Edcf3\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"rescue/Rescuable.sol\":{\"keccak256\":\"0x68c1fd2cb77ee84b0dd24c6f8602bf757837d7660f1002131b29d03e63af569b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1cf9efead15e911724b1bfaa60a8443b040c3d8be9270dd22d4cc29b24bb2e6a\",\"dweb:/ipfs/QmY2gT6Jsfj6tqT74XzaXWWor7mv3GYHcza8pufuTKpwws\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "rescue/Rescuable.sol:Rescuable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1049,
								"contract": "rescue/Rescuable.sol:Rescuable",
								"label": "_rescuer",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"rescueERC20(address,address,uint256)": {
								"notice": "Rescue ERC20 tokens locked up in this contract."
							},
							"rescuer()": {
								"notice": "Returns current rescuer"
							},
							"updateRescuer(address)": {
								"notice": "Updates the rescuer address."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"access/Ownable.sol": {
				"ast": {
					"absolutePath": "access/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							92
						]
					},
					"id": 93,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "1196:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "1221:496:0",
								"text": " @notice The Ownable contract has an owner address, and provides basic\n authorization control functions\n @dev Forked from https://github.com/OpenZeppelin/openzeppelin-labs/blob/3887ab77b8adafba4a26ace002f3a684c1a3388b/upgradeability_ownership/contracts/ownership/Ownable.sol\n Modifications:\n 1. Consolidate OwnableStorage into this contract (7/13/18)\n 2. Reformat, conform to Solidity 0.6 syntax, and add error messages (5/13/20)\n 3. Make public functions external (5/27/20)"
							},
							"fullyImplemented": true,
							"id": 92,
							"linearizedBaseContracts": [
								92
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 92,
									"src": "1770:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1770:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 5,
										"nodeType": "StructuredDocumentation",
										"src": "1799:208:0",
										"text": " @dev Event to show ownership has been transferred\n @param previousOwner representing the address of the previous owner\n @param newOwner representing the address of the new owner"
									},
									"id": 11,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 11,
												"src": "2039:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 11,
												"src": "2062:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2062:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2038:41:0"
									},
									"src": "2012:68:0"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "2214:37:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 16,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2233:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2233:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 15,
														"name": "setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "2224:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2224:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "2224:20:0"
											}
										]
									},
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "2086:102:0",
										"text": " @dev The constructor sets the original owner of the contract to the sender account."
									},
									"id": 21,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2204:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2214:0:0"
									},
									"scope": 92,
									"src": "2193:58:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "2405:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 27,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4,
													"src": "2422:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 26,
												"id": 28,
												"nodeType": "Return",
												"src": "2415:13:0"
											}
										]
									},
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "2257:94:0",
										"text": " @dev Tells the address of the owner\n @return the address of the owner"
									},
									"functionSelector": "8da5cb5b",
									"id": 30,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2370:2:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 30,
												"src": "2396:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2396:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2395:9:0"
									},
									"scope": 92,
									"src": "2356:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "2592:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 36,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4,
													"src": "2609:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 35,
												"id": 37,
												"nodeType": "Return",
												"src": "2602:13:0"
											}
										]
									},
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "2441:94:0",
										"text": " @dev Tells the address of the owner\n @return the address of the owner"
									},
									"id": 39,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2557:2:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 39,
												"src": "2583:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2583:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2582:9:0"
									},
									"scope": 92,
									"src": "2540:82:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "2726:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 45,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "2736:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 46,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "2745:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2736:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "2736:17:0"
											}
										]
									},
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "2628:48:0",
										"text": " @dev Sets a new owner address"
									},
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setOwner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 50,
												"src": "2699:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2698:18:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:0"
									},
									"scope": 92,
									"src": "2681:79:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "2869:93:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 54,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "2887:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2887:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 56,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "2901:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2887:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2909:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 53,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2879:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2879:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "2879:65:0"
											},
											{
												"id": 61,
												"nodeType": "PlaceholderStatement",
												"src": "2954:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "2766:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 63,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2866:2:0"
									},
									"src": "2848:114:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "3197:205:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 72,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "3228:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 75,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3248:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 74,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3240:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 73,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3240:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3240:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "3228:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3264:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 71,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3207:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3207:107:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "3207:107:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 82,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "3350:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 83,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "3358:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 81,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "3329:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3329:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "EmitStatement",
												"src": "3324:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "3386:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "3377:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3377:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "3377:18:0"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "2968:160:0",
										"text": " @dev Allows the current owner to transfer control of the contract to a newOwner.\n @param newOwner The address to transfer ownership to."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 69,
											"modifierName": {
												"argumentTypes": null,
												"id": 68,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 63,
												"src": "3187:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3187:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 91,
												"src": "3160:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3159:18:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3197:0:0"
									},
									"scope": 92,
									"src": "3133:269:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 93,
							"src": "1718:1686:0"
						}
					],
					"src": "1196:2209:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							447
						]
					},
					"id": 448,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 94,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 95,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 447,
							"linearizedBaseContracts": [
								447
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "865:98:1",
										"statements": [
											{
												"assignments": [
													108
												],
												"declarations": [
													{
														"constant": false,
														"id": 108,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 125,
														"src": "875:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 107,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 112,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 109,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "887:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 110,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "891:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 113,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "906:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 114,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "910:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 120,
												"nodeType": "IfStatement",
												"src": "902:28:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 118,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 106,
													"id": 119,
													"nodeType": "Return",
													"src": "913:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 122,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "954:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 123,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 106,
												"id": 124,
												"nodeType": "Return",
												"src": "940:16:1"
											}
										]
									},
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "653:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 126,
												"src": "805:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 126,
												"src": "816:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "804:22:1"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 126,
												"src": "850:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 102,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 126,
												"src": "856:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "849:15:1"
									},
									"scope": 447,
									"src": "789:174:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "1185:75:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 138,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "1199:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 139,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "1203:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 145,
												"nodeType": "IfStatement",
												"src": "1195:28:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 141,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 143,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 137,
													"id": 144,
													"nodeType": "Return",
													"src": "1206:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 147,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "1247:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 148,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 131,
																"src": "1251:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 150,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 137,
												"id": 151,
												"nodeType": "Return",
												"src": "1233:20:1"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "969:135:1",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 153,
												"src": "1125:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 153,
												"src": "1136:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1124:22:1"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 153,
												"src": "1170:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 133,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 153,
												"src": "1176:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1169:15:1"
									},
									"scope": 447,
									"src": "1109:151:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "1484:359:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 165,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "1716:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 172,
												"nodeType": "IfStatement",
												"src": "1712:28:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 170,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 164,
													"id": 171,
													"nodeType": "Return",
													"src": "1724:16:1"
												}
											},
											{
												"assignments": [
													174
												],
												"declarations": [
													{
														"constant": false,
														"id": 174,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 193,
														"src": "1750:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 173,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 178,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 175,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "1762:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 176,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "1766:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 179,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "1781:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 180,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "1785:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 182,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "1790:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 188,
												"nodeType": "IfStatement",
												"src": "1777:33:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 186,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 164,
													"id": 187,
													"nodeType": "Return",
													"src": "1793:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 190,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "1834:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 191,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 164,
												"id": 192,
												"nodeType": "Return",
												"src": "1820:16:1"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "1266:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 194,
												"src": "1424:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 194,
												"src": "1435:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1423:22:1"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 194,
												"src": "1469:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 160,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 194,
												"src": "1475:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1468:15:1"
									},
									"scope": 447,
									"src": "1408:435:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "2068:76:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 206,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "2082:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 213,
												"nodeType": "IfStatement",
												"src": "2078:29:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 211,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 205,
													"id": 212,
													"nodeType": "Return",
													"src": "2090:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 215,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 197,
																"src": "2131:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"id": 216,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 199,
																"src": "2135:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 218,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 205,
												"id": 219,
												"nodeType": "Return",
												"src": "2117:20:1"
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 221,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 221,
												"src": "2019:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2007:22:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 221,
												"src": "2053:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 201,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 221,
												"src": "2059:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2052:15:1"
									},
									"scope": 447,
									"src": "1992:152:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 247,
										"nodeType": "Block",
										"src": "2379:76:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 233,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "2393:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 240,
												"nodeType": "IfStatement",
												"src": "2389:29:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 238,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 232,
													"id": 239,
													"nodeType": "Return",
													"src": "2401:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 242,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 224,
																"src": "2442:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"id": 243,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 226,
																"src": "2446:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 245,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 232,
												"id": 246,
												"nodeType": "Return",
												"src": "2428:20:1"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "2150:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 248,
												"src": "2319:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 248,
												"src": "2330:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2318:22:1"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 248,
												"src": "2364:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 248,
												"src": "2370:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2363:15:1"
									},
									"scope": 447,
									"src": "2303:152:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "2757:108:1",
										"statements": [
											{
												"assignments": [
													259
												],
												"declarations": [
													{
														"constant": false,
														"id": 259,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 273,
														"src": "2767:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 258,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 263,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 260,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 251,
														"src": "2779:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 261,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "2783:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 265,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 259,
																"src": "2802:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 266,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 251,
																"src": "2807:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2794:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 270,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 271,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 259,
													"src": "2857:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 257,
												"id": 272,
												"nodeType": "Return",
												"src": "2850:8:1"
											}
										]
									},
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "2461:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 274,
												"src": "2703:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 274,
												"src": "2714:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2702:22:1"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 274,
												"src": "2748:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2747:9:1"
									},
									"scope": 447,
									"src": "2690:175:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "3203:88:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 285,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 279,
																"src": "3221:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 286,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 277,
																"src": "3226:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 284,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3213:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 291,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "3279:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 292,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "3283:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 283,
												"id": 294,
												"nodeType": "Return",
												"src": "3272:12:1"
											}
										]
									},
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 296,
												"src": "3149:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 296,
												"src": "3160:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3148:22:1"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 296,
												"src": "3194:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3193:9:1"
									},
									"scope": 447,
									"src": "3136:155:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "3605:148:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 306,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "3619:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 311,
												"nodeType": "IfStatement",
												"src": "3615:20:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 309,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 305,
													"id": 310,
													"nodeType": "Return",
													"src": "3627:8:1"
												}
											},
											{
												"assignments": [
													313
												],
												"declarations": [
													{
														"constant": false,
														"id": 313,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 329,
														"src": "3645:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 312,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 317,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 314,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "3657:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 315,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "3661:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 319,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "3680:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 320,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 299,
																	"src": "3684:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 322,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "3689:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 318,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3672:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 327,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 313,
													"src": "3745:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 305,
												"id": 328,
												"nodeType": "Return",
												"src": "3738:8:1"
											}
										]
									},
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "3297:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 330,
												"src": "3551:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 330,
												"src": "3562:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3550:22:1"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 330,
												"src": "3596:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3595:9:1"
									},
									"scope": 447,
									"src": "3538:215:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "4284:83:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 341,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "4302:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 340,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4294:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 347,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 333,
														"src": "4355:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 348,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "4359:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 339,
												"id": 350,
												"nodeType": "Return",
												"src": "4348:12:1"
											}
										]
									},
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "3759:453:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 352,
												"src": "4230:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 352,
												"src": "4241:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4229:22:1"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 352,
												"src": "4275:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4274:9:1"
									},
									"scope": 447,
									"src": "4217:150:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "4887:81:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 363,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "4905:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 362,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4897:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 369,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "4956:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 370,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "4960:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 361,
												"id": 372,
												"nodeType": "Return",
												"src": "4949:12:1"
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "4373:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 374,
												"src": "4833:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 374,
												"src": "4844:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4832:22:1"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 374,
												"src": "4878:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4877:9:1"
									},
									"scope": 447,
									"src": "4820:148:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "5527:68:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 387,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 379,
																"src": "5545:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 388,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "5550:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 390,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "5553:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 386,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5537:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 393,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "5583:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 394,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "5587:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 385,
												"id": 396,
												"nodeType": "Return",
												"src": "5576:12:1"
											}
										]
									},
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "4974:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 398,
												"src": "5445:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 398,
												"src": "5456:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 398,
												"src": "5467:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 380,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5444:50:1"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 398,
												"src": "5518:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5517:9:1"
									},
									"scope": 447,
									"src": "5432:163:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "6347:67:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 411,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "6365:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6369:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 414,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "6372:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6357:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "6357:28:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 417,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "6402:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 418,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "6406:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6402:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 409,
												"id": 420,
												"nodeType": "Return",
												"src": "6395:12:1"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "5601:646:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 422,
												"src": "6265:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6265:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 422,
												"src": "6276:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 422,
												"src": "6287:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 404,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6287:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6264:50:1"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 422,
												"src": "6338:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6337:9:1"
									},
									"scope": 447,
									"src": "6252:162:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "7155:67:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 435,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "7173:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7177:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7173:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 438,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "7180:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 434,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7165:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "7165:28:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 441,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "7210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 442,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "7214:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7210:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 433,
												"id": 444,
												"nodeType": "Return",
												"src": "7203:12:1"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "6420:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 446,
												"src": "7073:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7073:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 446,
												"src": "7084:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7084:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 446,
												"src": "7095:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 428,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7095:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7072:50:1"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 446,
												"src": "7146:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7145:9:1"
									},
									"scope": 447,
									"src": "7060:162:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 448,
							"src": "630:6594:1"
						}
					],
					"src": "33:7192:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							525
						]
					},
					"id": 526,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 449,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 450,
								"nodeType": "StructuredDocumentation",
								"src": "66:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 525,
							"linearizedBaseContracts": [
								525
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "160:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 456,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:2:2"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 456,
												"src": "277:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "276:9:2"
									},
									"scope": 525,
									"src": "231:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "292:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 464,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 464,
												"src": "388:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "387:17:2"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 464,
												"src": "428:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "427:9:2"
									},
									"scope": 525,
									"src": "369:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "443:209:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 474,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 474,
												"src": "675:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 474,
												"src": "694:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "674:35:2"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 474,
												"src": "728:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 471,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "728:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "727:6:2"
									},
									"scope": 525,
									"src": "657:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "740:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 484,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 484,
												"src": "1028:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 484,
												"src": "1043:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1027:32:2"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 484,
												"src": "1083:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1082:9:2"
									},
									"scope": 525,
									"src": "1009:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "1098:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 494,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 494,
												"src": "1762:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 494,
												"src": "1779:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1761:33:2"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 494,
												"src": "1813:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 491,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1813:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1812:6:2"
									},
									"scope": 525,
									"src": "1745:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "1825:296:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 506,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 506,
												"src": "2148:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2148:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 506,
												"src": "2164:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2164:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 506,
												"src": "2183:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2147:51:2"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 506,
												"src": "2217:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 503,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2217:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2216:6:2"
									},
									"scope": 525,
									"src": "2126:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "2229:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 515,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 515,
												"src": "2407:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 515,
												"src": "2429:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 515,
												"src": "2449:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2406:57:2"
									},
									"src": "2392:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "2470:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 524,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 524,
												"src": "2638:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 524,
												"src": "2661:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 524,
												"src": "2686:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2637:63:2"
									},
									"src": "2623:78:2"
								}
							],
							"scope": 526,
							"src": "137:2566:2"
						}
					],
					"src": "33:2671:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol",
					"exportedSymbols": {
						"SafeERC20": [
							738
						]
					},
					"id": 739,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 527,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:3"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 528,
							"nodeType": "ImportDirective",
							"scope": 739,
							"sourceUnit": 526,
							"src": "66:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 529,
							"nodeType": "ImportDirective",
							"scope": 739,
							"sourceUnit": 448,
							"src": "89:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 530,
							"nodeType": "ImportDirective",
							"scope": 739,
							"sourceUnit": 1035,
							"src": "123:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 531,
								"nodeType": "StructuredDocumentation",
								"src": "158:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 738,
							"linearizedBaseContracts": [
								738
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 534,
									"libraryName": {
										"contractScope": null,
										"id": 532,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 447,
										"src": "646:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$447",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "640:27:3",
									"typeName": {
										"id": 533,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "659:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 537,
									"libraryName": {
										"contractScope": null,
										"id": 535,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1034,
										"src": "678:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$1034",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "672:26:3",
									"typeName": {
										"id": 536,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "690:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "776:103:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 547,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "806:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$525",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 550,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 539,
																			"src": "836:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$525",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 474,
																		"src": "836:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "836:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 553,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 541,
																	"src": "861:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 554,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 543,
																	"src": "865:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 548,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "813:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "813:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "813:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$525",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 546,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "786:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$525_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "786:86:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 557,
												"nodeType": "ExpressionStatement",
												"src": "786:86:3"
											}
										]
									},
									"documentation": null,
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 559,
												"src": "726:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$525",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 538,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 525,
													"src": "726:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$525",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 559,
												"src": "740:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 559,
												"src": "752:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "752:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "725:41:3"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "776:0:3"
									},
									"scope": 738,
									"src": "704:175:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "975:113:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 571,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "1005:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$525",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 574,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 561,
																			"src": "1035:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$525",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 506,
																		"src": "1035:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1035:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 577,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "1064:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 578,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 565,
																	"src": "1070:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 579,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "1074:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 572,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1012:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1012:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1012:68:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$525",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 570,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "985:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$525_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "985:96:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 582,
												"nodeType": "ExpressionStatement",
												"src": "985:96:3"
											}
										]
									},
									"documentation": null,
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 584,
												"src": "911:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$525",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 560,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 525,
													"src": "911:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$525",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 584,
												"src": "925:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 584,
												"src": "939:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 584,
												"src": "951:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "910:55:3"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "975:0:3"
									},
									"scope": 738,
									"src": "885:203:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "1424:537:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 595,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 591,
																			"src": "1713:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 596,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1722:1:3",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1713:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 598,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1712:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 603,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "1753:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$738",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$738",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 602,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1745:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 601,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1745:7:3",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 604,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1745:13:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 605,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 589,
																					"src": "1760:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 599,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 587,
																					"src": "1729:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$525",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 600,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 484,
																				"src": "1729:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1729:39:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1772:1:3",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1729:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 609,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1728:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1712:62:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1788:56:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 594,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1704:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1704:150:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 613,
												"nodeType": "ExpressionStatement",
												"src": "1704:150:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 615,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "1884:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$525",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 618,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "1914:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$525",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 494,
																		"src": "1914:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1914:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 621,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "1938:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 622,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "1947:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 616,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1891:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1891:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1891:62:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$525",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 614,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "1864:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$525_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1864:90:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 625,
												"nodeType": "ExpressionStatement",
												"src": "1864:90:3"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "1094:249:3",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 627,
												"src": "1369:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$525",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 586,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 525,
													"src": "1369:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$525",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 627,
												"src": "1383:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 627,
												"src": "1400:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1368:46:3"
									},
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1424:0:3"
									},
									"scope": 738,
									"src": "1348:613:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "2053:197:3",
										"statements": [
											{
												"assignments": [
													637
												],
												"declarations": [
													{
														"constant": false,
														"id": 637,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 662,
														"src": "2063:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 636,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2063:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 649,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 647,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "2130:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 642,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2110:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$738",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$738",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2102:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 640,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2102:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2102:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 644,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "2117:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 638,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "2086:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$525",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 484,
																"src": "2086:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2086:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 274,
														"src": "2086:43:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2086:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2063:73:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 651,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "2166:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$525",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 654,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 629,
																			"src": "2196:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$525",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 494,
																		"src": "2196:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2196:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 657,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "2220:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 658,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "2229:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 652,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2173:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2173:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2173:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$525",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 650,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "2146:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$525_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:97:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "2146:97:3"
											}
										]
									},
									"documentation": null,
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 663,
												"src": "1998:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$525",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 628,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 525,
													"src": "1998:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$525",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 663,
												"src": "2012:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2012:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 663,
												"src": "2029:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2029:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1997:46:3"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:0:3"
									},
									"scope": 738,
									"src": "1967:283:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "2342:242:3",
										"statements": [
											{
												"assignments": [
													673
												],
												"declarations": [
													{
														"constant": false,
														"id": 673,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 699,
														"src": "2352:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 672,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2352:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 686,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 683,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "2419:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2426:43:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 678,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2399:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$738",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$738",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2391:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 676,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2391:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2391:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 680,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 667,
																	"src": "2406:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 674,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "2375:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$525",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 484,
																"src": "2375:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2375:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 682,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 398,
														"src": "2375:43:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2375:95:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2352:118:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 688,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "2500:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$525",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 691,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 665,
																			"src": "2530:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$525",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 494,
																		"src": "2530:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2530:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 694,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 667,
																	"src": "2554:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 695,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 673,
																	"src": "2563:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 689,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2507:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2507:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2507:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$525",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 687,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "2480:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$525_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2480:97:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 698,
												"nodeType": "ExpressionStatement",
												"src": "2480:97:3"
											}
										]
									},
									"documentation": null,
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 700,
												"src": "2287:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$525",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 664,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 525,
													"src": "2287:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$525",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 700,
												"src": "2301:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2301:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 700,
												"src": "2318:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2318:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2286:46:3"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2342:0:3"
									},
									"scope": 738,
									"src": "2256:328:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "3037:681:3",
										"statements": [
											{
												"assignments": [
													709
												],
												"declarations": [
													{
														"constant": false,
														"id": 709,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 736,
														"src": "3386:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 708,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3386:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 718,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 715,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "3440:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3446:34:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 712,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 703,
																	"src": "3420:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$525",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$525",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 711,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3412:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 710,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3412:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3412:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 829,
														"src": "3412:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3412:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3386:95:3"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 719,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "3495:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3495:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3515:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3495:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 735,
												"nodeType": "IfStatement",
												"src": "3491:221:3",
												"trueBody": {
													"id": 734,
													"nodeType": "Block",
													"src": "3518:194:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 726,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 709,
																				"src": "3635:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 728,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3648:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 727,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3648:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					}
																				],
																				"id": 729,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3647:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 724,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "3624:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3624:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3624:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3656:44:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 723,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "3616:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3616:85:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 733,
															"nodeType": "ExpressionStatement",
															"src": "3616:85:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 701,
										"nodeType": "StructuredDocumentation",
										"src": "2590:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 737,
												"src": "2996:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$525",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 702,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 525,
													"src": "2996:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$525",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 737,
												"src": "3010:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 704,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3010:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2995:33:3"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3037:0:3"
									},
									"scope": 738,
									"src": "2967:751:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 739,
							"src": "616:3104:3"
						}
					],
					"src": "33:3688:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1034
						]
					},
					"id": 1035,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 740,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 741,
								"nodeType": "StructuredDocumentation",
								"src": "66:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1034,
							"linearizedBaseContracts": [
								1034
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "792:347:4",
										"statements": [
											{
												"assignments": [
													750
												],
												"declarations": [
													{
														"constant": false,
														"id": 750,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 757,
														"src": "989:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 749,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "989:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 751,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "989:12:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1076:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1078:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1098:7:4"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1086:11:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1086:20:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1078:4:4"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 744,
														"isOffset": false,
														"isSlot": false,
														"src": "1098:7:4",
														"valueSize": 1
													},
													{
														"declaration": 750,
														"isOffset": false,
														"isSlot": false,
														"src": "1078:4:4",
														"valueSize": 1
													}
												],
												"id": 752,
												"nodeType": "InlineAssembly",
												"src": "1067:41:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 753,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "1124:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 754,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1131:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1124:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 748,
												"id": 756,
												"nodeType": "Return",
												"src": "1117:15:4"
											}
										]
									},
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "156:565:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 758,
												"src": "746:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "745:17:4"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 758,
												"src": "786:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 746,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "786:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "785:6:4"
									},
									"scope": 1034,
									"src": "726:413:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "2127:320:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 769,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2153:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1034",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1034",
																				"typeString": "library Address"
																			}
																		],
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2145:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 767,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2145:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2145:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2145:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 772,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "2170:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2145:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2178:31:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 766,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2137:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2137:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 776,
												"nodeType": "ExpressionStatement",
												"src": "2137:73:4"
											},
											{
												"assignments": [
													778,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 778,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 791,
														"src": "2299:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 777,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2299:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 785,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2349:2:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 779,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 761,
																"src": "2317:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2317:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 781,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "2340:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2317:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2298:54:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 787,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "2370:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2379:60:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 786,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2362:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2362:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "2362:78:4"
											}
										]
									},
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "1145:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 792,
												"src": "2075:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2075:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 792,
												"src": "2102:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2102:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2074:43:4"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:0:4"
									},
									"scope": 1034,
									"src": "2056:391:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 808,
										"nodeType": "Block",
										"src": "3277:82:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 803,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "3305:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 804,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "3313:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3319:32:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 802,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															809,
															829
														],
														"referencedDeclaration": 829,
														"src": "3292:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3292:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 801,
												"id": 807,
												"nodeType": "Return",
												"src": "3285:67:4"
											}
										]
									},
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "2453:730:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 809,
												"src": "3210:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 809,
												"src": "3226:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 796,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3226:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3209:35:4"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 809,
												"src": "3263:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 799,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3263:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3262:14:4"
									},
									"scope": 1034,
									"src": "3188:171:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 828,
										"nodeType": "Block",
										"src": "3698:76:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 822,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "3737:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 823,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "3745:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3751:1:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 825,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "3754:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 821,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															849,
															899
														],
														"referencedDeclaration": 899,
														"src": "3715:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3715:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 820,
												"id": 827,
												"nodeType": "Return",
												"src": "3708:59:4"
											}
										]
									},
									"documentation": {
										"id": 810,
										"nodeType": "StructuredDocumentation",
										"src": "3365:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 829,
												"src": "3603:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3603:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 829,
												"src": "3619:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 813,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3619:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 829,
												"src": "3638:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 815,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3638:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3602:63:4"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 829,
												"src": "3684:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 818,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3684:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3683:14:4"
									},
									"scope": 1034,
									"src": "3581:193:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 848,
										"nodeType": "Block",
										"src": "4249:111:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 842,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "4288:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 843,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "4296:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 844,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "4302:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:43:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 841,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															849,
															899
														],
														"referencedDeclaration": 899,
														"src": "4266:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4266:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 840,
												"id": 847,
												"nodeType": "Return",
												"src": "4259:94:4"
											}
										]
									},
									"documentation": {
										"id": 830,
										"nodeType": "StructuredDocumentation",
										"src": "3780:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 849,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 849,
												"src": "4167:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4167:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 849,
												"src": "4183:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 833,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4183:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 849,
												"src": "4202:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4202:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4166:50:4"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 849,
												"src": "4235:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 838,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4235:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4234:14:4"
									},
									"scope": 1034,
									"src": "4136:224:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "4749:382:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 866,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "4775:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1034",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1034",
																				"typeString": "library Address"
																			}
																		],
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4767:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 864,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4767:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4767:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4767:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 869,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 856,
																"src": "4792:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4767:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4799:40:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 863,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4759:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4759:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "4759:81:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 876,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 852,
																	"src": "4869:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 875,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "4858:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4858:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4878:31:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 874,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4850:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4850:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 880,
												"nodeType": "ExpressionStatement",
												"src": "4850:60:4"
											},
											{
												"assignments": [
													882,
													884
												],
												"declarations": [
													{
														"constant": false,
														"id": 882,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 898,
														"src": "4981:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 881,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4981:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 884,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 898,
														"src": "4995:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 883,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4995:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 891,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 889,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "5050:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 885,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 852,
																"src": "5022:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5022:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 887,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 856,
																"src": "5042:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5022:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5022:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4980:75:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 893,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "5090:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 894,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "5099:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 895,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "5111:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 892,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "5072:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5072:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 862,
												"id": 897,
												"nodeType": "Return",
												"src": "5065:59:4"
											}
										]
									},
									"documentation": {
										"id": 850,
										"nodeType": "StructuredDocumentation",
										"src": "4366:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 899,
												"src": "4639:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 899,
												"src": "4655:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 853,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4655:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 899,
												"src": "4674:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4674:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 899,
												"src": "4689:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 857,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4689:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4638:78:4"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 899,
												"src": "4735:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 860,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4735:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4734:14:4"
									},
									"scope": 1034,
									"src": "4608:523:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "5408:97:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 910,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "5444:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 911,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "5452:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5458:39:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 909,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															916,
															951
														],
														"referencedDeclaration": 951,
														"src": "5425:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5425:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 908,
												"id": 914,
												"nodeType": "Return",
												"src": "5418:80:4"
											}
										]
									},
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "5137:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 916,
												"src": "5336:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 916,
												"src": "5352:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 903,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5352:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5335:35:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 916,
												"src": "5394:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 906,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5394:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5393:14:4"
									},
									"scope": 1034,
									"src": "5308:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 950,
										"nodeType": "Block",
										"src": "5817:288:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 930,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 919,
																	"src": "5846:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 929,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "5835:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5835:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5855:38:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 928,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5827:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5827:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 934,
												"nodeType": "ExpressionStatement",
												"src": "5827:67:4"
											},
											{
												"assignments": [
													936,
													938
												],
												"declarations": [
													{
														"constant": false,
														"id": 936,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 950,
														"src": "5965:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 935,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5965:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 938,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 950,
														"src": "5979:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 937,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5979:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 943,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 941,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "6024:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 939,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "6006:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 940,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6006:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6006:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5964:65:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 945,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "6064:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 946,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "6073:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 947,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "6085:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 944,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "6046:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6046:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 927,
												"id": 949,
												"nodeType": "Return",
												"src": "6039:59:4"
											}
										]
									},
									"documentation": {
										"id": 917,
										"nodeType": "StructuredDocumentation",
										"src": "5511:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 951,
												"src": "5717:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5717:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 951,
												"src": "5733:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 920,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5733:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 951,
												"src": "5752:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 922,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5752:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5716:63:4"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 951,
												"src": "5803:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 925,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5803:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5802:14:4"
									},
									"scope": 1034,
									"src": "5689:416:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "6381:101:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 962,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "6419:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 963,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "6427:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6433:41:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 961,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															968,
															1003
														],
														"referencedDeclaration": 1003,
														"src": "6398:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6398:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 960,
												"id": 966,
												"nodeType": "Return",
												"src": "6391:84:4"
											}
										]
									},
									"documentation": {
										"id": 952,
										"nodeType": "StructuredDocumentation",
										"src": "6111:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 968,
												"src": "6314:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 968,
												"src": "6330:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 955,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6330:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6313:35:4"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 968,
												"src": "6367:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 958,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6367:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6366:14:4"
									},
									"scope": 1034,
									"src": "6284:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "6793:292:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 982,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "6822:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 981,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "6811:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6811:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6831:40:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 980,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6803:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6803:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 986,
												"nodeType": "ExpressionStatement",
												"src": "6803:69:4"
											},
											{
												"assignments": [
													988,
													990
												],
												"declarations": [
													{
														"constant": false,
														"id": 988,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1002,
														"src": "6943:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 987,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6943:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 990,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1002,
														"src": "6957:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 989,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6957:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 995,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 993,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "7004:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 991,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "6984:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6984:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6984:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6942:67:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 997,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "7044:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 998,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "7053:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 999,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "7065:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 996,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "7026:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7026:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 979,
												"id": 1001,
												"nodeType": "Return",
												"src": "7019:59:4"
											}
										]
									},
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "6488:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1003,
												"src": "6698:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6698:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1003,
												"src": "6714:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 972,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6714:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1003,
												"src": "6733:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 974,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6733:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6697:63:4"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1003,
												"src": "6779:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 977,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6779:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6778:14:4"
									},
									"scope": 1034,
									"src": "6668:417:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "7220:596:4",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 1014,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1005,
													"src": "7234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1030,
													"nodeType": "Block",
													"src": "7291:519:4",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1018,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1007,
																		"src": "7375:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7375:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7395:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7375:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1028,
																"nodeType": "Block",
																"src": "7747:53:4",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1025,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1009,
																					"src": "7772:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1024,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "7765:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7765:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1027,
																		"nodeType": "ExpressionStatement",
																		"src": "7765:20:4"
																	}
																]
															},
															"id": 1029,
															"nodeType": "IfStatement",
															"src": "7371:429:4",
															"trueBody": {
																"id": 1023,
																"nodeType": "Block",
																"src": "7398:343:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7582:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7604:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7633:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7627:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7627:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7608:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7676:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7680:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7672:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7672:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7693:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7665:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7665:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7665:44:4"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1007,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7633:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1007,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7680:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 1022,
																		"nodeType": "InlineAssembly",
																		"src": "7573:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 1031,
												"nodeType": "IfStatement",
												"src": "7230:580:4",
												"trueBody": {
													"id": 1017,
													"nodeType": "Block",
													"src": "7243:42:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1015,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1007,
																"src": "7264:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1013,
															"id": 1016,
															"nodeType": "Return",
															"src": "7257:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1033,
												"src": "7118:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1004,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7118:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1033,
												"src": "7132:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1006,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1033,
												"src": "7157:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1008,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7157:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7117:67:4"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1033,
												"src": "7206:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1011,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7206:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7205:14:4"
									},
									"scope": 1034,
									"src": "7091:725:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1035,
							"src": "134:7684:4"
						}
					],
					"src": "33:7786:4"
				},
				"id": 4
			},
			"rescue/Rescuable.sol": {
				"ast": {
					"absolutePath": "rescue/Rescuable.sol",
					"exportedSymbols": {
						"Rescuable": [
							1123
						]
					},
					"id": 1124,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1036,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "660:23:5"
						},
						{
							"absolutePath": "access/Ownable.sol",
							"file": "../access/Ownable.sol",
							"id": 1038,
							"nodeType": "ImportDirective",
							"scope": 1124,
							"sourceUnit": 93,
							"src": "685:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 1037,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "694:7:5",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/IERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/IERC20.sol",
							"id": 1040,
							"nodeType": "ImportDirective",
							"scope": 1124,
							"sourceUnit": 526,
							"src": "892:125:5",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 1039,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "901:6:5",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/token/ERC20/SafeERC20.sol",
							"id": 1042,
							"nodeType": "ImportDirective",
							"scope": 1124,
							"sourceUnit": 739,
							"src": "1018:131:5",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 1041,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "1027:9:5",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": null
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1043,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 92,
										"src": "1174:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$92",
											"typeString": "contract Ownable"
										}
									},
									"id": 1044,
									"nodeType": "InheritanceSpecifier",
									"src": "1174:7:5"
								}
							],
							"contractDependencies": [
								92
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1123,
							"linearizedBaseContracts": [
								1123,
								92
							],
							"name": "Rescuable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1047,
									"libraryName": {
										"contractScope": null,
										"id": 1045,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 738,
										"src": "1194:9:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$738",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1188:27:5",
									"typeName": {
										"contractScope": null,
										"id": 1046,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 525,
										"src": "1208:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$525",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"id": 1049,
									"mutability": "mutable",
									"name": "_rescuer",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1123,
									"src": "1221:24:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1048,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1221:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1053,
									"name": "RescuerChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"indexed": true,
												"mutability": "mutable",
												"name": "newRescuer",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1053,
												"src": "1273:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1273:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1272:28:5"
									},
									"src": "1252:49:5"
								},
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "1446:32:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1059,
													"name": "_rescuer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1049,
													"src": "1463:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1058,
												"id": 1060,
												"nodeType": "Return",
												"src": "1456:15:5"
											}
										]
									},
									"documentation": {
										"id": 1054,
										"nodeType": "StructuredDocumentation",
										"src": "1307:83:5",
										"text": " @notice Returns current rescuer\n @return Rescuer's address"
									},
									"functionSelector": "38a63183",
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rescuer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1411:2:5"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1062,
												"src": "1437:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1437:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1436:9:5"
									},
									"scope": 1123,
									"src": "1395:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1074,
										"nodeType": "Block",
										"src": "1594:99:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1066,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "1612:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1612:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1068,
																"name": "_rescuer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1049,
																"src": "1626:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1612:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "526573637561626c653a2063616c6c6572206973206e6f74207468652072657363756572",
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1636:38:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8bca11e2be39f1d0fced52e0acd4b8db520b6b8403c87b45e64d1349895f0aab",
																"typeString": "literal_string \"Rescuable: caller is not the rescuer\""
															},
															"value": "Rescuable: caller is not the rescuer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8bca11e2be39f1d0fced52e0acd4b8db520b6b8403c87b45e64d1349895f0aab",
																"typeString": "literal_string \"Rescuable: caller is not the rescuer\""
															}
														],
														"id": 1065,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1604:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1604:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "1604:71:5"
											},
											{
												"id": 1073,
												"nodeType": "PlaceholderStatement",
												"src": "1685:1:5"
											}
										]
									},
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "1484:82:5",
										"text": " @notice Revert if called by any account other than the rescuer."
									},
									"id": 1075,
									"name": "onlyRescuer",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1591:2:5"
									},
									"src": "1571:122:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1094,
										"nodeType": "Block",
										"src": "2042:55:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1090,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "2079:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1091,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "2083:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1087,
															"name": "tokenContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "2052:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$525",
																"typeString": "contract IERC20"
															}
														},
														"id": 1089,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 559,
														"src": "2052:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$525_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$525_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2052:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "2052:38:5"
											}
										]
									},
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "1699:216:5",
										"text": " @notice Rescue ERC20 tokens locked up in this contract.\n @param tokenContract ERC20 token contract address\n @param to        Recipient address\n @param amount    Amount to withdraw"
									},
									"functionSelector": "b2118a8d",
									"id": 1095,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1085,
											"modifierName": {
												"argumentTypes": null,
												"id": 1084,
												"name": "onlyRescuer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1075,
												"src": "2030:11:5",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2030:11:5"
										}
									],
									"name": "rescueERC20",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "tokenContract",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1095,
												"src": "1950:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$525",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1077,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 525,
													"src": "1950:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$525",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1095,
												"src": "1980:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1980:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1095,
												"src": "2000:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2000:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1940:80:5"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2042:0:5"
									},
									"scope": 1123,
									"src": "1920:177:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1121,
										"nodeType": "Block",
										"src": "2282:202:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1104,
																"name": "newRescuer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1098,
																"src": "2313:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2335:1:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2327:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1105,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2327:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2327:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2313:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "526573637561626c653a206e6577207265736375657220697320746865207a65726f2061646472657373",
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2351:44:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2b73485905d4051917013780743b3f01a5e5307ebb5dfb7e3a6d0a16dcb40a3f",
																"typeString": "literal_string \"Rescuable: new rescuer is the zero address\""
															},
															"value": "Rescuable: new rescuer is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2b73485905d4051917013780743b3f01a5e5307ebb5dfb7e3a6d0a16dcb40a3f",
																"typeString": "literal_string \"Rescuable: new rescuer is the zero address\""
															}
														],
														"id": 1103,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2292:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2292:113:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1112,
												"nodeType": "ExpressionStatement",
												"src": "2292:113:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1113,
														"name": "_rescuer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "2415:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1114,
														"name": "newRescuer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "2426:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2415:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1116,
												"nodeType": "ExpressionStatement",
												"src": "2415:21:5"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1118,
															"name": "newRescuer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "2466:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1117,
														"name": "RescuerChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "2451:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2451:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1120,
												"nodeType": "EmitStatement",
												"src": "2446:31:5"
											}
										]
									},
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "2103:112:5",
										"text": " @notice Updates the rescuer address.\n @param newRescuer The address of the new rescuer."
									},
									"functionSelector": "2ab60045",
									"id": 1122,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1101,
											"modifierName": {
												"argumentTypes": null,
												"id": 1100,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 63,
												"src": "2272:9:5",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2272:9:5"
										}
									],
									"name": "updateRescuer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "newRescuer",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1122,
												"src": "2243:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2243:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2242:20:5"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2282:0:5"
									},
									"scope": 1123,
									"src": "2220:264:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1124,
							"src": "1152:1334:5"
						}
					],
					"src": "660:1827:5"
				},
				"id": 5
			}
		}
	}
}