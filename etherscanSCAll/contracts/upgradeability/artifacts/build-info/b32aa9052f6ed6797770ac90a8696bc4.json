{
	"id": "b32aa9052f6ed6797770ac90a8696bc4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"upgradeability/AdminUpgradeabilityProxy.sol": {
				"content": "/**\n * SPDX-License-Identifier: Apache-2.0\n *\n * Copyright (c) 2023, Circle Internet Financial, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npragma solidity ^0.8.0;\n\nimport { UpgradeabilityProxy } from \"./UpgradeabilityProxy.sol\";\n\n/**\n * @notice This contract combines an upgradeability proxy with an authorization\n * mechanism for administrative tasks.\n * @dev Forked from https://github.com/zeppelinos/zos-lib/blob/8a16ef3ad17ec7430e3a9d2b5e3f39b8204f8c8d/contracts/upgradeability/AdminUpgradeabilityProxy.sol\n * Modifications:\n * 1. Reformat, conform to Solidity 0.6 syntax, and add error messages (5/13/20)\n * 2. Remove ifAdmin modifier from admin() and implementation() (5/13/20)\n */\ncontract AdminUpgradeabilityProxy is UpgradeabilityProxy {\n    /**\n     * @dev Emitted when the administration has been transferred.\n     * @param previousAdmin Address of the previous admin.\n     * @param newAdmin Address of the new admin.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"org.zeppelinos.proxy.admin\", and is\n     * validated in the constructor.\n     */\n    bytes32\n        private constant ADMIN_SLOT = 0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b;\n\n    /**\n     * @dev Modifier to check whether the `msg.sender` is the admin.\n     * If it is, it will run the function. Otherwise, it will delegate the call\n     * to the implementation.\n     */\n    modifier ifAdmin() {\n        if (msg.sender == _admin()) {\n            _;\n        } else {\n            _fallback();\n        }\n    }\n\n    /**\n     * @dev Contract constructor.\n     * It sets the `msg.sender` as the proxy administrator.\n     * @param implementationContract address of the initial implementation.\n     */\n    constructor(address implementationContract)\n        // public\n        UpgradeabilityProxy(implementationContract)\n    {\n        assert(ADMIN_SLOT == keccak256(\"org.zeppelinos.proxy.admin\"));\n\n        _setAdmin(msg.sender);\n    }\n\n    /**\n     * @return The address of the proxy admin.\n     */\n    function admin() external view returns (address) {\n        return _admin();\n    }\n\n    /**\n     * @return The address of the implementation.\n     */\n    function implementation() external view returns (address) {\n        return _implementation();\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     * Only the current admin can call this function.\n     * @param newAdmin Address to transfer proxy administration to.\n     */\n    function changeAdmin(address newAdmin) external ifAdmin {\n        require(\n            newAdmin != address(0),\n            \"Cannot change the admin of a proxy to the zero address\"\n        );\n        emit AdminChanged(_admin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev Upgrade the backing implementation of the proxy.\n     * Only the admin can call this function.\n     * @param newImplementation Address of the new implementation.\n     */\n    function upgradeTo(address newImplementation) external ifAdmin {\n        _upgradeTo(newImplementation);\n    }\n\n    /**\n     * @dev Upgrade the backing implementation of the proxy and call a function\n     * on the new implementation.\n     * This is useful to initialize the proxied contract.\n     * @param newImplementation Address of the new implementation.\n     * @param data Data to send as msg.data in the low level call.\n     * It should include the signature and the parameters of the function to be\n     * called, as described in\n     * https://solidity.readthedocs.io/en/develop/abi-spec.html#function-selector-and-argument-encoding.\n     */\n    function upgradeToAndCall(address newImplementation, bytes calldata data)\n        external\n        payable\n        ifAdmin\n    {\n        _upgradeTo(newImplementation);\n        \n        (bool success,) = address(this).call{value: msg.value}(data);\n        require(success);\n    }\n\n    /**\n     * @dev Upgrade the backing implementation of the proxy and delegate call a function\n     * on the new implementation.\n     * This is useful to initialize the proxied contract.\n     * @param data Data to send as msg.data in the low level call.\n     * It should include the signature and the parameters of the function to be\n     * called, as described in\n     * https://solidity.readthedocs.io/en/develop/abi-spec.html#function-selector-and-argument-encoding.\n     */\n    function funcCall(bytes calldata data)\n        external\n        payable\n    {\n        (bool success,) = _implementation().delegatecall(data);\n        require(success);\n    }\n\n    /**\n     * @return adm The admin slot.\n     */\n    function _admin() internal view returns (address adm) {\n        bytes32 slot = ADMIN_SLOT;\n\n        assembly {\n            adm := sload(slot)\n        }\n    }\n\n    /**\n     * @dev Sets the address of the proxy admin.\n     * @param newAdmin Address of the new proxy admin.\n     */\n    function _setAdmin(address newAdmin) internal {\n        bytes32 slot = ADMIN_SLOT;\n\n        assembly {\n            sstore(slot, newAdmin)\n        }\n    }\n\n    /**\n     * @dev Only fall back when the sender is not the admin.\n     */\n    function _beforeFallback() internal override {\n        require(\n            msg.sender != _admin(),\n            \"Cannot call fallback function from the proxy admin\"\n        );\n        super._beforeFallback();\n    }\n}"
			},
			"upgradeability/UpgradeabilityProxy.sol": {
				"content": "/**\n * SPDX-License-Identifier: Apache-2.0\n *\n * Copyright (c) 2023, Circle Internet Financial, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npragma solidity ^0.8.0;\n\n// import { Proxy } from \"@openzeppelin/contracts/proxy/Proxy.sol\";\nimport { Proxy } from \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\";\n// import { Address } from \"@openzeppelin/contracts/utils/Address.sol\";\nimport { Address } from \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol\";\n\n/**\n * @notice This contract implements a proxy that allows to change the\n * implementation address to which it will delegate.\n * Such a change is called an implementation upgrade.\n * @dev Forked from https://github.com/zeppelinos/zos-lib/blob/8a16ef3ad17ec7430e3a9d2b5e3f39b8204f8c8d/contracts/upgradeability/UpgradeabilityProxy.sol\n * Modifications:\n * 1. Reformat, conform to Solidity 0.6 syntax, and add error messages (5/13/20)\n * 2. Use Address utility library from the latest OpenZeppelin (5/13/20)\n */\ncontract UpgradeabilityProxy is Proxy {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     * @param implementation Address of the new implementation.\n     */\n    event Upgraded(address implementation);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"org.zeppelinos.proxy.implementation\", and is\n     * validated in the constructor.\n     */\n    bytes32\n        private constant IMPLEMENTATION_SLOT = 0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3;\n\n    /**\n     * @dev Contract constructor.\n     * @param implementationContract Address of the initial implementation.\n     */\n    constructor(address implementationContract) {\n    // constructor(address implementationContract) public {\n        assert(\n            IMPLEMENTATION_SLOT ==\n                keccak256(\"org.zeppelinos.proxy.implementation\")\n        );\n\n        _setImplementation(implementationContract);\n    }\n\n    /**\n     * @dev Returns the current implementation.\n     * @return impl Address of the current implementation\n     */\n    function _implementation() internal override view returns (address impl) {\n        bytes32 slot = IMPLEMENTATION_SLOT;\n        assembly {\n            impl := sload(slot)\n        }\n    }\n\n    /**\n     * @dev Upgrades the proxy to a new implementation.\n     * @param newImplementation Address of the new implementation.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Sets the implementation address of the proxy.\n     * @param newImplementation Address of the new implementation.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(\n            Address.isContract(newImplementation),\n            // Address.isContract(newImplementation),\n            \"Cannot set a proxy implementation to a non-contract address\"\n        );\n\n        bytes32 slot = IMPLEMENTATION_SLOT;\n\n        assembly {\n            sstore(slot, newImplementation)\n        }\n    }\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n     * and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _beforeFallback();\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n     * is empty.\n     */\n    receive() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n     * call, or as part of the Solidity `fallback` or `receive` functions.\n     *\n     * If overridden should call `super._beforeFallback()`.\n     */\n    function _beforeFallback() internal virtual {}\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 2000000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "istanbul"
		}
	},
	"output": {
		"contracts": {
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f61c52f90c48a0947ac34f293ff7f5a0b3c71417ce1eefc4ba377a65e0fbe5c864736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f61c52f90c48a0947ac34f293ff7f5a0b3c71417ce1eefc4ba377a65e0fbe5c864736f6c63430008190033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 SHR MSTORE 0xF9 0xC BASEFEE LOG0 SWAP5 PUSH27 0xC34F293FF7F5A0B3C71417CE1EEFC4BA377A65E0FBE5C864736F6C PUSH4 0x43000819 STOP CALLER ",
							"sourceMap": "194:8964:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8964:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f61c52f90c48a0947ac34f293ff7f5a0b3c71417ce1eefc4ba377a65e0fbe5c864736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 SHR MSTORE 0xF9 0xC BASEFEE LOG0 SWAP5 PUSH27 0xC34F293FF7F5A0B3C71417CE1EEFC4BA377A65E0FBE5C864736F6C PUSH4 0x43000819 STOP CALLER ",
							"sourceMap": "194:8964:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f61c52f90c48a0947ac34f293ff7f5a0b3c71417ce1eefc4ba377a65e0fbe5c864736f6c63430008190033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol",
								"upgradeability/AdminUpgradeabilityProxy.sol",
								"upgradeability/UpgradeabilityProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"upgradeability/AdminUpgradeabilityProxy.sol": {
				"AdminUpgradeabilityProxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementationContract",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "changeAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "funcCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "Forked from https://github.com/zeppelinos/zos-lib/blob/8a16ef3ad17ec7430e3a9d2b5e3f39b8204f8c8d/contracts/upgradeability/AdminUpgradeabilityProxy.sol Modifications: 1. Reformat, conform to Solidity 0.6 syntax, and add error messages (5/13/20) 2. Remove ifAdmin modifier from admin() and implementation() (5/13/20)",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the administration has been transferred.",
								"params": {
									"newAdmin": "Address of the new admin.",
									"previousAdmin": "Address of the previous admin."
								}
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded.",
								"params": {
									"implementation": "Address of the new implementation."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"admin()": {
								"returns": {
									"_0": "The address of the proxy admin."
								}
							},
							"changeAdmin(address)": {
								"details": "Changes the admin of the proxy. Only the current admin can call this function.",
								"params": {
									"newAdmin": "Address to transfer proxy administration to."
								}
							},
							"constructor": {
								"details": "Contract constructor. It sets the `msg.sender` as the proxy administrator.",
								"params": {
									"implementationContract": "address of the initial implementation."
								}
							},
							"funcCall(bytes)": {
								"details": "Upgrade the backing implementation of the proxy and delegate call a function on the new implementation. This is useful to initialize the proxied contract.",
								"params": {
									"data": "Data to send as msg.data in the low level call. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/develop/abi-spec.html#function-selector-and-argument-encoding."
								}
							},
							"implementation()": {
								"returns": {
									"_0": "The address of the implementation."
								}
							},
							"upgradeTo(address)": {
								"details": "Upgrade the backing implementation of the proxy. Only the admin can call this function.",
								"params": {
									"newImplementation": "Address of the new implementation."
								}
							},
							"upgradeToAndCall(address,bytes)": {
								"details": "Upgrade the backing implementation of the proxy and call a function on the new implementation. This is useful to initialize the proxied contract.",
								"params": {
									"data": "Data to send as msg.data in the low level call. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/develop/abi-spec.html#function-selector-and-argument-encoding.",
									"newImplementation": "Address of the new implementation."
								}
							}
						},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"org.zeppelinos.proxy.admin\", and is validated in the constructor."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"upgradeability/AdminUpgradeabilityProxy.sol\":1209:5937  contract AdminUpgradeabilityProxy is UpgradeabilityProxy {... */\n  mstore(0x40, 0x80)\n    /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2350:2578  constructor(address implementationContract)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2440:2462  implementationContract */\n  dup1\n    /* \"upgradeability/UpgradeabilityProxy.sol\":2508:2550  _setImplementation(implementationContract) */\n  tag_10\n    /* \"upgradeability/UpgradeabilityProxy.sol\":2527:2549  implementationContract */\n  dup2\n    /* \"upgradeability/UpgradeabilityProxy.sol\":2508:2526  _setImplementation */\n  tag_11\n    /* \"upgradeability/UpgradeabilityProxy.sol\":2508:2550  _setImplementation(implementationContract) */\n  jump\t// in\ntag_10:\n  pop\n    /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2550:2571  _setAdmin(msg.sender) */\n  tag_15\n    /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2560:2570  msg.sender */\n  caller\n    /* \"upgradeability/AdminUpgradeabilityProxy.sol\":1759:1825  0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b */\n  0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b\n    /* \"upgradeability/AdminUpgradeabilityProxy.sol\":5600:5622  sstore(slot, newAdmin) */\n  sstore\n    /* \"upgradeability/AdminUpgradeabilityProxy.sol\":5485:5638  function _setAdmin(address newAdmin) internal {... */\n  jump\n    /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2550:2571  _setAdmin(msg.sender) */\ntag_15:\n    /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2350:2578  constructor(address implementationContract)... */\n  pop\n    /* \"upgradeability/AdminUpgradeabilityProxy.sol\":1209:5937  contract AdminUpgradeabilityProxy is UpgradeabilityProxy {... */\n  jump(tag_26)\n    /* \"upgradeability/UpgradeabilityProxy.sol\":3314:3710  function _setImplementation(address newImplementation) private {... */\ntag_11:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol\":1465:1484  account.code.length */\n  dup2\n  and\n  extcodesize\n    /* \"upgradeability/UpgradeabilityProxy.sol\":3387:3584  require(... */\n  tag_21\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":643:645   */\n  0x20\n    /* \"upgradeability/UpgradeabilityProxy.sol\":3387:3584  require(... */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":625:646   */\n  mstore\n    /* \"#utility.yul\":682:684   */\n  0x3b\n    /* \"#utility.yul\":662:680   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":655:685   */\n  mstore\n    /* \"#utility.yul\":721:755   */\n  0x43616e6e6f742073657420612070726f787920696d706c656d656e746174696f\n    /* \"#utility.yul\":701:719   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":694:756   */\n  mstore\n    /* \"#utility.yul\":792:821   */\n  0x6e20746f2061206e6f6e2d636f6e747261637420616464726573730000000000\n    /* \"#utility.yul\":772:790   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":765:822   */\n  mstore\n    /* \"#utility.yul\":839:858   */\n  0x84\n  add\n    /* \"upgradeability/UpgradeabilityProxy.sol\":3387:3584  require(... */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_21:\n    /* \"upgradeability/UpgradeabilityProxy.sol\":2067:2133  0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3 */\n  0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3\n    /* \"upgradeability/UpgradeabilityProxy.sol\":3663:3694  sstore(slot, newImplementation) */\n  sstore\n    /* \"upgradeability/UpgradeabilityProxy.sol\":3314:3710  function _setImplementation(address newImplementation) private {... */\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_28:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_29:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":441:864   */\ntag_26:\n    /* \"upgradeability/AdminUpgradeabilityProxy.sol\":1209:5937  contract AdminUpgradeabilityProxy is UpgradeabilityProxy {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":1209:5937  contract AdminUpgradeabilityProxy is UpgradeabilityProxy {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6c9ad7db\n      gt\n      tag_9\n      jumpi\n      dup1\n      0x6c9ad7db\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8f283970\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_9:\n      dup1\n      0x3659cfe6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5c60da1b\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":2898:2909  _fallback() */\n      tag_12\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":2898:2907  _fallback */\n      tag_13\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":2898:2909  _fallback() */\n      jump\t// in\n    tag_12:\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":1209:5937  contract AdminUpgradeabilityProxy is UpgradeabilityProxy {... */\n      stop\n    tag_2:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":2675:2686  _fallback() */\n      tag_12\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":2675:2684  _fallback */\n      tag_13\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":2675:2686  _fallback() */\n      jump\t// in\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":3555:3664  function upgradeTo(address newImplementation) external ifAdmin {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_12\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":4208:4486  function upgradeToAndCall(address newImplementation, bytes calldata data)... */\n    tag_4:\n      tag_12\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2800:2899  function implementation() external view returns (address) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n        /* \"#utility.yul\":1422:1464   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1410:1465   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1392:1466   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1380:1382   */\n      0x20\n        /* \"#utility.yul\":1365:1383   */\n      add\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2800:2899  function implementation() external view returns (address) {... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":4972:5145  function funcCall(bytes calldata data)... */\n    tag_6:\n      tag_12\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":3087:3359  function changeAdmin(address newAdmin) external ifAdmin {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_12\n      tag_37\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2647:2728  function admin() external view returns (address) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_27\n      tag_41\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":2322:2432  function _fallback() internal virtual {... */\n    tag_13:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":2370:2387  _beforeFallback() */\n      tag_44\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":2370:2385  _beforeFallback */\n      tag_45\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":2370:2387  _beforeFallback() */\n      jump\t// in\n    tag_44:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":2397:2425  _delegate(_implementation()) */\n      tag_46\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":2407:2424  _implementation() */\n      tag_47\n        /* \"upgradeability/UpgradeabilityProxy.sol\":2067:2133  0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3 */\n      0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3\n        /* \"upgradeability/UpgradeabilityProxy.sol\":2843:2854  sload(slot) */\n      sload\n      swap1\n        /* \"upgradeability/UpgradeabilityProxy.sol\":2685:2870  function _implementation() internal override view returns (address impl) {... */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":2407:2424  _implementation() */\n    tag_47:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":2397:2406  _delegate */\n      tag_49\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":2397:2425  _delegate(_implementation()) */\n      jump\t// in\n    tag_46:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":2322:2432  function _fallback() internal virtual {... */\n      jump\t// out\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":3555:3664  function upgradeTo(address newImplementation) external ifAdmin {... */\n    tag_21:\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":1759:1825  0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b */\n      0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":5332:5343  sload(slot) */\n      sload\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2060:2082  msg.sender == _admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2060:2070  msg.sender */\n      caller\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2060:2082  msg.sender == _admin() */\n      sub\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2056:2152  if (msg.sender == _admin()) {... */\n      tag_53\n      jumpi\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":3628:3657  _upgradeTo(newImplementation) */\n      tag_55\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":3639:3656  newImplementation */\n      dup2\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":3628:3638  _upgradeTo */\n      tag_56\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":3628:3657  _upgradeTo(newImplementation) */\n      jump\t// in\n    tag_55:\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":3555:3664  function upgradeTo(address newImplementation) external ifAdmin {... */\n      pop\n      jump\t// out\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2056:2152  if (msg.sender == _admin()) {... */\n    tag_53:\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2130:2141  _fallback() */\n      tag_55\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2130:2139  _fallback */\n      tag_13\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2130:2141  _fallback() */\n      jump\t// in\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":4208:4486  function upgradeToAndCall(address newImplementation, bytes calldata data)... */\n    tag_25:\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":1759:1825  0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b */\n      0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":5332:5343  sload(slot) */\n      sload\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2060:2082  msg.sender == _admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2060:2070  msg.sender */\n      caller\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2060:2082  msg.sender == _admin() */\n      sub\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2056:2152  if (msg.sender == _admin()) {... */\n      tag_61\n      jumpi\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":4345:4374  _upgradeTo(newImplementation) */\n      tag_63\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":4356:4373  newImplementation */\n      dup4\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":4345:4355  _upgradeTo */\n      tag_56\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":4345:4374  _upgradeTo(newImplementation) */\n      jump\t// in\n    tag_63:\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":4394:4406  bool success */\n      0x00\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":4419:4423  this */\n      address\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":4411:4429  address(this).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":4437:4446  msg.value */\n      callvalue\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":4448:4452  data */\n      dup5\n      dup5\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":4411:4453  address(this).call{value: msg.value}(data) */\n      mload(0x40)\n      tag_64\n      swap3\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_68\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_67)\n    tag_68:\n      0x60\n      swap2\n      pop\n    tag_67:\n      pop\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":4393:4453  (bool success,) = address(this).call{value: msg.value}(data) */\n      pop\n      swap1\n      pop\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":4471:4478  success */\n      dup1\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":4463:4479  require(success) */\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":4335:4486  {... */\n      pop\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":4208:4486  function upgradeToAndCall(address newImplementation, bytes calldata data)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2056:2152  if (msg.sender == _admin()) {... */\n    tag_61:\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2130:2141  _fallback() */\n      tag_71\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2130:2139  _fallback */\n      tag_13\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2130:2141  _fallback() */\n      jump\t// in\n    tag_71:\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":4208:4486  function upgradeToAndCall(address newImplementation, bytes calldata data)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2800:2899  function implementation() external view returns (address) {... */\n    tag_28:\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2849:2856  address */\n      0x00\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2875:2892  _implementation() */\n      tag_73\n        /* \"upgradeability/UpgradeabilityProxy.sol\":2067:2133  0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3 */\n      0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3\n        /* \"upgradeability/UpgradeabilityProxy.sol\":2843:2854  sload(slot) */\n      sload\n      swap1\n        /* \"upgradeability/UpgradeabilityProxy.sol\":2685:2870  function _implementation() internal override view returns (address impl) {... */\n      jump\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2875:2892  _implementation() */\n    tag_73:\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2868:2892  return _implementation() */\n      swap1\n      pop\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2800:2899  function implementation() external view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":4972:5145  function funcCall(bytes calldata data)... */\n    tag_34:\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":5059:5071  bool success */\n      0x00\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":5076:5093  _implementation() */\n      tag_75\n        /* \"upgradeability/UpgradeabilityProxy.sol\":2067:2133  0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3 */\n      0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3\n        /* \"upgradeability/UpgradeabilityProxy.sol\":2843:2854  sload(slot) */\n      sload\n      swap1\n        /* \"upgradeability/UpgradeabilityProxy.sol\":2685:2870  function _implementation() internal override view returns (address impl) {... */\n      jump\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":5076:5093  _implementation() */\n    tag_75:\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":5076:5106  _implementation().delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":5107:5111  data */\n      dup4\n      dup4\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":5076:5112  _implementation().delegatecall(data) */\n      mload(0x40)\n      tag_76\n      swap3\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_76:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_79\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_78)\n    tag_79:\n      0x60\n      swap2\n      pop\n    tag_78:\n      pop\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":5058:5112  (bool success,) = _implementation().delegatecall(data) */\n      pop\n      swap1\n      pop\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":5130:5137  success */\n      dup1\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":5122:5138  require(success) */\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":3087:3359  function changeAdmin(address newAdmin) external ifAdmin {... */\n    tag_38:\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":1759:1825  0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b */\n      0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":5332:5343  sload(slot) */\n      sload\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2060:2082  msg.sender == _admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2060:2070  msg.sender */\n      caller\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2060:2082  msg.sender == _admin() */\n      sub\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2056:2152  if (msg.sender == _admin()) {... */\n      tag_53\n      jumpi\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":3174:3196  newAdmin != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":3153:3276  require(... */\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":2369:2371   */\n      0x20\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":3153:3276  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2351:2372   */\n      mstore\n        /* \"#utility.yul\":2408:2410   */\n      0x36\n        /* \"#utility.yul\":2388:2406   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2381:2411   */\n      mstore\n        /* \"#utility.yul\":2447:2481   */\n      0x43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f\n        /* \"#utility.yul\":2427:2445   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2420:2482   */\n      mstore\n        /* \"#utility.yul\":2518:2542   */\n      0x787920746f20746865207a65726f206164647265737300000000000000000000\n        /* \"#utility.yul\":2498:2516   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2491:2543   */\n      mstore\n        /* \"#utility.yul\":2560:2579   */\n      0x84\n      add\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":3153:3276  require(... */\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":3291:3323  AdminChanged(_admin(), newAdmin) */\n      0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":3304:3312  _admin() */\n      tag_88\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":1759:1825  0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b */\n      0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":5332:5343  sload(slot) */\n      sload\n      swap1\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":5202:5359  function _admin() internal view returns (address adm) {... */\n      jump\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":3304:3312  _admin() */\n    tag_88:\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":3291:3323  AdminChanged(_admin(), newAdmin) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2774:2816   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2843:2858   */\n      swap3\n      dup4\n      and\n        /* \"#utility.yul\":2825:2859   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2895:2910   */\n      swap2\n      dup5\n      and\n        /* \"#utility.yul\":2890:2892   */\n      0x20\n        /* \"#utility.yul\":2875:2893   */\n      dup4\n      add\n        /* \"#utility.yul\":2868:2911   */\n      mstore\n        /* \"#utility.yul\":2737:2755   */\n      add\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":3291:3323  AdminChanged(_admin(), newAdmin) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":3333:3352  _setAdmin(newAdmin) */\n      tag_55\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":3343:3351  newAdmin */\n      dup2\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":1759:1825  0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b */\n      0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":5600:5622  sstore(slot, newAdmin) */\n      sstore\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":5485:5638  function _setAdmin(address newAdmin) internal {... */\n      jump\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2647:2728  function admin() external view returns (address) {... */\n    tag_41:\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2687:2694  address */\n      0x00\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":2713:2721  _admin() */\n      tag_73\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":1759:1825  0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b */\n      0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":5332:5343  sload(slot) */\n      sload\n      swap1\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":5202:5359  function _admin() internal view returns (address adm) {... */\n      jump\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":5721:5935  function _beforeFallback() internal override {... */\n    tag_45:\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":1759:1825  0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b */\n      0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":5332:5343  sload(slot) */\n      sload\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":5797:5819  msg.sender != _admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":5797:5807  msg.sender */\n      caller\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":5797:5819  msg.sender != _admin() */\n      sub\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":5776:5895  require(... */\n      tag_46\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":3124:3126   */\n      0x20\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":5776:5895  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3106:3127   */\n      mstore\n        /* \"#utility.yul\":3163:3165   */\n      0x32\n        /* \"#utility.yul\":3143:3161   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3136:3166   */\n      mstore\n        /* \"#utility.yul\":3202:3236   */\n      0x43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e206672\n        /* \"#utility.yul\":3182:3200   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3175:3237   */\n      mstore\n        /* \"#utility.yul\":3273:3293   */\n      0x6f6d207468652070726f78792061646d696e0000000000000000000000000000\n        /* \"#utility.yul\":3253:3271   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3246:3294   */\n      mstore\n        /* \"#utility.yul\":3311:3330   */\n      0x84\n      add\n        /* \"upgradeability/AdminUpgradeabilityProxy.sol\":5776:5895  require(... */\n      tag_86\n        /* \"#utility.yul\":2922:3336   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":948:1843  function _delegate(address implementation) internal virtual {... */\n    tag_49:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1286:1300  calldatasize() */\n      calldatasize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1283:1284  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1280:1281  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1267:1301  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1500:1501  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1497:1498  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1481:1495  calldatasize() */\n      calldatasize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1478:1479  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1462:1476  implementation */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1455:1460  gas() */\n      gas\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1442:1502  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1576:1592  returndatasize() */\n      returndatasize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1573:1574  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1570:1571  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1555:1593  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1614:1620  result */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1681:1747  case 0 {... */\n      dup1\n      iszero\n      tag_107\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1796:1812  returndatasize() */\n      returndatasize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1793:1794  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1786:1813  return(0, returndatasize()) */\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1681:1747  case 0 {... */\n    tag_107:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1716:1732  returndatasize() */\n      returndatasize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1713:1714  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1706:1733  revert(0, returndatasize()) */\n      revert\n        /* \"upgradeability/UpgradeabilityProxy.sol\":3015:3167  function _upgradeTo(address newImplementation) internal {... */\n    tag_56:\n        /* \"upgradeability/UpgradeabilityProxy.sol\":3081:3118  _setImplementation(newImplementation) */\n      tag_110\n        /* \"upgradeability/UpgradeabilityProxy.sol\":3100:3117  newImplementation */\n      dup2\n        /* \"upgradeability/UpgradeabilityProxy.sol\":3081:3099  _setImplementation */\n      tag_111\n        /* \"upgradeability/UpgradeabilityProxy.sol\":3081:3118  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_110:\n        /* \"upgradeability/UpgradeabilityProxy.sol\":3133:3160  Upgraded(newImplementation) */\n      mload(0x40)\n        /* \"#utility.yul\":1422:1464   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1410:1465   */\n      dup3\n      and\n        /* \"#utility.yul\":1392:1466   */\n      dup2\n      mstore\n        /* \"upgradeability/UpgradeabilityProxy.sol\":3133:3160  Upgraded(newImplementation) */\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n        /* \"#utility.yul\":1380:1382   */\n      0x20\n        /* \"#utility.yul\":1365:1383   */\n      add\n        /* \"upgradeability/UpgradeabilityProxy.sol\":3133:3160  Upgraded(newImplementation) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"upgradeability/UpgradeabilityProxy.sol\":3015:3167  function _upgradeTo(address newImplementation) internal {... */\n      pop\n      jump\t// out\n        /* \"upgradeability/UpgradeabilityProxy.sol\":3314:3710  function _setImplementation(address newImplementation) private {... */\n    tag_111:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n      extcodesize\n        /* \"upgradeability/UpgradeabilityProxy.sol\":3387:3584  require(... */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":3543:3545   */\n      0x20\n        /* \"upgradeability/UpgradeabilityProxy.sol\":3387:3584  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3525:3546   */\n      mstore\n        /* \"#utility.yul\":3582:3584   */\n      0x3b\n        /* \"#utility.yul\":3562:3580   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3555:3585   */\n      mstore\n        /* \"#utility.yul\":3621:3655   */\n      0x43616e6e6f742073657420612070726f787920696d706c656d656e746174696f\n        /* \"#utility.yul\":3601:3619   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3594:3656   */\n      mstore\n        /* \"#utility.yul\":3692:3721   */\n      0x6e20746f2061206e6f6e2d636f6e747261637420616464726573730000000000\n        /* \"#utility.yul\":3672:3690   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3665:3722   */\n      mstore\n        /* \"#utility.yul\":3739:3758   */\n      0x84\n      add\n        /* \"upgradeability/UpgradeabilityProxy.sol\":3387:3584  require(... */\n      tag_86\n        /* \"#utility.yul\":3341:3764   */\n      jump\n        /* \"upgradeability/UpgradeabilityProxy.sol\":3387:3584  require(... */\n    tag_118:\n        /* \"upgradeability/UpgradeabilityProxy.sol\":2067:2133  0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3 */\n      0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3\n        /* \"upgradeability/UpgradeabilityProxy.sol\":3663:3694  sstore(slot, newImplementation) */\n      sstore\n        /* \"upgradeability/UpgradeabilityProxy.sol\":3314:3710  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"#utility.yul\":14:210   */\n    tag_122:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":142:184   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":131:185   */\n      dup2\n      and\n        /* \"#utility.yul\":121:186   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:204   */\n      tag_126\n      jumpi\n        /* \"#utility.yul\":200:201   */\n      0x00\n        /* \"#utility.yul\":197:198   */\n      dup1\n        /* \"#utility.yul\":190:202   */\n      revert\n        /* \"#utility.yul\":111:204   */\n    tag_126:\n        /* \"#utility.yul\":14:210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":215:401   */\n    tag_20:\n        /* \"#utility.yul\":274:280   */\n      0x00\n        /* \"#utility.yul\":327:329   */\n      0x20\n        /* \"#utility.yul\":315:324   */\n      dup3\n        /* \"#utility.yul\":306:313   */\n      dup5\n        /* \"#utility.yul\":302:325   */\n      sub\n        /* \"#utility.yul\":298:330   */\n      slt\n        /* \"#utility.yul\":295:347   */\n      iszero\n      tag_128\n      jumpi\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":340:341   */\n      dup1\n        /* \"#utility.yul\":333:345   */\n      revert\n        /* \"#utility.yul\":295:347   */\n    tag_128:\n        /* \"#utility.yul\":366:395   */\n      tag_129\n        /* \"#utility.yul\":385:394   */\n      dup3\n        /* \"#utility.yul\":366:395   */\n      tag_122\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":356:395   */\n      swap4\n        /* \"#utility.yul\":215:401   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":406:753   */\n    tag_123:\n        /* \"#utility.yul\":457:465   */\n      0x00\n        /* \"#utility.yul\":467:473   */\n      dup1\n        /* \"#utility.yul\":521:524   */\n      dup4\n        /* \"#utility.yul\":514:518   */\n      0x1f\n        /* \"#utility.yul\":506:512   */\n      dup5\n        /* \"#utility.yul\":502:519   */\n      add\n        /* \"#utility.yul\":498:525   */\n      slt\n        /* \"#utility.yul\":488:543   */\n      tag_131\n      jumpi\n        /* \"#utility.yul\":539:540   */\n      0x00\n        /* \"#utility.yul\":536:537   */\n      dup1\n        /* \"#utility.yul\":529:541   */\n      revert\n        /* \"#utility.yul\":488:543   */\n    tag_131:\n      pop\n        /* \"#utility.yul\":562:582   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":605:623   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":594:624   */\n      dup2\n      gt\n        /* \"#utility.yul\":591:641   */\n      iszero\n      tag_132\n      jumpi\n        /* \"#utility.yul\":637:638   */\n      0x00\n        /* \"#utility.yul\":634:635   */\n      dup1\n        /* \"#utility.yul\":627:639   */\n      revert\n        /* \"#utility.yul\":591:641   */\n    tag_132:\n        /* \"#utility.yul\":674:678   */\n      0x20\n        /* \"#utility.yul\":666:672   */\n      dup4\n        /* \"#utility.yul\":662:679   */\n      add\n        /* \"#utility.yul\":650:679   */\n      swap2\n      pop\n        /* \"#utility.yul\":726:729   */\n      dup4\n        /* \"#utility.yul\":719:723   */\n      0x20\n        /* \"#utility.yul\":710:716   */\n      dup3\n        /* \"#utility.yul\":702:708   */\n      dup6\n        /* \"#utility.yul\":698:717   */\n      add\n        /* \"#utility.yul\":694:724   */\n      add\n        /* \"#utility.yul\":691:730   */\n      gt\n        /* \"#utility.yul\":688:747   */\n      iszero\n      tag_133\n      jumpi\n        /* \"#utility.yul\":743:744   */\n      0x00\n        /* \"#utility.yul\":740:741   */\n      dup1\n        /* \"#utility.yul\":733:745   */\n      revert\n        /* \"#utility.yul\":688:747   */\n    tag_133:\n        /* \"#utility.yul\":406:753   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1241   */\n    tag_24:\n        /* \"#utility.yul\":837:843   */\n      0x00\n        /* \"#utility.yul\":845:851   */\n      dup1\n        /* \"#utility.yul\":853:859   */\n      0x00\n        /* \"#utility.yul\":906:908   */\n      0x40\n        /* \"#utility.yul\":894:903   */\n      dup5\n        /* \"#utility.yul\":885:892   */\n      dup7\n        /* \"#utility.yul\":881:904   */\n      sub\n        /* \"#utility.yul\":877:909   */\n      slt\n        /* \"#utility.yul\":874:926   */\n      iszero\n      tag_135\n      jumpi\n        /* \"#utility.yul\":922:923   */\n      0x00\n        /* \"#utility.yul\":919:920   */\n      dup1\n        /* \"#utility.yul\":912:924   */\n      revert\n        /* \"#utility.yul\":874:926   */\n    tag_135:\n        /* \"#utility.yul\":945:974   */\n      tag_136\n        /* \"#utility.yul\":964:973   */\n      dup5\n        /* \"#utility.yul\":945:974   */\n      tag_122\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":935:974   */\n      swap3\n      pop\n        /* \"#utility.yul\":1025:1027   */\n      0x20\n        /* \"#utility.yul\":1014:1023   */\n      dup5\n        /* \"#utility.yul\":1010:1028   */\n      add\n        /* \"#utility.yul\":997:1029   */\n      calldataload\n        /* \"#utility.yul\":1052:1070   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1044:1050   */\n      dup2\n        /* \"#utility.yul\":1041:1071   */\n      gt\n        /* \"#utility.yul\":1038:1088   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":1084:1085   */\n      0x00\n        /* \"#utility.yul\":1081:1082   */\n      dup1\n        /* \"#utility.yul\":1074:1086   */\n      revert\n        /* \"#utility.yul\":1038:1088   */\n    tag_137:\n        /* \"#utility.yul\":1123:1181   */\n      tag_138\n        /* \"#utility.yul\":1173:1180   */\n      dup7\n        /* \"#utility.yul\":1164:1170   */\n      dup3\n        /* \"#utility.yul\":1153:1162   */\n      dup8\n        /* \"#utility.yul\":1149:1171   */\n      add\n        /* \"#utility.yul\":1123:1181   */\n      tag_123\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":758:1241   */\n      swap5\n      swap8\n        /* \"#utility.yul\":1200:1208   */\n      swap1\n      swap7\n      pop\n        /* \"#utility.yul\":1097:1181   */\n      swap4\n      swap5\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":758:1241   */\n      jump\t// out\n        /* \"#utility.yul\":1477:1886   */\n    tag_33:\n        /* \"#utility.yul\":1547:1553   */\n      0x00\n        /* \"#utility.yul\":1555:1561   */\n      dup1\n        /* \"#utility.yul\":1608:1610   */\n      0x20\n        /* \"#utility.yul\":1596:1605   */\n      dup4\n        /* \"#utility.yul\":1587:1594   */\n      dup6\n        /* \"#utility.yul\":1583:1606   */\n      sub\n        /* \"#utility.yul\":1579:1611   */\n      slt\n        /* \"#utility.yul\":1576:1628   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":1624:1625   */\n      0x00\n        /* \"#utility.yul\":1621:1622   */\n      dup1\n        /* \"#utility.yul\":1614:1626   */\n      revert\n        /* \"#utility.yul\":1576:1628   */\n    tag_141:\n        /* \"#utility.yul\":1664:1673   */\n      dup3\n        /* \"#utility.yul\":1651:1674   */\n      calldataload\n        /* \"#utility.yul\":1697:1715   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1689:1695   */\n      dup2\n        /* \"#utility.yul\":1686:1716   */\n      gt\n        /* \"#utility.yul\":1683:1733   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":1729:1730   */\n      0x00\n        /* \"#utility.yul\":1726:1727   */\n      dup1\n        /* \"#utility.yul\":1719:1731   */\n      revert\n        /* \"#utility.yul\":1683:1733   */\n    tag_142:\n        /* \"#utility.yul\":1768:1826   */\n      tag_143\n        /* \"#utility.yul\":1818:1825   */\n      dup6\n        /* \"#utility.yul\":1809:1815   */\n      dup3\n        /* \"#utility.yul\":1798:1807   */\n      dup7\n        /* \"#utility.yul\":1794:1816   */\n      add\n        /* \"#utility.yul\":1768:1826   */\n      tag_123\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":1845:1853   */\n      swap1\n      swap7\n        /* \"#utility.yul\":1742:1826   */\n      swap1\n      swap6\n      pop\n        /* \"#utility.yul\":1477:1886   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1891:2162   */\n    tag_65:\n        /* \"#utility.yul\":2074:2080   */\n      dup2\n        /* \"#utility.yul\":2066:2072   */\n      dup4\n        /* \"#utility.yul\":2061:2064   */\n      dup3\n        /* \"#utility.yul\":2048:2081   */\n      calldatacopy\n        /* \"#utility.yul\":2030:2033   */\n      0x00\n        /* \"#utility.yul\":2100:2116   */\n      swap2\n      add\n        /* \"#utility.yul\":2125:2138   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2100:2116   */\n      swap2\n        /* \"#utility.yul\":1891:2162   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a28169e68168942a5878686260b809d2bbfd7c7716882f9a0a1f284e4f1cee8a64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_438": {
									"entryPoint": null,
									"id": 438,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_633": {
									"entryPoint": null,
									"id": 633,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setAdmin_575": {
									"entryPoint": null,
									"id": 575,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_681": {
									"entryPoint": 104,
									"id": 681,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isContract_69": {
									"entryPoint": null,
									"id": 69,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x01": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:866:4",
										"nodeType": "YulBlock",
										"src": "0:866:4",
										"statements": [
											{
												"nativeSrc": "6:3:4",
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:4",
													"nodeType": "YulBlock",
													"src": "95:209:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:4",
																"nodeType": "YulBlock",
																"src": "141:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:4",
																					"nodeType": "YulLiteral",
																					"src": "150:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:4",
																					"nodeType": "YulLiteral",
																					"src": "153:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:4"
																			},
																			"nativeSrc": "143:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:4"
																		},
																		"nativeSrc": "143:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:4"
																		},
																		"nativeSrc": "112:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:4",
																		"nodeType": "YulLiteral",
																		"src": "137:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:4"
																},
																"nativeSrc": "108:32:4",
																"nodeType": "YulFunctionCall",
																"src": "108:32:4"
															},
															"nativeSrc": "105:52:4",
															"nodeType": "YulIf",
															"src": "105:52:4"
														},
														{
															"nativeSrc": "166:29:4",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:4"
																},
																"nativeSrc": "179:16:4",
																"nodeType": "YulFunctionCall",
																"src": "179:16:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:4",
																	"nodeType": "YulTypedName",
																	"src": "170:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:4",
																"nodeType": "YulBlock",
																"src": "258:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:4",
																					"nodeType": "YulLiteral",
																					"src": "267:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:4",
																					"nodeType": "YulLiteral",
																					"src": "270:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:4"
																			},
																			"nativeSrc": "260:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:4"
																		},
																		"nativeSrc": "260:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:4",
																										"nodeType": "YulLiteral",
																										"src": "243:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:4",
																										"nodeType": "YulLiteral",
																										"src": "248:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:4"
																								},
																								"nativeSrc": "239:11:4",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:4"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:4",
																								"nodeType": "YulLiteral",
																								"src": "252:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:4"
																						},
																						"nativeSrc": "235:19:4",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:4"
																				},
																				"nativeSrc": "224:31:4",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:4"
																		},
																		"nativeSrc": "214:42:4",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:4"
																},
																"nativeSrc": "207:50:4",
																"nodeType": "YulFunctionCall",
																"src": "207:50:4"
															},
															"nativeSrc": "204:70:4",
															"nodeType": "YulIf",
															"src": "204:70:4"
														},
														{
															"nativeSrc": "283:15:4",
															"nodeType": "YulAssignment",
															"src": "283:15:4",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:4",
																"nodeType": "YulIdentifier",
																"src": "293:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:4",
														"nodeType": "YulTypedName",
														"src": "61:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:4",
														"nodeType": "YulTypedName",
														"src": "72:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:4",
														"nodeType": "YulTypedName",
														"src": "84:6:4",
														"type": ""
													}
												],
												"src": "14:290:4"
											},
											{
												"body": {
													"nativeSrc": "341:95:4",
													"nodeType": "YulBlock",
													"src": "341:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "358:1:4",
																		"nodeType": "YulLiteral",
																		"src": "358:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "365:3:4",
																				"nodeType": "YulLiteral",
																				"src": "365:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "370:10:4",
																				"nodeType": "YulLiteral",
																				"src": "370:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "361:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "361:3:4"
																		},
																		"nativeSrc": "361:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "361:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "351:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "351:6:4"
																},
																"nativeSrc": "351:31:4",
																"nodeType": "YulFunctionCall",
																"src": "351:31:4"
															},
															"nativeSrc": "351:31:4",
															"nodeType": "YulExpressionStatement",
															"src": "351:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "398:1:4",
																		"nodeType": "YulLiteral",
																		"src": "398:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "401:4:4",
																		"nodeType": "YulLiteral",
																		"src": "401:4:4",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "391:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "391:6:4"
																},
																"nativeSrc": "391:15:4",
																"nodeType": "YulFunctionCall",
																"src": "391:15:4"
															},
															"nativeSrc": "391:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "391:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "422:1:4",
																		"nodeType": "YulLiteral",
																		"src": "422:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "425:4:4",
																		"nodeType": "YulLiteral",
																		"src": "425:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "415:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "415:6:4"
																},
																"nativeSrc": "415:15:4",
																"nodeType": "YulFunctionCall",
																"src": "415:15:4"
															},
															"nativeSrc": "415:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "415:15:4"
														}
													]
												},
												"name": "panic_error_0x01",
												"nativeSrc": "309:127:4",
												"nodeType": "YulFunctionDefinition",
												"src": "309:127:4"
											},
											{
												"body": {
													"nativeSrc": "615:249:4",
													"nodeType": "YulBlock",
													"src": "615:249:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "632:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "632:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "643:2:4",
																		"nodeType": "YulLiteral",
																		"src": "643:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "625:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "625:6:4"
																},
																"nativeSrc": "625:21:4",
																"nodeType": "YulFunctionCall",
																"src": "625:21:4"
															},
															"nativeSrc": "625:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "625:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "666:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "666:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "677:2:4",
																				"nodeType": "YulLiteral",
																				"src": "677:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "662:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "662:3:4"
																		},
																		"nativeSrc": "662:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "662:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "682:2:4",
																		"nodeType": "YulLiteral",
																		"src": "682:2:4",
																		"type": "",
																		"value": "59"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "655:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "655:6:4"
																},
																"nativeSrc": "655:30:4",
																"nodeType": "YulFunctionCall",
																"src": "655:30:4"
															},
															"nativeSrc": "655:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "655:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "705:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "705:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "716:2:4",
																				"nodeType": "YulLiteral",
																				"src": "716:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "701:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "701:3:4"
																		},
																		"nativeSrc": "701:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "701:18:4"
																	},
																	{
																		"hexValue": "43616e6e6f742073657420612070726f787920696d706c656d656e746174696f",
																		"kind": "string",
																		"nativeSrc": "721:34:4",
																		"nodeType": "YulLiteral",
																		"src": "721:34:4",
																		"type": "",
																		"value": "Cannot set a proxy implementatio"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "694:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "694:6:4"
																},
																"nativeSrc": "694:62:4",
																"nodeType": "YulFunctionCall",
																"src": "694:62:4"
															},
															"nativeSrc": "694:62:4",
															"nodeType": "YulExpressionStatement",
															"src": "694:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "776:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "776:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "787:2:4",
																				"nodeType": "YulLiteral",
																				"src": "787:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "772:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "772:3:4"
																		},
																		"nativeSrc": "772:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "772:18:4"
																	},
																	{
																		"hexValue": "6e20746f2061206e6f6e2d636f6e74726163742061646472657373",
																		"kind": "string",
																		"nativeSrc": "792:29:4",
																		"nodeType": "YulLiteral",
																		"src": "792:29:4",
																		"type": "",
																		"value": "n to a non-contract address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "765:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "765:6:4"
																},
																"nativeSrc": "765:57:4",
																"nodeType": "YulFunctionCall",
																"src": "765:57:4"
															},
															"nativeSrc": "765:57:4",
															"nodeType": "YulExpressionStatement",
															"src": "765:57:4"
														},
														{
															"nativeSrc": "831:27:4",
															"nodeType": "YulAssignment",
															"src": "831:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "843:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "843:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "854:3:4",
																		"nodeType": "YulLiteral",
																		"src": "854:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "839:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "839:3:4"
																},
																"nativeSrc": "839:19:4",
																"nodeType": "YulFunctionCall",
																"src": "839:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "831:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "831:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "441:423:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "592:9:4",
														"nodeType": "YulTypedName",
														"src": "592:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "606:4:4",
														"nodeType": "YulTypedName",
														"src": "606:4:4",
														"type": ""
													}
												],
												"src": "441:423:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x01()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"Cannot set a proxy implementatio\")\n        mstore(add(headStart, 96), \"n to a non-contract address\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516109d83803806109d883398101604081905261002f9161010d565b8061003981610068565b50610062337f10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b55565b5061013d565b6001600160a01b0381163b6100e95760405162461bcd60e51b815260206004820152603b60248201527f43616e6e6f742073657420612070726f787920696d706c656d656e746174696f60448201527f6e20746f2061206e6f6e2d636f6e747261637420616464726573730000000000606482015260840160405180910390fd5b7f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c355565b60006020828403121561011f57600080fd5b81516001600160a01b038116811461013657600080fd5b9392505050565b61088c8061014c6000396000f3fe6080604052600436106100695760003560e01c80636c9ad7db116100435780636c9ad7db146100f15780638f28397014610104578063f851a4401461012457610078565b80633659cfe6146100805780634f1ef286146100a05780635c60da1b146100b357610078565b3661007857610076610139565b005b610076610139565b34801561008c57600080fd5b5061007661009b366004610746565b610173565b6100766100ae3660046107b1565b6101c5565b3480156100bf57600080fd5b506100c8610299565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100766100ff366004610804565b6102c8565b34801561011057600080fd5b5061007661011f366004610746565b610366565b34801561013057600080fd5b506100c86104ec565b610141610516565b61017161016c7f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c35490565b6105dc565b565b7f10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b5473ffffffffffffffffffffffffffffffffffffffff1633036101bd576101ba81610600565b50565b6101ba610139565b7f10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b5473ffffffffffffffffffffffffffffffffffffffff16330361028c5761020c83610600565b60003073ffffffffffffffffffffffffffffffffffffffff16348484604051610236929190610846565b60006040518083038185875af1925050503d8060008114610273576040519150601f19603f3d011682016040523d82523d6000602084013e610278565b606091505b505090508061028657600080fd5b50505050565b610294610139565b505050565b60006102c37f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c35490565b905090565b60006102f27f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c35490565b73ffffffffffffffffffffffffffffffffffffffff168383604051610318929190610846565b600060405180830381855af49150503d8060008114610353576040519150601f19603f3d011682016040523d82523d6000602084013e610358565b606091505b505090508061029457600080fd5b7f10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b5473ffffffffffffffffffffffffffffffffffffffff1633036101bd5773ffffffffffffffffffffffffffffffffffffffff811661044c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f60448201527f787920746f20746865207a65726f20616464726573730000000000000000000060648201526084015b60405180910390fd5b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104957f10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b5490565b6040805173ffffffffffffffffffffffffffffffffffffffff928316815291841660208301520160405180910390a16101ba817f10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b55565b60006102c37f10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b5490565b7f10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b5473ffffffffffffffffffffffffffffffffffffffff163303610171576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e20667260448201527f6f6d207468652070726f78792061646d696e00000000000000000000000000006064820152608401610443565b3660008037600080366000845af43d6000803e8080156105fb573d6000f35b3d6000fd5b61060981610655565b60405173ffffffffffffffffffffffffffffffffffffffff821681527fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b9060200160405180910390a150565b73ffffffffffffffffffffffffffffffffffffffff81163b6106f9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f43616e6e6f742073657420612070726f787920696d706c656d656e746174696f60448201527f6e20746f2061206e6f6e2d636f6e7472616374206164647265737300000000006064820152608401610443565b7f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c355565b803573ffffffffffffffffffffffffffffffffffffffff8116811461074157600080fd5b919050565b60006020828403121561075857600080fd5b6107618261071d565b9392505050565b60008083601f84011261077a57600080fd5b50813567ffffffffffffffff81111561079257600080fd5b6020830191508360208285010111156107aa57600080fd5b9250929050565b6000806000604084860312156107c657600080fd5b6107cf8461071d565b9250602084013567ffffffffffffffff8111156107eb57600080fd5b6107f786828701610768565b9497909650939450505050565b6000806020838503121561081757600080fd5b823567ffffffffffffffff81111561082e57600080fd5b61083a85828601610768565b90969095509350505050565b818382376000910190815291905056fea2646970667358221220a28169e68168942a5878686260b809d2bbfd7c7716882f9a0a1f284e4f1cee8a64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x9D8 CODESIZE SUB DUP1 PUSH2 0x9D8 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x10D JUMP JUMPDEST DUP1 PUSH2 0x39 DUP2 PUSH2 0x68 JUMP JUMPDEST POP PUSH2 0x62 CALLER PUSH32 0x10D6A54A4754C8869D6886B5F5D7FBFA5B4522237EA5C60D11BC4E7A1FF9390B SSTORE JUMP JUMPDEST POP PUSH2 0x13D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0xE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073657420612070726F787920696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E20746F2061206E6F6E2D636F6E747261637420616464726573730000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x88C DUP1 PUSH2 0x14C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x69 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C9AD7DB GT PUSH2 0x43 JUMPI DUP1 PUSH4 0x6C9AD7DB EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x124 JUMPI PUSH2 0x78 JUMP JUMPDEST DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0xB3 JUMPI PUSH2 0x78 JUMP JUMPDEST CALLDATASIZE PUSH2 0x78 JUMPI PUSH2 0x76 PUSH2 0x139 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x76 PUSH2 0x139 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x746 JUMP JUMPDEST PUSH2 0x173 JUMP JUMPDEST PUSH2 0x76 PUSH2 0xAE CALLDATASIZE PUSH1 0x4 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x1C5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x76 PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0x804 JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0x746 JUMP JUMPDEST PUSH2 0x366 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x141 PUSH2 0x516 JUMP JUMPDEST PUSH2 0x171 PUSH2 0x16C PUSH32 0x7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5DC JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x10D6A54A4754C8869D6886B5F5D7FBFA5B4522237EA5C60D11BC4E7A1FF9390B SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER SUB PUSH2 0x1BD JUMPI PUSH2 0x1BA DUP2 PUSH2 0x600 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x139 JUMP JUMPDEST PUSH32 0x10D6A54A4754C8869D6886B5F5D7FBFA5B4522237EA5C60D11BC4E7A1FF9390B SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER SUB PUSH2 0x28C JUMPI PUSH2 0x20C DUP4 PUSH2 0x600 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x236 SWAP3 SWAP2 SWAP1 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x273 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x278 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x294 PUSH2 0x139 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C3 PUSH32 0x7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F2 PUSH32 0x7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3 SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x318 SWAP3 SWAP2 SWAP1 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x353 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x10D6A54A4754C8869D6886B5F5D7FBFA5B4522237EA5C60D11BC4E7A1FF9390B SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER SUB PUSH2 0x1BD JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x44C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206368616E6765207468652061646D696E206F6620612070726F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x787920746F20746865207A65726F206164647265737300000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH2 0x495 PUSH32 0x10D6A54A4754C8869D6886B5F5D7FBFA5B4522237EA5C60D11BC4E7A1FF9390B SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP5 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1BA DUP2 PUSH32 0x10D6A54A4754C8869D6886B5F5D7FBFA5B4522237EA5C60D11BC4E7A1FF9390B SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C3 PUSH32 0x10D6A54A4754C8869D6886B5F5D7FBFA5B4522237EA5C60D11BC4E7A1FF9390B SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x10D6A54A4754C8869D6886B5F5D7FBFA5B4522237EA5C60D11BC4E7A1FF9390B SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER SUB PUSH2 0x171 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742063616C6C2066616C6C6261636B2066756E6374696F6E206672 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6D207468652070726F78792061646D696E0000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x443 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x5FB JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x609 DUP2 PUSH2 0x655 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND EXTCODESIZE PUSH2 0x6F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073657420612070726F787920696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E20746F2061206E6F6E2D636F6E747261637420616464726573730000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x443 JUMP JUMPDEST PUSH32 0x7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x741 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x758 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x761 DUP3 PUSH2 0x71D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x77A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x792 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x7AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7CF DUP5 PUSH2 0x71D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F7 DUP7 DUP3 DUP8 ADD PUSH2 0x768 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x817 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x82E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x83A DUP6 DUP3 DUP7 ADD PUSH2 0x768 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 DUP2 PUSH10 0xE68168942A5878686260 0xB8 MULMOD 0xD2 0xBB REVERT PUSH29 0x7716882F9A0A1F284E4F1CEE8A64736F6C634300081900330000000000 ",
							"sourceMap": "1209:4728:2:-:0;;;2350:228;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2440:22;2508:42:3;2527:22;2508:18;:42::i;:::-;-1:-1:-1;2550:21:2::1;2560:10;1759:66:::0;5600:22;5485:153;2550:21:::1;2350:228:::0;1209:4728;;3314:396:3;-1:-1:-1;;;;;1465:19:1;;;3387:197:3;;;;-1:-1:-1;;;3387:197:3;;643:2:4;3387:197:3;;;625:21:4;682:2;662:18;;;655:30;721:34;701:18;;;694:62;792:29;772:18;;;765:57;839:19;;3387:197:3;;;;;;;;2067:66;3663:31;3314:396::o;14:290:4:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:4;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:4:o;441:423::-;1209:4728:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_37": {
									"entryPoint": null,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_45": {
									"entryPoint": null,
									"id": 45,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_admin_563": {
									"entryPoint": null,
									"id": 563,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeFallback_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_beforeFallback_595": {
									"entryPoint": 1302,
									"id": 595,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_delegate_10": {
									"entryPoint": 1500,
									"id": 10,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_fallback_29": {
									"entryPoint": 313,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_implementation_646": {
									"entryPoint": null,
									"id": 646,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setAdmin_575": {
									"entryPoint": null,
									"id": 575,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_681": {
									"entryPoint": 1621,
									"id": 681,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeTo_661": {
									"entryPoint": 1536,
									"id": 661,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@admin_448": {
									"entryPoint": 1260,
									"id": 448,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@changeAdmin_487": {
									"entryPoint": 870,
									"id": 487,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@funcCall_551": {
									"entryPoint": 712,
									"id": 551,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@implementation_458": {
									"entryPoint": 665,
									"id": 458,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isContract_69": {
									"entryPoint": null,
									"id": 69,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@upgradeToAndCall_532": {
									"entryPoint": 453,
									"id": 532,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@upgradeTo_500": {
									"entryPoint": 371,
									"id": 500,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 1821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bytes_calldata": {
									"entryPoint": 1896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_calldata_ptr": {
									"entryPoint": 1969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes_calldata_ptr": {
									"entryPoint": 2052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2118,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_08b466bde770d6d309a22d90ec051a62ad397be6218a53e741989877ec297fc9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_37112268ceb11e15373f32f9374a1f3287d0a3e6e5a9a435ac06367e6cd0cf00__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3766:4",
										"nodeType": "YulBlock",
										"src": "0:3766:4",
										"statements": [
											{
												"nativeSrc": "6:3:4",
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "63:147:4",
													"nodeType": "YulBlock",
													"src": "63:147:4",
													"statements": [
														{
															"nativeSrc": "73:29:4",
															"nodeType": "YulAssignment",
															"src": "73:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "95:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "82:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:4"
																},
																"nativeSrc": "82:20:4",
																"nodeType": "YulFunctionCall",
																"src": "82:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "73:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "188:16:4",
																"nodeType": "YulBlock",
																"src": "188:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "197:1:4",
																					"nodeType": "YulLiteral",
																					"src": "197:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "200:1:4",
																					"nodeType": "YulLiteral",
																					"src": "200:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "190:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "190:6:4"
																			},
																			"nativeSrc": "190:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "190:12:4"
																		},
																		"nativeSrc": "190:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "190:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "124:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "135:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "142:42:4",
																						"nodeType": "YulLiteral",
																						"src": "142:42:4",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "131:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:4"
																				},
																				"nativeSrc": "131:54:4",
																				"nodeType": "YulFunctionCall",
																				"src": "131:54:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "121:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:4"
																		},
																		"nativeSrc": "121:65:4",
																		"nodeType": "YulFunctionCall",
																		"src": "121:65:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "114:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:4"
																},
																"nativeSrc": "114:73:4",
																"nodeType": "YulFunctionCall",
																"src": "114:73:4"
															},
															"nativeSrc": "111:93:4",
															"nodeType": "YulIf",
															"src": "111:93:4"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "14:196:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "42:6:4",
														"nodeType": "YulTypedName",
														"src": "42:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "53:5:4",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "14:196:4"
											},
											{
												"body": {
													"nativeSrc": "285:116:4",
													"nodeType": "YulBlock",
													"src": "285:116:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "331:16:4",
																"nodeType": "YulBlock",
																"src": "331:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "340:1:4",
																					"nodeType": "YulLiteral",
																					"src": "340:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:1:4",
																					"nodeType": "YulLiteral",
																					"src": "343:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "333:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "333:6:4"
																			},
																			"nativeSrc": "333:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "333:12:4"
																		},
																		"nativeSrc": "333:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "333:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "306:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "306:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "315:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "315:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "302:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "302:3:4"
																		},
																		"nativeSrc": "302:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "302:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "327:2:4",
																		"nodeType": "YulLiteral",
																		"src": "327:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "298:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:4"
																},
																"nativeSrc": "298:32:4",
																"nodeType": "YulFunctionCall",
																"src": "298:32:4"
															},
															"nativeSrc": "295:52:4",
															"nodeType": "YulIf",
															"src": "295:52:4"
														},
														{
															"nativeSrc": "356:39:4",
															"nodeType": "YulAssignment",
															"src": "356:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "385:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "385:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "366:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "366:18:4"
																},
																"nativeSrc": "366:29:4",
																"nodeType": "YulFunctionCall",
																"src": "366:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "356:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "356:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "215:186:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "251:9:4",
														"nodeType": "YulTypedName",
														"src": "251:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "262:7:4",
														"nodeType": "YulTypedName",
														"src": "262:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "274:6:4",
														"nodeType": "YulTypedName",
														"src": "274:6:4",
														"type": ""
													}
												],
												"src": "215:186:4"
											},
											{
												"body": {
													"nativeSrc": "478:275:4",
													"nodeType": "YulBlock",
													"src": "478:275:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "527:16:4",
																"nodeType": "YulBlock",
																"src": "527:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "536:1:4",
																					"nodeType": "YulLiteral",
																					"src": "536:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "539:1:4",
																					"nodeType": "YulLiteral",
																					"src": "539:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "529:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "529:6:4"
																			},
																			"nativeSrc": "529:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "529:12:4"
																		},
																		"nativeSrc": "529:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "529:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "506:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "506:6:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "514:4:4",
																						"nodeType": "YulLiteral",
																						"src": "514:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "502:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "502:3:4"
																				},
																				"nativeSrc": "502:17:4",
																				"nodeType": "YulFunctionCall",
																				"src": "502:17:4"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "521:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "521:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "498:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "498:3:4"
																		},
																		"nativeSrc": "498:27:4",
																		"nodeType": "YulFunctionCall",
																		"src": "498:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "491:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "491:6:4"
																},
																"nativeSrc": "491:35:4",
																"nodeType": "YulFunctionCall",
																"src": "491:35:4"
															},
															"nativeSrc": "488:55:4",
															"nodeType": "YulIf",
															"src": "488:55:4"
														},
														{
															"nativeSrc": "552:30:4",
															"nodeType": "YulAssignment",
															"src": "552:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "575:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "575:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "562:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "562:12:4"
																},
																"nativeSrc": "562:20:4",
																"nodeType": "YulFunctionCall",
																"src": "562:20:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "552:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "552:6:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "625:16:4",
																"nodeType": "YulBlock",
																"src": "625:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "634:1:4",
																					"nodeType": "YulLiteral",
																					"src": "634:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "637:1:4",
																					"nodeType": "YulLiteral",
																					"src": "637:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "627:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "627:6:4"
																			},
																			"nativeSrc": "627:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "627:12:4"
																		},
																		"nativeSrc": "627:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "627:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "597:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "597:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "605:18:4",
																		"nodeType": "YulLiteral",
																		"src": "605:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "594:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "594:2:4"
																},
																"nativeSrc": "594:30:4",
																"nodeType": "YulFunctionCall",
																"src": "594:30:4"
															},
															"nativeSrc": "591:50:4",
															"nodeType": "YulIf",
															"src": "591:50:4"
														},
														{
															"nativeSrc": "650:29:4",
															"nodeType": "YulAssignment",
															"src": "650:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "666:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "666:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "674:4:4",
																		"nodeType": "YulLiteral",
																		"src": "674:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "662:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "662:3:4"
																},
																"nativeSrc": "662:17:4",
																"nodeType": "YulFunctionCall",
																"src": "662:17:4"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "650:8:4",
																	"nodeType": "YulIdentifier",
																	"src": "650:8:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "731:16:4",
																"nodeType": "YulBlock",
																"src": "731:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "740:1:4",
																					"nodeType": "YulLiteral",
																					"src": "740:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "743:1:4",
																					"nodeType": "YulLiteral",
																					"src": "743:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "733:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "733:6:4"
																			},
																			"nativeSrc": "733:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "733:12:4"
																		},
																		"nativeSrc": "733:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "733:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "702:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "702:6:4"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "710:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "710:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "698:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "698:3:4"
																				},
																				"nativeSrc": "698:19:4",
																				"nodeType": "YulFunctionCall",
																				"src": "698:19:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "719:4:4",
																				"nodeType": "YulLiteral",
																				"src": "719:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "694:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "694:3:4"
																		},
																		"nativeSrc": "694:30:4",
																		"nodeType": "YulFunctionCall",
																		"src": "694:30:4"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "726:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "726:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "691:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "691:2:4"
																},
																"nativeSrc": "691:39:4",
																"nodeType": "YulFunctionCall",
																"src": "691:39:4"
															},
															"nativeSrc": "688:59:4",
															"nodeType": "YulIf",
															"src": "688:59:4"
														}
													]
												},
												"name": "abi_decode_bytes_calldata",
												"nativeSrc": "406:347:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "441:6:4",
														"nodeType": "YulTypedName",
														"src": "441:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "449:3:4",
														"nodeType": "YulTypedName",
														"src": "449:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "457:8:4",
														"nodeType": "YulTypedName",
														"src": "457:8:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "467:6:4",
														"nodeType": "YulTypedName",
														"src": "467:6:4",
														"type": ""
													}
												],
												"src": "406:347:4"
											},
											{
												"body": {
													"nativeSrc": "864:377:4",
													"nodeType": "YulBlock",
													"src": "864:377:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "910:16:4",
																"nodeType": "YulBlock",
																"src": "910:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "919:1:4",
																					"nodeType": "YulLiteral",
																					"src": "919:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "922:1:4",
																					"nodeType": "YulLiteral",
																					"src": "922:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "912:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "912:6:4"
																			},
																			"nativeSrc": "912:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "912:12:4"
																		},
																		"nativeSrc": "912:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "912:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "885:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "885:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "894:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "894:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "881:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "881:3:4"
																		},
																		"nativeSrc": "881:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "881:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "906:2:4",
																		"nodeType": "YulLiteral",
																		"src": "906:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "877:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "877:3:4"
																},
																"nativeSrc": "877:32:4",
																"nodeType": "YulFunctionCall",
																"src": "877:32:4"
															},
															"nativeSrc": "874:52:4",
															"nodeType": "YulIf",
															"src": "874:52:4"
														},
														{
															"nativeSrc": "935:39:4",
															"nodeType": "YulAssignment",
															"src": "935:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "964:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "964:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "945:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "945:18:4"
																},
																"nativeSrc": "945:29:4",
																"nodeType": "YulFunctionCall",
																"src": "945:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "935:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "935:6:4"
																}
															]
														},
														{
															"nativeSrc": "983:46:4",
															"nodeType": "YulVariableDeclaration",
															"src": "983:46:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1014:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1014:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1025:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1025:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1010:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1010:3:4"
																		},
																		"nativeSrc": "1010:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1010:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "997:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "997:12:4"
																},
																"nativeSrc": "997:32:4",
																"nodeType": "YulFunctionCall",
																"src": "997:32:4"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "987:6:4",
																	"nodeType": "YulTypedName",
																	"src": "987:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1072:16:4",
																"nodeType": "YulBlock",
																"src": "1072:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1081:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1081:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1084:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1084:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1074:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1074:6:4"
																			},
																			"nativeSrc": "1074:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1074:12:4"
																		},
																		"nativeSrc": "1074:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1074:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1044:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1044:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1052:18:4",
																		"nodeType": "YulLiteral",
																		"src": "1052:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1041:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "1041:2:4"
																},
																"nativeSrc": "1041:30:4",
																"nodeType": "YulFunctionCall",
																"src": "1041:30:4"
															},
															"nativeSrc": "1038:50:4",
															"nodeType": "YulIf",
															"src": "1038:50:4"
														},
														{
															"nativeSrc": "1097:84:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1097:84:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1153:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1153:9:4"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1164:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1164:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1149:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1149:3:4"
																		},
																		"nativeSrc": "1149:22:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1149:22:4"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1173:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "1173:7:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nativeSrc": "1123:25:4",
																	"nodeType": "YulIdentifier",
																	"src": "1123:25:4"
																},
																"nativeSrc": "1123:58:4",
																"nodeType": "YulFunctionCall",
																"src": "1123:58:4"
															},
															"variables": [
																{
																	"name": "value1_1",
																	"nativeSrc": "1101:8:4",
																	"nodeType": "YulTypedName",
																	"src": "1101:8:4",
																	"type": ""
																},
																{
																	"name": "value2_1",
																	"nativeSrc": "1111:8:4",
																	"nodeType": "YulTypedName",
																	"src": "1111:8:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1190:18:4",
															"nodeType": "YulAssignment",
															"src": "1190:18:4",
															"value": {
																"name": "value1_1",
																"nativeSrc": "1200:8:4",
																"nodeType": "YulIdentifier",
																"src": "1200:8:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1190:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1190:6:4"
																}
															]
														},
														{
															"nativeSrc": "1217:18:4",
															"nodeType": "YulAssignment",
															"src": "1217:18:4",
															"value": {
																"name": "value2_1",
																"nativeSrc": "1227:8:4",
																"nodeType": "YulIdentifier",
																"src": "1227:8:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1217:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1217:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_calldata_ptr",
												"nativeSrc": "758:483:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "814:9:4",
														"nodeType": "YulTypedName",
														"src": "814:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "825:7:4",
														"nodeType": "YulTypedName",
														"src": "825:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "837:6:4",
														"nodeType": "YulTypedName",
														"src": "837:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "845:6:4",
														"nodeType": "YulTypedName",
														"src": "845:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "853:6:4",
														"nodeType": "YulTypedName",
														"src": "853:6:4",
														"type": ""
													}
												],
												"src": "758:483:4"
											},
											{
												"body": {
													"nativeSrc": "1347:125:4",
													"nodeType": "YulBlock",
													"src": "1347:125:4",
													"statements": [
														{
															"nativeSrc": "1357:26:4",
															"nodeType": "YulAssignment",
															"src": "1357:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1369:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1369:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1380:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1380:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1365:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1365:3:4"
																},
																"nativeSrc": "1365:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1365:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1357:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1357:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1399:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1399:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1414:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1414:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1422:42:4",
																				"nodeType": "YulLiteral",
																				"src": "1422:42:4",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1410:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1410:3:4"
																		},
																		"nativeSrc": "1410:55:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1410:55:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1392:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1392:6:4"
																},
																"nativeSrc": "1392:74:4",
																"nodeType": "YulFunctionCall",
																"src": "1392:74:4"
															},
															"nativeSrc": "1392:74:4",
															"nodeType": "YulExpressionStatement",
															"src": "1392:74:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1246:226:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1316:9:4",
														"nodeType": "YulTypedName",
														"src": "1316:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1327:6:4",
														"nodeType": "YulTypedName",
														"src": "1327:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1338:4:4",
														"nodeType": "YulTypedName",
														"src": "1338:4:4",
														"type": ""
													}
												],
												"src": "1246:226:4"
											},
											{
												"body": {
													"nativeSrc": "1566:320:4",
													"nodeType": "YulBlock",
													"src": "1566:320:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1612:16:4",
																"nodeType": "YulBlock",
																"src": "1612:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1621:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1621:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1624:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1624:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1614:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1614:6:4"
																			},
																			"nativeSrc": "1614:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1614:12:4"
																		},
																		"nativeSrc": "1614:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1614:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1587:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1587:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1596:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1596:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1583:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1583:3:4"
																		},
																		"nativeSrc": "1583:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1583:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1608:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1608:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1579:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1579:3:4"
																},
																"nativeSrc": "1579:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1579:32:4"
															},
															"nativeSrc": "1576:52:4",
															"nodeType": "YulIf",
															"src": "1576:52:4"
														},
														{
															"nativeSrc": "1637:37:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1637:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1664:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1664:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1651:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1651:12:4"
																},
																"nativeSrc": "1651:23:4",
																"nodeType": "YulFunctionCall",
																"src": "1651:23:4"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1641:6:4",
																	"nodeType": "YulTypedName",
																	"src": "1641:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1717:16:4",
																"nodeType": "YulBlock",
																"src": "1717:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1726:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1726:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1729:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1729:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1719:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1719:6:4"
																			},
																			"nativeSrc": "1719:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1719:12:4"
																		},
																		"nativeSrc": "1719:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1719:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1689:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1689:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1697:18:4",
																		"nodeType": "YulLiteral",
																		"src": "1697:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1686:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "1686:2:4"
																},
																"nativeSrc": "1686:30:4",
																"nodeType": "YulFunctionCall",
																"src": "1686:30:4"
															},
															"nativeSrc": "1683:50:4",
															"nodeType": "YulIf",
															"src": "1683:50:4"
														},
														{
															"nativeSrc": "1742:84:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1742:84:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1798:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1798:9:4"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1809:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1809:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1794:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1794:3:4"
																		},
																		"nativeSrc": "1794:22:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1794:22:4"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1818:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "1818:7:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nativeSrc": "1768:25:4",
																	"nodeType": "YulIdentifier",
																	"src": "1768:25:4"
																},
																"nativeSrc": "1768:58:4",
																"nodeType": "YulFunctionCall",
																"src": "1768:58:4"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nativeSrc": "1746:8:4",
																	"nodeType": "YulTypedName",
																	"src": "1746:8:4",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nativeSrc": "1756:8:4",
																	"nodeType": "YulTypedName",
																	"src": "1756:8:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1835:18:4",
															"nodeType": "YulAssignment",
															"src": "1835:18:4",
															"value": {
																"name": "value0_1",
																"nativeSrc": "1845:8:4",
																"nodeType": "YulIdentifier",
																"src": "1845:8:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1835:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1835:6:4"
																}
															]
														},
														{
															"nativeSrc": "1862:18:4",
															"nodeType": "YulAssignment",
															"src": "1862:18:4",
															"value": {
																"name": "value1_1",
																"nativeSrc": "1872:8:4",
																"nodeType": "YulIdentifier",
																"src": "1872:8:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1862:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1862:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_calldata_ptr",
												"nativeSrc": "1477:409:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1524:9:4",
														"nodeType": "YulTypedName",
														"src": "1524:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1535:7:4",
														"nodeType": "YulTypedName",
														"src": "1535:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1547:6:4",
														"nodeType": "YulTypedName",
														"src": "1547:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1555:6:4",
														"nodeType": "YulTypedName",
														"src": "1555:6:4",
														"type": ""
													}
												],
												"src": "1477:409:4"
											},
											{
												"body": {
													"nativeSrc": "2038:124:4",
													"nodeType": "YulBlock",
													"src": "2038:124:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2061:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2061:3:4"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2066:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2066:6:4"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2074:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2074:6:4"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "2048:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "2048:12:4"
																},
																"nativeSrc": "2048:33:4",
																"nodeType": "YulFunctionCall",
																"src": "2048:33:4"
															},
															"nativeSrc": "2048:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "2048:33:4"
														},
														{
															"nativeSrc": "2090:26:4",
															"nodeType": "YulVariableDeclaration",
															"src": "2090:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2104:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2104:3:4"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2109:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2109:6:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2100:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2100:3:4"
																},
																"nativeSrc": "2100:16:4",
																"nodeType": "YulFunctionCall",
																"src": "2100:16:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2094:2:4",
																	"nodeType": "YulTypedName",
																	"src": "2094:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2132:2:4",
																		"nodeType": "YulIdentifier",
																		"src": "2132:2:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2136:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2136:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2125:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2125:6:4"
																},
																"nativeSrc": "2125:13:4",
																"nodeType": "YulFunctionCall",
																"src": "2125:13:4"
															},
															"nativeSrc": "2125:13:4",
															"nodeType": "YulExpressionStatement",
															"src": "2125:13:4"
														},
														{
															"nativeSrc": "2147:9:4",
															"nodeType": "YulAssignment",
															"src": "2147:9:4",
															"value": {
																"name": "_1",
																"nativeSrc": "2154:2:4",
																"nodeType": "YulIdentifier",
																"src": "2154:2:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2147:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2147:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "1891:271:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2006:3:4",
														"nodeType": "YulTypedName",
														"src": "2006:3:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2011:6:4",
														"nodeType": "YulTypedName",
														"src": "2011:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2019:6:4",
														"nodeType": "YulTypedName",
														"src": "2019:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2030:3:4",
														"nodeType": "YulTypedName",
														"src": "2030:3:4",
														"type": ""
													}
												],
												"src": "1891:271:4"
											},
											{
												"body": {
													"nativeSrc": "2341:244:4",
													"nodeType": "YulBlock",
													"src": "2341:244:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2358:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2358:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2369:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2369:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2351:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2351:6:4"
																},
																"nativeSrc": "2351:21:4",
																"nodeType": "YulFunctionCall",
																"src": "2351:21:4"
															},
															"nativeSrc": "2351:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "2351:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2392:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2392:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2403:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2403:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2388:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2388:3:4"
																		},
																		"nativeSrc": "2388:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2388:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2408:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2408:2:4",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2381:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2381:6:4"
																},
																"nativeSrc": "2381:30:4",
																"nodeType": "YulFunctionCall",
																"src": "2381:30:4"
															},
															"nativeSrc": "2381:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "2381:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2431:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2431:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2442:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2442:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2427:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2427:3:4"
																		},
																		"nativeSrc": "2427:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2427:18:4"
																	},
																	{
																		"hexValue": "43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f",
																		"kind": "string",
																		"nativeSrc": "2447:34:4",
																		"nodeType": "YulLiteral",
																		"src": "2447:34:4",
																		"type": "",
																		"value": "Cannot change the admin of a pro"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2420:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:4"
																},
																"nativeSrc": "2420:62:4",
																"nodeType": "YulFunctionCall",
																"src": "2420:62:4"
															},
															"nativeSrc": "2420:62:4",
															"nodeType": "YulExpressionStatement",
															"src": "2420:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2502:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2502:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2513:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2513:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2498:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2498:3:4"
																		},
																		"nativeSrc": "2498:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2498:18:4"
																	},
																	{
																		"hexValue": "787920746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "2518:24:4",
																		"nodeType": "YulLiteral",
																		"src": "2518:24:4",
																		"type": "",
																		"value": "xy to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2491:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2491:6:4"
																},
																"nativeSrc": "2491:52:4",
																"nodeType": "YulFunctionCall",
																"src": "2491:52:4"
															},
															"nativeSrc": "2491:52:4",
															"nodeType": "YulExpressionStatement",
															"src": "2491:52:4"
														},
														{
															"nativeSrc": "2552:27:4",
															"nodeType": "YulAssignment",
															"src": "2552:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2564:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2564:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2575:3:4",
																		"nodeType": "YulLiteral",
																		"src": "2575:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2560:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2560:3:4"
																},
																"nativeSrc": "2560:19:4",
																"nodeType": "YulFunctionCall",
																"src": "2560:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2552:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2552:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_37112268ceb11e15373f32f9374a1f3287d0a3e6e5a9a435ac06367e6cd0cf00__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2167:418:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2318:9:4",
														"nodeType": "YulTypedName",
														"src": "2318:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2332:4:4",
														"nodeType": "YulTypedName",
														"src": "2332:4:4",
														"type": ""
													}
												],
												"src": "2167:418:4"
											},
											{
												"body": {
													"nativeSrc": "2719:198:4",
													"nodeType": "YulBlock",
													"src": "2719:198:4",
													"statements": [
														{
															"nativeSrc": "2729:26:4",
															"nodeType": "YulAssignment",
															"src": "2729:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2741:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2741:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2752:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2752:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2737:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2737:3:4"
																},
																"nativeSrc": "2737:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2737:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2729:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2729:4:4"
																}
															]
														},
														{
															"nativeSrc": "2764:52:4",
															"nodeType": "YulVariableDeclaration",
															"src": "2764:52:4",
															"value": {
																"kind": "number",
																"nativeSrc": "2774:42:4",
																"nodeType": "YulLiteral",
																"src": "2774:42:4",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2768:2:4",
																	"nodeType": "YulTypedName",
																	"src": "2768:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2832:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2832:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2847:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2847:6:4"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "2855:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "2855:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2843:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2843:3:4"
																		},
																		"nativeSrc": "2843:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2843:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2825:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2825:6:4"
																},
																"nativeSrc": "2825:34:4",
																"nodeType": "YulFunctionCall",
																"src": "2825:34:4"
															},
															"nativeSrc": "2825:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "2825:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2879:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2879:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2890:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2890:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2875:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2875:3:4"
																		},
																		"nativeSrc": "2875:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2875:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "2899:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2899:6:4"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "2907:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "2907:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2895:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2895:3:4"
																		},
																		"nativeSrc": "2895:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2895:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2868:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2868:6:4"
																},
																"nativeSrc": "2868:43:4",
																"nodeType": "YulFunctionCall",
																"src": "2868:43:4"
															},
															"nativeSrc": "2868:43:4",
															"nodeType": "YulExpressionStatement",
															"src": "2868:43:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "2590:327:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2680:9:4",
														"nodeType": "YulTypedName",
														"src": "2680:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2691:6:4",
														"nodeType": "YulTypedName",
														"src": "2691:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2699:6:4",
														"nodeType": "YulTypedName",
														"src": "2699:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2710:4:4",
														"nodeType": "YulTypedName",
														"src": "2710:4:4",
														"type": ""
													}
												],
												"src": "2590:327:4"
											},
											{
												"body": {
													"nativeSrc": "3096:240:4",
													"nodeType": "YulBlock",
													"src": "3096:240:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3113:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3113:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3124:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3124:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3106:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3106:6:4"
																},
																"nativeSrc": "3106:21:4",
																"nodeType": "YulFunctionCall",
																"src": "3106:21:4"
															},
															"nativeSrc": "3106:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "3106:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3147:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3147:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3158:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3158:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3143:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3143:3:4"
																		},
																		"nativeSrc": "3143:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3143:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3163:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3163:2:4",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3136:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3136:6:4"
																},
																"nativeSrc": "3136:30:4",
																"nodeType": "YulFunctionCall",
																"src": "3136:30:4"
															},
															"nativeSrc": "3136:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "3136:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3186:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3186:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3197:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3197:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3182:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3182:3:4"
																		},
																		"nativeSrc": "3182:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3182:18:4"
																	},
																	{
																		"hexValue": "43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e206672",
																		"kind": "string",
																		"nativeSrc": "3202:34:4",
																		"nodeType": "YulLiteral",
																		"src": "3202:34:4",
																		"type": "",
																		"value": "Cannot call fallback function fr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3175:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3175:6:4"
																},
																"nativeSrc": "3175:62:4",
																"nodeType": "YulFunctionCall",
																"src": "3175:62:4"
															},
															"nativeSrc": "3175:62:4",
															"nodeType": "YulExpressionStatement",
															"src": "3175:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3257:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3257:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3268:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3268:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3253:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3253:3:4"
																		},
																		"nativeSrc": "3253:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3253:18:4"
																	},
																	{
																		"hexValue": "6f6d207468652070726f78792061646d696e",
																		"kind": "string",
																		"nativeSrc": "3273:20:4",
																		"nodeType": "YulLiteral",
																		"src": "3273:20:4",
																		"type": "",
																		"value": "om the proxy admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3246:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3246:6:4"
																},
																"nativeSrc": "3246:48:4",
																"nodeType": "YulFunctionCall",
																"src": "3246:48:4"
															},
															"nativeSrc": "3246:48:4",
															"nodeType": "YulExpressionStatement",
															"src": "3246:48:4"
														},
														{
															"nativeSrc": "3303:27:4",
															"nodeType": "YulAssignment",
															"src": "3303:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3315:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3315:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3326:3:4",
																		"nodeType": "YulLiteral",
																		"src": "3326:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3311:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3311:3:4"
																},
																"nativeSrc": "3311:19:4",
																"nodeType": "YulFunctionCall",
																"src": "3311:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3303:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3303:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_08b466bde770d6d309a22d90ec051a62ad397be6218a53e741989877ec297fc9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2922:414:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3073:9:4",
														"nodeType": "YulTypedName",
														"src": "3073:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3087:4:4",
														"nodeType": "YulTypedName",
														"src": "3087:4:4",
														"type": ""
													}
												],
												"src": "2922:414:4"
											},
											{
												"body": {
													"nativeSrc": "3515:249:4",
													"nodeType": "YulBlock",
													"src": "3515:249:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3532:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3532:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3543:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3543:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3525:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3525:6:4"
																},
																"nativeSrc": "3525:21:4",
																"nodeType": "YulFunctionCall",
																"src": "3525:21:4"
															},
															"nativeSrc": "3525:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "3525:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3566:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3566:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3577:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3577:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3562:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3562:3:4"
																		},
																		"nativeSrc": "3562:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3562:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3582:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3582:2:4",
																		"type": "",
																		"value": "59"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3555:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3555:6:4"
																},
																"nativeSrc": "3555:30:4",
																"nodeType": "YulFunctionCall",
																"src": "3555:30:4"
															},
															"nativeSrc": "3555:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "3555:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3605:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3605:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3616:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3616:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3601:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3601:3:4"
																		},
																		"nativeSrc": "3601:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3601:18:4"
																	},
																	{
																		"hexValue": "43616e6e6f742073657420612070726f787920696d706c656d656e746174696f",
																		"kind": "string",
																		"nativeSrc": "3621:34:4",
																		"nodeType": "YulLiteral",
																		"src": "3621:34:4",
																		"type": "",
																		"value": "Cannot set a proxy implementatio"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3594:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3594:6:4"
																},
																"nativeSrc": "3594:62:4",
																"nodeType": "YulFunctionCall",
																"src": "3594:62:4"
															},
															"nativeSrc": "3594:62:4",
															"nodeType": "YulExpressionStatement",
															"src": "3594:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3676:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3676:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3687:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3687:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3672:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3672:3:4"
																		},
																		"nativeSrc": "3672:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3672:18:4"
																	},
																	{
																		"hexValue": "6e20746f2061206e6f6e2d636f6e74726163742061646472657373",
																		"kind": "string",
																		"nativeSrc": "3692:29:4",
																		"nodeType": "YulLiteral",
																		"src": "3692:29:4",
																		"type": "",
																		"value": "n to a non-contract address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3665:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3665:6:4"
																},
																"nativeSrc": "3665:57:4",
																"nodeType": "YulFunctionCall",
																"src": "3665:57:4"
															},
															"nativeSrc": "3665:57:4",
															"nodeType": "YulExpressionStatement",
															"src": "3665:57:4"
														},
														{
															"nativeSrc": "3731:27:4",
															"nodeType": "YulAssignment",
															"src": "3731:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3743:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3743:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3754:3:4",
																		"nodeType": "YulLiteral",
																		"src": "3754:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3739:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3739:3:4"
																},
																"nativeSrc": "3739:19:4",
																"nodeType": "YulFunctionCall",
																"src": "3739:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3731:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3731:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3341:423:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3492:9:4",
														"nodeType": "YulTypedName",
														"src": "3492:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3506:4:4",
														"nodeType": "YulTypedName",
														"src": "3506:4:4",
														"type": ""
													}
												],
												"src": "3341:423:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_stringliteral_37112268ceb11e15373f32f9374a1f3287d0a3e6e5a9a435ac06367e6cd0cf00__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"Cannot change the admin of a pro\")\n        mstore(add(headStart, 96), \"xy to the zero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_08b466bde770d6d309a22d90ec051a62ad397be6218a53e741989877ec297fc9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"Cannot call fallback function fr\")\n        mstore(add(headStart, 96), \"om the proxy admin\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"Cannot set a proxy implementatio\")\n        mstore(add(headStart, 96), \"n to a non-contract address\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100695760003560e01c80636c9ad7db116100435780636c9ad7db146100f15780638f28397014610104578063f851a4401461012457610078565b80633659cfe6146100805780634f1ef286146100a05780635c60da1b146100b357610078565b3661007857610076610139565b005b610076610139565b34801561008c57600080fd5b5061007661009b366004610746565b610173565b6100766100ae3660046107b1565b6101c5565b3480156100bf57600080fd5b506100c8610299565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100766100ff366004610804565b6102c8565b34801561011057600080fd5b5061007661011f366004610746565b610366565b34801561013057600080fd5b506100c86104ec565b610141610516565b61017161016c7f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c35490565b6105dc565b565b7f10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b5473ffffffffffffffffffffffffffffffffffffffff1633036101bd576101ba81610600565b50565b6101ba610139565b7f10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b5473ffffffffffffffffffffffffffffffffffffffff16330361028c5761020c83610600565b60003073ffffffffffffffffffffffffffffffffffffffff16348484604051610236929190610846565b60006040518083038185875af1925050503d8060008114610273576040519150601f19603f3d011682016040523d82523d6000602084013e610278565b606091505b505090508061028657600080fd5b50505050565b610294610139565b505050565b60006102c37f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c35490565b905090565b60006102f27f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c35490565b73ffffffffffffffffffffffffffffffffffffffff168383604051610318929190610846565b600060405180830381855af49150503d8060008114610353576040519150601f19603f3d011682016040523d82523d6000602084013e610358565b606091505b505090508061029457600080fd5b7f10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b5473ffffffffffffffffffffffffffffffffffffffff1633036101bd5773ffffffffffffffffffffffffffffffffffffffff811661044c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f60448201527f787920746f20746865207a65726f20616464726573730000000000000000000060648201526084015b60405180910390fd5b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104957f10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b5490565b6040805173ffffffffffffffffffffffffffffffffffffffff928316815291841660208301520160405180910390a16101ba817f10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b55565b60006102c37f10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b5490565b7f10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b5473ffffffffffffffffffffffffffffffffffffffff163303610171576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e20667260448201527f6f6d207468652070726f78792061646d696e00000000000000000000000000006064820152608401610443565b3660008037600080366000845af43d6000803e8080156105fb573d6000f35b3d6000fd5b61060981610655565b60405173ffffffffffffffffffffffffffffffffffffffff821681527fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b9060200160405180910390a150565b73ffffffffffffffffffffffffffffffffffffffff81163b6106f9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f43616e6e6f742073657420612070726f787920696d706c656d656e746174696f60448201527f6e20746f2061206e6f6e2d636f6e7472616374206164647265737300000000006064820152608401610443565b7f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c355565b803573ffffffffffffffffffffffffffffffffffffffff8116811461074157600080fd5b919050565b60006020828403121561075857600080fd5b6107618261071d565b9392505050565b60008083601f84011261077a57600080fd5b50813567ffffffffffffffff81111561079257600080fd5b6020830191508360208285010111156107aa57600080fd5b9250929050565b6000806000604084860312156107c657600080fd5b6107cf8461071d565b9250602084013567ffffffffffffffff8111156107eb57600080fd5b6107f786828701610768565b9497909650939450505050565b6000806020838503121561081757600080fd5b823567ffffffffffffffff81111561082e57600080fd5b61083a85828601610768565b90969095509350505050565b818382376000910190815291905056fea2646970667358221220a28169e68168942a5878686260b809d2bbfd7c7716882f9a0a1f284e4f1cee8a64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x69 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C9AD7DB GT PUSH2 0x43 JUMPI DUP1 PUSH4 0x6C9AD7DB EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x124 JUMPI PUSH2 0x78 JUMP JUMPDEST DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0xB3 JUMPI PUSH2 0x78 JUMP JUMPDEST CALLDATASIZE PUSH2 0x78 JUMPI PUSH2 0x76 PUSH2 0x139 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x76 PUSH2 0x139 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x746 JUMP JUMPDEST PUSH2 0x173 JUMP JUMPDEST PUSH2 0x76 PUSH2 0xAE CALLDATASIZE PUSH1 0x4 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x1C5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x76 PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0x804 JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0x746 JUMP JUMPDEST PUSH2 0x366 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x141 PUSH2 0x516 JUMP JUMPDEST PUSH2 0x171 PUSH2 0x16C PUSH32 0x7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5DC JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x10D6A54A4754C8869D6886B5F5D7FBFA5B4522237EA5C60D11BC4E7A1FF9390B SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER SUB PUSH2 0x1BD JUMPI PUSH2 0x1BA DUP2 PUSH2 0x600 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x139 JUMP JUMPDEST PUSH32 0x10D6A54A4754C8869D6886B5F5D7FBFA5B4522237EA5C60D11BC4E7A1FF9390B SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER SUB PUSH2 0x28C JUMPI PUSH2 0x20C DUP4 PUSH2 0x600 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x236 SWAP3 SWAP2 SWAP1 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x273 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x278 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x294 PUSH2 0x139 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C3 PUSH32 0x7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F2 PUSH32 0x7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3 SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x318 SWAP3 SWAP2 SWAP1 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x353 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x10D6A54A4754C8869D6886B5F5D7FBFA5B4522237EA5C60D11BC4E7A1FF9390B SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER SUB PUSH2 0x1BD JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x44C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206368616E6765207468652061646D696E206F6620612070726F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x787920746F20746865207A65726F206164647265737300000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH2 0x495 PUSH32 0x10D6A54A4754C8869D6886B5F5D7FBFA5B4522237EA5C60D11BC4E7A1FF9390B SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP5 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1BA DUP2 PUSH32 0x10D6A54A4754C8869D6886B5F5D7FBFA5B4522237EA5C60D11BC4E7A1FF9390B SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C3 PUSH32 0x10D6A54A4754C8869D6886B5F5D7FBFA5B4522237EA5C60D11BC4E7A1FF9390B SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x10D6A54A4754C8869D6886B5F5D7FBFA5B4522237EA5C60D11BC4E7A1FF9390B SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER SUB PUSH2 0x171 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742063616C6C2066616C6C6261636B2066756E6374696F6E206672 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6D207468652070726F78792061646D696E0000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x443 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x5FB JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x609 DUP2 PUSH2 0x655 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND EXTCODESIZE PUSH2 0x6F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073657420612070726F787920696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E20746F2061206E6F6E2D636F6E747261637420616464726573730000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x443 JUMP JUMPDEST PUSH32 0x7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x741 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x758 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x761 DUP3 PUSH2 0x71D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x77A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x792 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x7AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7CF DUP5 PUSH2 0x71D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F7 DUP7 DUP3 DUP8 ADD PUSH2 0x768 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x817 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x82E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x83A DUP6 DUP3 DUP7 ADD PUSH2 0x768 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 DUP2 PUSH10 0xE68168942A5878686260 0xB8 MULMOD 0xD2 0xBB REVERT PUSH29 0x7716882F9A0A1F284E4F1CEE8A64736F6C634300081900330000000000 ",
							"sourceMap": "1209:4728:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2898:11:0;:9;:11::i;:::-;1209:4728:2;;2675:11:0;:9;:11::i;3555:109:2:-;;;;;;;;;;-1:-1:-1;3555:109:2;;;;;:::i;:::-;;:::i;4208:278::-;;;;;;:::i;:::-;;:::i;2800:99::-;;;;;;;;;;;;;:::i;:::-;;;1422:42:4;1410:55;;;1392:74;;1380:2;1365:18;2800:99:2;;;;;;;4972:173;;;;;;:::i;:::-;;:::i;3087:272::-;;;;;;;;;;-1:-1:-1;3087:272:2;;;;;:::i;:::-;;:::i;2647:81::-;;;;;;;;;;;;;:::i;2322:110:0:-;2370:17;:15;:17::i;:::-;2397:28;2407:17;2067:66:3;2843:11;;2685:185;2407:17:0;2397:9;:28::i;:::-;2322:110::o;3555:109:2:-;1759:66;5332:11;2060:22;;:10;:22;2056:96;;3628:29:::1;3639:17;3628:10;:29::i;:::-;3555:109:::0;:::o;2056:96::-;2130:11;:9;:11::i;4208:278::-;1759:66;5332:11;2060:22;;:10;:22;2056:96;;4345:29:::1;4356:17;4345:10;:29::i;:::-;4394:12;4419:4;4411:18;;4437:9;4448:4;;4411:42;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4393:60;;;4471:7;4463:16;;;::::0;::::1;;4335:151;4208:278:::0;;;:::o;2056:96::-;2130:11;:9;:11::i;:::-;4208:278;;;:::o;2800:99::-;2849:7;2875:17;2067:66:3;2843:11;;2685:185;2875:17:2;2868:24;;2800:99;:::o;4972:173::-;5059:12;5076:17;2067:66:3;2843:11;;2685:185;5076:17:2;:30;;5107:4;;5076:36;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5058:54;;;5130:7;5122:16;;;;;3087:272;1759:66;5332:11;2060:22;;:10;:22;2056:96;;3174:22:::1;::::0;::::1;3153:123;;;::::0;::::1;::::0;;2369:2:4;3153:123:2::1;::::0;::::1;2351:21:4::0;2408:2;2388:18;;;2381:30;2447:34;2427:18;;;2420:62;2518:24;2498:18;;;2491:52;2560:19;;3153:123:2::1;;;;;;;;;3291:32;3304:8;1759:66:::0;5332:11;;5202:157;3304:8:::1;3291:32;::::0;;2774:42:4;2843:15;;;2825:34;;2895:15;;;2890:2;2875:18;;2868:43;2737:18;3291:32:2::1;;;;;;;3333:19;3343:8;1759:66:::0;5600:22;5485:153;2647:81;2687:7;2713:8;1759:66;5332:11;;5202:157;5721:214;1759:66;5332:11;5797:22;;:10;:22;5776:119;;;;;;;3124:2:4;5776:119:2;;;3106:21:4;3163:2;3143:18;;;3136:30;3202:34;3182:18;;;3175:62;3273:20;3253:18;;;3246:48;3311:19;;5776:119:2;2922:414:4;948:895:0;1286:14;1283:1;1280;1267:34;1500:1;1497;1481:14;1478:1;1462:14;1455:5;1442:60;1576:16;1573:1;1570;1555:38;1614:6;1681:66;;;;1796:16;1793:1;1786:27;1681:66;1716:16;1713:1;1706:27;3015:152:3;3081:37;3100:17;3081:18;:37::i;:::-;3133:27;;1422:42:4;1410:55;;1392:74;;3133:27:3;;1380:2:4;1365:18;3133:27:3;;;;;;;3015:152;:::o;3314:396::-;1465:19:1;;;;3387:197:3;;;;;;;3543:2:4;3387:197:3;;;3525:21:4;3582:2;3562:18;;;3555:30;3621:34;3601:18;;;3594:62;3692:29;3672:18;;;3665:57;3739:19;;3387:197:3;3341:423:4;3387:197:3;2067:66;3663:31;3314:396::o;14:196:4:-;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:186::-;274:6;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;366:29;385:9;366:29;:::i;:::-;356:39;215:186;-1:-1:-1;;;215:186:4:o;406:347::-;457:8;467:6;521:3;514:4;506:6;502:17;498:27;488:55;;539:1;536;529:12;488:55;-1:-1:-1;562:20:4;;605:18;594:30;;591:50;;;637:1;634;627:12;591:50;674:4;666:6;662:17;650:29;;726:3;719:4;710:6;702;698:19;694:30;691:39;688:59;;;743:1;740;733:12;688:59;406:347;;;;;:::o;758:483::-;837:6;845;853;906:2;894:9;885:7;881:23;877:32;874:52;;;922:1;919;912:12;874:52;945:29;964:9;945:29;:::i;:::-;935:39;;1025:2;1014:9;1010:18;997:32;1052:18;1044:6;1041:30;1038:50;;;1084:1;1081;1074:12;1038:50;1123:58;1173:7;1164:6;1153:9;1149:22;1123:58;:::i;:::-;758:483;;1200:8;;-1:-1:-1;1097:84:4;;-1:-1:-1;;;;758:483:4:o;1477:409::-;1547:6;1555;1608:2;1596:9;1587:7;1583:23;1579:32;1576:52;;;1624:1;1621;1614:12;1576:52;1664:9;1651:23;1697:18;1689:6;1686:30;1683:50;;;1729:1;1726;1719:12;1683:50;1768:58;1818:7;1809:6;1798:9;1794:22;1768:58;:::i;:::-;1845:8;;1742:84;;-1:-1:-1;1477:409:4;-1:-1:-1;;;;1477:409:4:o;1891:271::-;2074:6;2066;2061:3;2048:33;2030:3;2100:16;;2125:13;;;2100:16;1891:271;-1:-1:-1;1891:271:4:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "437600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"admin()": "1071",
								"changeAdmin(address)": "infinite",
								"funcCall(bytes)": "infinite",
								"implementation()": "1072",
								"upgradeTo(address)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_admin()": "infinite",
								"_beforeFallback()": "infinite",
								"_setAdmin(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1209,
									"end": 5937,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1209,
									"end": 5937,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1209,
									"end": 5937,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2350,
									"end": 2578,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 2350,
									"end": 2578,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2350,
									"end": 2578,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2350,
									"end": 2578,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 2350,
									"end": 2578,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2350,
									"end": 2578,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2350,
									"end": 2578,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2350,
									"end": 2578,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 2350,
									"end": 2578,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 2350,
									"end": 2578,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2350,
									"end": 2578,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2350,
									"end": 2578,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2350,
									"end": 2578,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2350,
									"end": 2578,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 2350,
									"end": 2578,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 2350,
									"end": 2578,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2350,
									"end": 2578,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2350,
									"end": 2578,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 2350,
									"end": 2578,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2350,
									"end": 2578,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 2350,
									"end": 2578,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2350,
									"end": 2578,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2350,
									"end": 2578,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2350,
									"end": 2578,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2350,
									"end": 2578,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2350,
									"end": 2578,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2350,
									"end": 2578,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 2350,
									"end": 2578,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2350,
									"end": 2578,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2350,
									"end": 2578,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2350,
									"end": 2578,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 2350,
									"end": 2578,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2440,
									"end": 2462,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2508,
									"end": 2550,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 2527,
									"end": 2549,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2508,
									"end": 2526,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 2508,
									"end": 2550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2508,
									"end": 2550,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 2508,
									"end": 2550,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2550,
									"end": 2571,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 2560,
									"end": 2570,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1759,
									"end": 1825,
									"name": "PUSH",
									"source": 2,
									"value": "10D6A54A4754C8869D6886B5F5D7FBFA5B4522237EA5C60D11BC4E7A1FF9390B"
								},
								{
									"begin": 5600,
									"end": 5622,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 5485,
									"end": 5638,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2550,
									"end": 2571,
									"modifierDepth": 1,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 2550,
									"end": 2571,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2350,
									"end": 2578,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1209,
									"end": 5937,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 1209,
									"end": 5937,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3314,
									"end": 3710,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 3314,
									"end": 3710,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1465,
									"end": 1484,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1465,
									"end": 1484,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1465,
									"end": 1484,
									"name": "EXTCODESIZE",
									"source": 1
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 643,
									"end": 645,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 625,
									"end": 646,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 682,
									"end": 684,
									"name": "PUSH",
									"source": 4,
									"value": "3B"
								},
								{
									"begin": 662,
									"end": 680,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 662,
									"end": 680,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 662,
									"end": 680,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 655,
									"end": 685,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 721,
									"end": 755,
									"name": "PUSH",
									"source": 4,
									"value": "43616E6E6F742073657420612070726F787920696D706C656D656E746174696F"
								},
								{
									"begin": 701,
									"end": 719,
									"name": "PUSH",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 701,
									"end": 719,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 701,
									"end": 719,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 694,
									"end": 756,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 792,
									"end": 821,
									"name": "PUSH",
									"source": 4,
									"value": "6E20746F2061206E6F6E2D636F6E747261637420616464726573730000000000"
								},
								{
									"begin": 772,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 772,
									"end": 790,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 772,
									"end": 790,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 765,
									"end": 822,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 839,
									"end": 858,
									"name": "PUSH",
									"source": 4,
									"value": "84"
								},
								{
									"begin": 839,
									"end": 858,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2067,
									"end": 2133,
									"name": "PUSH",
									"source": 3,
									"value": "7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3"
								},
								{
									"begin": 3663,
									"end": 3694,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 3314,
									"end": 3710,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 441,
									"end": 864,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 441,
									"end": 864,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1209,
									"end": 5937,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1209,
									"end": 5937,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1209,
									"end": 5937,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1209,
									"end": 5937,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 5937,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1209,
									"end": 5937,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 5937,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a28169e68168942a5878686260b809d2bbfd7c7716882f9a0a1f284e4f1cee8a64736f6c63430008190033",
									".code": [
										{
											"begin": 1209,
											"end": 5937,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "PUSH",
											"source": 2,
											"value": "6C9AD7DB"
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "PUSH",
											"source": 2,
											"value": "6C9AD7DB"
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "PUSH",
											"source": 2,
											"value": "8F283970"
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "PUSH",
											"source": 2,
											"value": "F851A440"
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "PUSH",
											"source": 2,
											"value": "3659CFE6"
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "PUSH",
											"source": 2,
											"value": "4F1EF286"
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "PUSH",
											"source": 2,
											"value": "5C60DA1B"
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2898,
											"end": 2909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1209,
											"end": 5937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2675,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2675,
											"end": 2686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3555,
											"end": 3664,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3555,
											"end": 3664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3664,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3664,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3555,
											"end": 3664,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3664,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3664,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3664,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3555,
											"end": 3664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3555,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3555,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3555,
											"end": 3664,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3664,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3555,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3555,
											"end": 3664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3664,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3555,
											"end": 3664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3555,
											"end": 3664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4486,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4208,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 4208,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4208,
											"end": 4486,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4486,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4208,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4208,
											"end": 4486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4486,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4208,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4208,
											"end": 4486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2899,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2800,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2899,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2899,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2800,
											"end": 2899,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2899,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2800,
											"end": 2899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2899,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2899,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2800,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2800,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2800,
											"end": 2899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2899,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2800,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2899,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2800,
											"end": 2899,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1464,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1410,
											"end": 1465,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1465,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1465,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1392,
											"end": 1466,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1392,
											"end": 1466,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1382,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1365,
											"end": 1383,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2899,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2800,
											"end": 2899,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2899,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2899,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2899,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4972,
											"end": 5145,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4972,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4972,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 4972,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4972,
											"end": 5145,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4972,
											"end": 5145,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4972,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4972,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4972,
											"end": 5145,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4972,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4972,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4972,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3359,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3087,
											"end": 3359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3359,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3359,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3087,
											"end": 3359,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3359,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3087,
											"end": 3359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3359,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3359,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3087,
											"end": 3359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3087,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3087,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3087,
											"end": 3359,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3359,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3087,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3087,
											"end": 3359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3359,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3087,
											"end": 3359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3087,
											"end": 3359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2728,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2647,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2728,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2728,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2647,
											"end": 2728,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2728,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2647,
											"end": 2728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2728,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2728,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2647,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2728,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2647,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2647,
											"end": 2728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2432,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2322,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2370,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2370,
											"end": 2387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2387,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2370,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2067,
											"end": 2133,
											"name": "PUSH",
											"source": 3,
											"value": "7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3"
										},
										{
											"begin": 2843,
											"end": 2854,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2854,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 2870,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2397,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2397,
											"end": 2425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3555,
											"end": 3664,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3555,
											"end": 3664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1825,
											"name": "PUSH",
											"source": 2,
											"value": "10D6A54A4754C8869D6886B5F5D7FBFA5B4522237EA5C60D11BC4E7A1FF9390B"
										},
										{
											"begin": 5332,
											"end": 5343,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2082,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2060,
											"end": 2082,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2070,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2082,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2056,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2056,
											"end": 2152,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3657,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3639,
											"end": 3656,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3638,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3628,
											"end": 3657,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3657,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3628,
											"end": 3657,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3555,
											"end": 3664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2056,
											"end": 2152,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2056,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2130,
											"end": 2139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2130,
											"end": 2141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4486,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4208,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1825,
											"name": "PUSH",
											"source": 2,
											"value": "10D6A54A4754C8869D6886B5F5D7FBFA5B4522237EA5C60D11BC4E7A1FF9390B"
										},
										{
											"begin": 5332,
											"end": 5343,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2082,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2060,
											"end": 2082,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2070,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2082,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2056,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2056,
											"end": 2152,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4345,
											"end": 4374,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4356,
											"end": 4373,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4345,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4345,
											"end": 4374,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4345,
											"end": 4374,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4345,
											"end": 4374,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4394,
											"end": 4406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4419,
											"end": 4423,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4411,
											"end": 4429,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4437,
											"end": 4446,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4452,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4452,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4411,
											"end": 4453,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4453,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4393,
											"end": 4453,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4393,
											"end": 4453,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4393,
											"end": 4453,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 4478,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4463,
											"end": 4479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4463,
											"end": 4479,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4463,
											"end": 4479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4463,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4463,
											"end": 4479,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4463,
											"end": 4479,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4463,
											"end": 4479,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4486,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2056,
											"end": 2152,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2056,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2130,
											"end": 2139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2130,
											"end": 2141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2130,
											"end": 2141,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2130,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2899,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2800,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2067,
											"end": 2133,
											"name": "PUSH",
											"source": 3,
											"value": "7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3"
										},
										{
											"begin": 2843,
											"end": 2854,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2854,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 2870,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2875,
											"end": 2892,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2875,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4972,
											"end": 5145,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4972,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5059,
											"end": 5071,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2067,
											"end": 2133,
											"name": "PUSH",
											"source": 3,
											"value": "7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3"
										},
										{
											"begin": 2843,
											"end": 2854,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2854,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 2870,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5093,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5076,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5106,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5106,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5107,
											"end": 5111,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5107,
											"end": 5111,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 5076,
											"end": 5112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "DELEGATECALL",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5058,
											"end": 5112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5058,
											"end": 5112,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5058,
											"end": 5112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5130,
											"end": 5137,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 5122,
											"end": 5138,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5138,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5122,
											"end": 5138,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5138,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3087,
											"end": 3359,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3087,
											"end": 3359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1825,
											"name": "PUSH",
											"source": 2,
											"value": "10D6A54A4754C8869D6886B5F5D7FBFA5B4522237EA5C60D11BC4E7A1FF9390B"
										},
										{
											"begin": 5332,
											"end": 5343,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2082,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2060,
											"end": 2082,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2070,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2082,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2056,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2056,
											"end": 2152,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3174,
											"end": 3196,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3196,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3276,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3153,
											"end": 3276,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3153,
											"end": 3276,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3153,
											"end": 3276,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3276,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2371,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3153,
											"end": 3276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3153,
											"end": 3276,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3276,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2351,
											"end": 2372,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2408,
											"end": 2410,
											"name": "PUSH",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2388,
											"end": 2406,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2388,
											"end": 2406,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2388,
											"end": 2406,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2381,
											"end": 2411,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2481,
											"name": "PUSH",
											"source": 4,
											"value": "43616E6E6F74206368616E6765207468652061646D696E206F6620612070726F"
										},
										{
											"begin": 2427,
											"end": 2445,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2427,
											"end": 2445,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2445,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2420,
											"end": 2482,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2542,
											"name": "PUSH",
											"source": 4,
											"value": "787920746F20746865207A65726F206164647265737300000000000000000000"
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2543,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2560,
											"end": 2579,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2560,
											"end": 2579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3153,
											"end": 3276,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3153,
											"end": 3276,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3153,
											"end": 3276,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3276,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3276,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3276,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3276,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3276,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3276,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3153,
											"end": 3276,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F"
										},
										{
											"begin": 3304,
											"end": 3312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1759,
											"end": 1825,
											"name": "PUSH",
											"source": 2,
											"value": "10D6A54A4754C8869D6886B5F5D7FBFA5B4522237EA5C60D11BC4E7A1FF9390B"
										},
										{
											"begin": 5332,
											"end": 5343,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5332,
											"end": 5343,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5202,
											"end": 5359,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3304,
											"end": 3312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3291,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3323,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2774,
											"end": 2816,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2843,
											"end": 2858,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2843,
											"end": 2858,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2843,
											"end": 2858,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2859,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2859,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2910,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2910,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2910,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2890,
											"end": 2892,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2875,
											"end": 2893,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2893,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2911,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2737,
											"end": 2755,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3291,
											"end": 3323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3291,
											"end": 3323,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3323,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3323,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3323,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3323,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3323,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 3333,
											"end": 3352,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3343,
											"end": 3351,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1825,
											"name": "PUSH",
											"source": 2,
											"value": "10D6A54A4754C8869D6886B5F5D7FBFA5B4522237EA5C60D11BC4E7A1FF9390B"
										},
										{
											"begin": 5600,
											"end": 5622,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5638,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2728,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2647,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2694,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2713,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1759,
											"end": 1825,
											"name": "PUSH",
											"source": 2,
											"value": "10D6A54A4754C8869D6886B5F5D7FBFA5B4522237EA5C60D11BC4E7A1FF9390B"
										},
										{
											"begin": 5332,
											"end": 5343,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5332,
											"end": 5343,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5202,
											"end": 5359,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5935,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 5721,
											"end": 5935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1825,
											"name": "PUSH",
											"source": 2,
											"value": "10D6A54A4754C8869D6886B5F5D7FBFA5B4522237EA5C60D11BC4E7A1FF9390B"
										},
										{
											"begin": 5332,
											"end": 5343,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5797,
											"end": 5819,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5797,
											"end": 5819,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5797,
											"end": 5807,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5797,
											"end": 5819,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5776,
											"end": 5895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 5776,
											"end": 5895,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5776,
											"end": 5895,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5776,
											"end": 5895,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5776,
											"end": 5895,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5776,
											"end": 5895,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5776,
											"end": 5895,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3126,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5776,
											"end": 5895,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5776,
											"end": 5895,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5776,
											"end": 5895,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3106,
											"end": 3127,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3165,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3143,
											"end": 3161,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3143,
											"end": 3161,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3143,
											"end": 3161,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3202,
											"end": 3236,
											"name": "PUSH",
											"source": 4,
											"value": "43616E6E6F742063616C6C2066616C6C6261636B2066756E6374696F6E206672"
										},
										{
											"begin": 3182,
											"end": 3200,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3182,
											"end": 3200,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3200,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3175,
											"end": 3237,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3273,
											"end": 3293,
											"name": "PUSH",
											"source": 4,
											"value": "6F6D207468652070726F78792061646D696E0000000000000000000000000000"
										},
										{
											"begin": 3253,
											"end": 3271,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3253,
											"end": 3271,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3253,
											"end": 3271,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3246,
											"end": 3294,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3311,
											"end": 3330,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3311,
											"end": 3330,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5776,
											"end": 5895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2922,
											"end": 3336,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 948,
											"end": 1843,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 948,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1300,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1283,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1301,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1497,
											"end": 1498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1495,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1478,
											"end": 1479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1460,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1502,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1592,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1573,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1593,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1812,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1813,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 1732,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1733,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3015,
											"end": 3167,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3015,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3100,
											"end": 3117,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3081,
											"end": 3118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3118,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3081,
											"end": 3118,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3133,
											"end": 3160,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3133,
											"end": 3160,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1422,
											"end": 1464,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1410,
											"end": 1465,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1465,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1392,
											"end": 1466,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1392,
											"end": 1466,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3160,
											"name": "PUSH",
											"source": 3,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 3133,
											"end": 3160,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1380,
											"end": 1382,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1365,
											"end": 1383,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3160,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3133,
											"end": 3160,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3133,
											"end": 3160,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3133,
											"end": 3160,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3133,
											"end": 3160,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3133,
											"end": 3160,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3133,
											"end": 3160,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 3015,
											"end": 3167,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3015,
											"end": 3167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3314,
											"end": 3710,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3314,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3387,
											"end": 3584,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3387,
											"end": 3584,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3387,
											"end": 3584,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3387,
											"end": 3584,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3387,
											"end": 3584,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3387,
											"end": 3584,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3543,
											"end": 3545,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3387,
											"end": 3584,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3387,
											"end": 3584,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3387,
											"end": 3584,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3525,
											"end": 3546,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3584,
											"name": "PUSH",
											"source": 4,
											"value": "3B"
										},
										{
											"begin": 3562,
											"end": 3580,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3562,
											"end": 3580,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3562,
											"end": 3580,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3555,
											"end": 3585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3621,
											"end": 3655,
											"name": "PUSH",
											"source": 4,
											"value": "43616E6E6F742073657420612070726F787920696D706C656D656E746174696F"
										},
										{
											"begin": 3601,
											"end": 3619,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3601,
											"end": 3619,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3601,
											"end": 3619,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3656,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3692,
											"end": 3721,
											"name": "PUSH",
											"source": 4,
											"value": "6E20746F2061206E6F6E2D636F6E747261637420616464726573730000000000"
										},
										{
											"begin": 3672,
											"end": 3690,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3672,
											"end": 3690,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3672,
											"end": 3690,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3722,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3739,
											"end": 3758,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3739,
											"end": 3758,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3387,
											"end": 3584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3341,
											"end": 3764,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3387,
											"end": 3584,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3387,
											"end": 3584,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2067,
											"end": 2133,
											"name": "PUSH",
											"source": 3,
											"value": "7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3"
										},
										{
											"begin": 3663,
											"end": 3694,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3314,
											"end": 3710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 210,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 142,
											"end": 184,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 131,
											"end": 185,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 131,
											"end": 185,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 121,
											"end": 186,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 121,
											"end": 186,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 111,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 200,
											"end": 201,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 198,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 190,
											"end": 202,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 111,
											"end": 204,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14,
											"end": 210,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14,
											"end": 210,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14,
											"end": 210,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 215,
											"end": 401,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 215,
											"end": 401,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 274,
											"end": 280,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 329,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 324,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 306,
											"end": 313,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 298,
											"end": 330,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 295,
											"end": 347,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 295,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 295,
											"end": 347,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 341,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 333,
											"end": 345,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 295,
											"end": 347,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 295,
											"end": 347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 366,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 385,
											"end": 394,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 366,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 366,
											"end": 395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 366,
											"end": 395,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 366,
											"end": 395,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 356,
											"end": 395,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 215,
											"end": 401,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 215,
											"end": 401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 406,
											"end": 753,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 406,
											"end": 753,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 457,
											"end": 465,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 473,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 521,
											"end": 524,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 514,
											"end": 518,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 506,
											"end": 512,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 502,
											"end": 519,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 498,
											"end": 525,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 488,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 488,
											"end": 543,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 539,
											"end": 540,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 537,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 529,
											"end": 541,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 488,
											"end": 543,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 488,
											"end": 543,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 562,
											"end": 582,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 562,
											"end": 582,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 605,
											"end": 623,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 594,
											"end": 624,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 594,
											"end": 624,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 591,
											"end": 641,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 591,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 591,
											"end": 641,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 637,
											"end": 638,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 634,
											"end": 635,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 627,
											"end": 639,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 591,
											"end": 641,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 591,
											"end": 641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 674,
											"end": 678,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 666,
											"end": 672,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 662,
											"end": 679,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 650,
											"end": 679,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 650,
											"end": 679,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 726,
											"end": 729,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 719,
											"end": 723,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 710,
											"end": 716,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 702,
											"end": 708,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 698,
											"end": 717,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 694,
											"end": 724,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 691,
											"end": 730,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 688,
											"end": 747,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 688,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 688,
											"end": 747,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 743,
											"end": 744,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 741,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 733,
											"end": 745,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 688,
											"end": 747,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 688,
											"end": 747,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 406,
											"end": 753,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 406,
											"end": 753,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 406,
											"end": 753,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 406,
											"end": 753,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 406,
											"end": 753,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 406,
											"end": 753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1241,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 758,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 837,
											"end": 843,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 845,
											"end": 851,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 853,
											"end": 859,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 908,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 894,
											"end": 903,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 885,
											"end": 892,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 881,
											"end": 904,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 877,
											"end": 909,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 874,
											"end": 926,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 874,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 874,
											"end": 926,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 922,
											"end": 923,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 920,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 912,
											"end": 924,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 874,
											"end": 926,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 874,
											"end": 926,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 945,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 964,
											"end": 973,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 945,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 945,
											"end": 974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 945,
											"end": 974,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 945,
											"end": 974,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 935,
											"end": 974,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 935,
											"end": 974,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1027,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1014,
											"end": 1023,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1010,
											"end": 1028,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1029,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1070,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1044,
											"end": 1050,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1041,
											"end": 1071,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1088,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1038,
											"end": 1088,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1085,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1081,
											"end": 1082,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1086,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1088,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1038,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1123,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 1173,
											"end": 1180,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1170,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1162,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1149,
											"end": 1171,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1123,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 1123,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1123,
											"end": 1181,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 1123,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1241,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1241,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 1200,
											"end": 1208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1200,
											"end": 1208,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1097,
											"end": 1181,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1181,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 758,
											"end": 1241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1477,
											"end": 1886,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1477,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1547,
											"end": 1553,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1555,
											"end": 1561,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1608,
											"end": 1610,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1596,
											"end": 1605,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1594,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1579,
											"end": 1611,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1576,
											"end": 1628,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1576,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1576,
											"end": 1628,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1624,
											"end": 1625,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1621,
											"end": 1622,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1626,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1576,
											"end": 1628,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1576,
											"end": 1628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1664,
											"end": 1673,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1674,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1689,
											"end": 1695,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1686,
											"end": 1716,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1683,
											"end": 1733,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1683,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1683,
											"end": 1733,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1730,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1726,
											"end": 1727,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1719,
											"end": 1731,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1683,
											"end": 1733,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1683,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1768,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 1818,
											"end": 1825,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1815,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1798,
											"end": 1807,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1794,
											"end": 1816,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1768,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 1768,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1768,
											"end": 1826,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 1768,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1853,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 1742,
											"end": 1826,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1742,
											"end": 1826,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1477,
											"end": 1886,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1477,
											"end": 1886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 2162,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1891,
											"end": 2162,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2080,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2066,
											"end": 2072,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2061,
											"end": 2064,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2081,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 2030,
											"end": 2033,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2100,
											"end": 2116,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2100,
											"end": 2116,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2138,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2138,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2138,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2100,
											"end": 2116,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 2162,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1891,
											"end": 2162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol",
								"upgradeability/AdminUpgradeabilityProxy.sol",
								"upgradeability/UpgradeabilityProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"admin()": "f851a440",
							"changeAdmin(address)": "8f283970",
							"funcCall(bytes)": "6c9ad7db",
							"implementation()": "5c60da1b",
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementationContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"funcCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Forked from https://github.com/zeppelinos/zos-lib/blob/8a16ef3ad17ec7430e3a9d2b5e3f39b8204f8c8d/contracts/upgradeability/AdminUpgradeabilityProxy.sol Modifications: 1. Reformat, conform to Solidity 0.6 syntax, and add error messages (5/13/20) 2. Remove ifAdmin modifier from admin() and implementation() (5/13/20)\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the administration has been transferred.\",\"params\":{\"newAdmin\":\"Address of the new admin.\",\"previousAdmin\":\"Address of the previous admin.\"}},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\",\"params\":{\"implementation\":\"Address of the new implementation.\"}}},\"kind\":\"dev\",\"methods\":{\"admin()\":{\"returns\":{\"_0\":\"The address of the proxy admin.\"}},\"changeAdmin(address)\":{\"details\":\"Changes the admin of the proxy. Only the current admin can call this function.\",\"params\":{\"newAdmin\":\"Address to transfer proxy administration to.\"}},\"constructor\":{\"details\":\"Contract constructor. It sets the `msg.sender` as the proxy administrator.\",\"params\":{\"implementationContract\":\"address of the initial implementation.\"}},\"funcCall(bytes)\":{\"details\":\"Upgrade the backing implementation of the proxy and delegate call a function on the new implementation. This is useful to initialize the proxied contract.\",\"params\":{\"data\":\"Data to send as msg.data in the low level call. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/develop/abi-spec.html#function-selector-and-argument-encoding.\"}},\"implementation()\":{\"returns\":{\"_0\":\"The address of the implementation.\"}},\"upgradeTo(address)\":{\"details\":\"Upgrade the backing implementation of the proxy. Only the admin can call this function.\",\"params\":{\"newImplementation\":\"Address of the new implementation.\"}},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the backing implementation of the proxy and call a function on the new implementation. This is useful to initialize the proxied contract.\",\"params\":{\"data\":\"Data to send as msg.data in the low level call. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/develop/abi-spec.html#function-selector-and-argument-encoding.\",\"newImplementation\":\"Address of the new implementation.\"}}},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"org.zeppelinos.proxy.admin\\\", and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract combines an upgradeability proxy with an authorization mechanism for administrative tasks.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"upgradeability/AdminUpgradeabilityProxy.sol\":\"AdminUpgradeabilityProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"upgradeability/AdminUpgradeabilityProxy.sol\":{\"keccak256\":\"0x8686315920344baf8f97ef72a66ff069939d52aaca816de0c1ba2cbfb99764a1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3843a4cf26543e7432ab2fc94688bb03d9e5b21d6c96b55ed1fddfcfec9d3ce5\",\"dweb:/ipfs/Qme2KPgfvtk5KojvKWFxX2r5hq3nrYgwS6BXeN5vPVGqoB\"]},\"upgradeability/UpgradeabilityProxy.sol\":{\"keccak256\":\"0x64f6d7eb84ca987e2e1755b90555b318eba2e88b8351c56bd2def0c0a763800d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3d37a7a846d8649b9abd48d7c1b18bc3e0be9cbb574e93dd504fa1d32bca961c\",\"dweb:/ipfs/Qmb6aMVPdQ4DrFZbqMAcReBAGcoEPu6eQcch9DPQYeekP8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "This contract combines an upgradeability proxy with an authorization mechanism for administrative tasks.",
						"version": 1
					}
				}
			},
			"upgradeability/UpgradeabilityProxy.sol": {
				"UpgradeabilityProxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementationContract",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "Forked from https://github.com/zeppelinos/zos-lib/blob/8a16ef3ad17ec7430e3a9d2b5e3f39b8204f8c8d/contracts/upgradeability/UpgradeabilityProxy.sol Modifications: 1. Reformat, conform to Solidity 0.6 syntax, and add error messages (5/13/20) 2. Use Address utility library from the latest OpenZeppelin (5/13/20)",
						"events": {
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded.",
								"params": {
									"implementation": "Address of the new implementation."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Contract constructor.",
								"params": {
									"implementationContract": "Address of the initial implementation."
								}
							}
						},
						"stateVariables": {
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"org.zeppelinos.proxy.implementation\", and is validated in the constructor."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"upgradeability/UpgradeabilityProxy.sol\":1576:3712  contract UpgradeabilityProxy is Proxy {... */\n  mstore(0x40, 0x80)\n    /* \"upgradeability/UpgradeabilityProxy.sol\":2266:2557  constructor(address implementationContract) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"upgradeability/UpgradeabilityProxy.sol\":2508:2550  _setImplementation(implementationContract) */\n  tag_9\n    /* \"upgradeability/UpgradeabilityProxy.sol\":2527:2549  implementationContract */\n  dup2\n    /* \"upgradeability/UpgradeabilityProxy.sol\":2508:2526  _setImplementation */\n  tag_10\n    /* \"upgradeability/UpgradeabilityProxy.sol\":2508:2550  _setImplementation(implementationContract) */\n  jump\t// in\ntag_9:\n    /* \"upgradeability/UpgradeabilityProxy.sol\":2266:2557  constructor(address implementationContract) {... */\n  pop\n    /* \"upgradeability/UpgradeabilityProxy.sol\":1576:3712  contract UpgradeabilityProxy is Proxy {... */\n  jump(tag_19)\n    /* \"upgradeability/UpgradeabilityProxy.sol\":3314:3710  function _setImplementation(address newImplementation) private {... */\ntag_10:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol\":1465:1484  account.code.length */\n  dup2\n  and\n  extcodesize\n    /* \"upgradeability/UpgradeabilityProxy.sol\":3387:3584  require(... */\n  tag_15\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":643:645   */\n  0x20\n    /* \"upgradeability/UpgradeabilityProxy.sol\":3387:3584  require(... */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":625:646   */\n  mstore\n    /* \"#utility.yul\":682:684   */\n  0x3b\n    /* \"#utility.yul\":662:680   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":655:685   */\n  mstore\n    /* \"#utility.yul\":721:755   */\n  0x43616e6e6f742073657420612070726f787920696d706c656d656e746174696f\n    /* \"#utility.yul\":701:719   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":694:756   */\n  mstore\n    /* \"#utility.yul\":792:821   */\n  0x6e20746f2061206e6f6e2d636f6e747261637420616464726573730000000000\n    /* \"#utility.yul\":772:790   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":765:822   */\n  mstore\n    /* \"#utility.yul\":839:858   */\n  0x84\n  add\n    /* \"upgradeability/UpgradeabilityProxy.sol\":3387:3584  require(... */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"upgradeability/UpgradeabilityProxy.sol\":2067:2133  0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3 */\n  0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3\n    /* \"upgradeability/UpgradeabilityProxy.sol\":3663:3694  sstore(slot, newImplementation) */\n  sstore\n    /* \"upgradeability/UpgradeabilityProxy.sol\":3314:3710  function _setImplementation(address newImplementation) private {... */\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_21:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_22:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":441:864   */\ntag_19:\n    /* \"upgradeability/UpgradeabilityProxy.sol\":1576:3712  contract UpgradeabilityProxy is Proxy {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"upgradeability/UpgradeabilityProxy.sol\":1576:3712  contract UpgradeabilityProxy is Proxy {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_2, calldatasize)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":2898:2909  _fallback() */\n      tag_5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":2898:2907  _fallback */\n      tag_6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":2898:2909  _fallback() */\n      jump\t// in\n    tag_5:\n        /* \"upgradeability/UpgradeabilityProxy.sol\":1576:3712  contract UpgradeabilityProxy is Proxy {... */\n      stop\n    tag_2:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":2675:2686  _fallback() */\n      tag_5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":2322:2432  function _fallback() internal virtual {... */\n    tag_6:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":2397:2425  _delegate(_implementation()) */\n      tag_13\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":2407:2424  _implementation() */\n      tag_14\n        /* \"upgradeability/UpgradeabilityProxy.sol\":2067:2133  0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3 */\n      0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3\n        /* \"upgradeability/UpgradeabilityProxy.sol\":2843:2854  sload(slot) */\n      sload\n      swap1\n        /* \"upgradeability/UpgradeabilityProxy.sol\":2685:2870  function _implementation() internal override view returns (address impl) {... */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":2407:2424  _implementation() */\n    tag_14:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":2397:2406  _delegate */\n      tag_16\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":2397:2425  _delegate(_implementation()) */\n      jump\t// in\n    tag_13:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":2322:2432  function _fallback() internal virtual {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":948:1843  function _delegate(address implementation) internal virtual {... */\n    tag_16:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1286:1300  calldatasize() */\n      calldatasize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1283:1284  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1280:1281  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1267:1301  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1500:1501  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1497:1498  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1481:1495  calldatasize() */\n      calldatasize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1478:1479  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1462:1476  implementation */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1455:1460  gas() */\n      gas\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1442:1502  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1576:1592  returndatasize() */\n      returndatasize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1573:1574  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1570:1571  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1555:1593  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1614:1620  result */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1681:1747  case 0 {... */\n      dup1\n      iszero\n      tag_21\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1796:1812  returndatasize() */\n      returndatasize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1793:1794  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1786:1813  return(0, returndatasize()) */\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1681:1747  case 0 {... */\n    tag_21:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1716:1732  returndatasize() */\n      returndatasize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1713:1714  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":1706:1733  revert(0, returndatasize()) */\n      revert\n\n    auxdata: 0xa26469706673582212206f88df4a0e5e375480ae80f6b72a054bb45858c3522965b795416dafae68134b64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_633": {
									"entryPoint": null,
									"id": 633,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_681": {
									"entryPoint": 62,
									"id": 681,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isContract_69": {
									"entryPoint": null,
									"id": 69,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x01": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:866:4",
										"nodeType": "YulBlock",
										"src": "0:866:4",
										"statements": [
											{
												"nativeSrc": "6:3:4",
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:4",
													"nodeType": "YulBlock",
													"src": "95:209:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:4",
																"nodeType": "YulBlock",
																"src": "141:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:4",
																					"nodeType": "YulLiteral",
																					"src": "150:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:4",
																					"nodeType": "YulLiteral",
																					"src": "153:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:4"
																			},
																			"nativeSrc": "143:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:4"
																		},
																		"nativeSrc": "143:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:4"
																		},
																		"nativeSrc": "112:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:4",
																		"nodeType": "YulLiteral",
																		"src": "137:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:4"
																},
																"nativeSrc": "108:32:4",
																"nodeType": "YulFunctionCall",
																"src": "108:32:4"
															},
															"nativeSrc": "105:52:4",
															"nodeType": "YulIf",
															"src": "105:52:4"
														},
														{
															"nativeSrc": "166:29:4",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:4"
																},
																"nativeSrc": "179:16:4",
																"nodeType": "YulFunctionCall",
																"src": "179:16:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:4",
																	"nodeType": "YulTypedName",
																	"src": "170:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:4",
																"nodeType": "YulBlock",
																"src": "258:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:4",
																					"nodeType": "YulLiteral",
																					"src": "267:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:4",
																					"nodeType": "YulLiteral",
																					"src": "270:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:4"
																			},
																			"nativeSrc": "260:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:4"
																		},
																		"nativeSrc": "260:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:4",
																										"nodeType": "YulLiteral",
																										"src": "243:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:4",
																										"nodeType": "YulLiteral",
																										"src": "248:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:4"
																								},
																								"nativeSrc": "239:11:4",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:4"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:4",
																								"nodeType": "YulLiteral",
																								"src": "252:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:4"
																						},
																						"nativeSrc": "235:19:4",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:4"
																				},
																				"nativeSrc": "224:31:4",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:4"
																		},
																		"nativeSrc": "214:42:4",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:4"
																},
																"nativeSrc": "207:50:4",
																"nodeType": "YulFunctionCall",
																"src": "207:50:4"
															},
															"nativeSrc": "204:70:4",
															"nodeType": "YulIf",
															"src": "204:70:4"
														},
														{
															"nativeSrc": "283:15:4",
															"nodeType": "YulAssignment",
															"src": "283:15:4",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:4",
																"nodeType": "YulIdentifier",
																"src": "293:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:4",
														"nodeType": "YulTypedName",
														"src": "61:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:4",
														"nodeType": "YulTypedName",
														"src": "72:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:4",
														"nodeType": "YulTypedName",
														"src": "84:6:4",
														"type": ""
													}
												],
												"src": "14:290:4"
											},
											{
												"body": {
													"nativeSrc": "341:95:4",
													"nodeType": "YulBlock",
													"src": "341:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "358:1:4",
																		"nodeType": "YulLiteral",
																		"src": "358:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "365:3:4",
																				"nodeType": "YulLiteral",
																				"src": "365:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "370:10:4",
																				"nodeType": "YulLiteral",
																				"src": "370:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "361:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "361:3:4"
																		},
																		"nativeSrc": "361:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "361:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "351:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "351:6:4"
																},
																"nativeSrc": "351:31:4",
																"nodeType": "YulFunctionCall",
																"src": "351:31:4"
															},
															"nativeSrc": "351:31:4",
															"nodeType": "YulExpressionStatement",
															"src": "351:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "398:1:4",
																		"nodeType": "YulLiteral",
																		"src": "398:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "401:4:4",
																		"nodeType": "YulLiteral",
																		"src": "401:4:4",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "391:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "391:6:4"
																},
																"nativeSrc": "391:15:4",
																"nodeType": "YulFunctionCall",
																"src": "391:15:4"
															},
															"nativeSrc": "391:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "391:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "422:1:4",
																		"nodeType": "YulLiteral",
																		"src": "422:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "425:4:4",
																		"nodeType": "YulLiteral",
																		"src": "425:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "415:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "415:6:4"
																},
																"nativeSrc": "415:15:4",
																"nodeType": "YulFunctionCall",
																"src": "415:15:4"
															},
															"nativeSrc": "415:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "415:15:4"
														}
													]
												},
												"name": "panic_error_0x01",
												"nativeSrc": "309:127:4",
												"nodeType": "YulFunctionDefinition",
												"src": "309:127:4"
											},
											{
												"body": {
													"nativeSrc": "615:249:4",
													"nodeType": "YulBlock",
													"src": "615:249:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "632:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "632:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "643:2:4",
																		"nodeType": "YulLiteral",
																		"src": "643:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "625:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "625:6:4"
																},
																"nativeSrc": "625:21:4",
																"nodeType": "YulFunctionCall",
																"src": "625:21:4"
															},
															"nativeSrc": "625:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "625:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "666:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "666:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "677:2:4",
																				"nodeType": "YulLiteral",
																				"src": "677:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "662:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "662:3:4"
																		},
																		"nativeSrc": "662:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "662:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "682:2:4",
																		"nodeType": "YulLiteral",
																		"src": "682:2:4",
																		"type": "",
																		"value": "59"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "655:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "655:6:4"
																},
																"nativeSrc": "655:30:4",
																"nodeType": "YulFunctionCall",
																"src": "655:30:4"
															},
															"nativeSrc": "655:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "655:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "705:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "705:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "716:2:4",
																				"nodeType": "YulLiteral",
																				"src": "716:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "701:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "701:3:4"
																		},
																		"nativeSrc": "701:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "701:18:4"
																	},
																	{
																		"hexValue": "43616e6e6f742073657420612070726f787920696d706c656d656e746174696f",
																		"kind": "string",
																		"nativeSrc": "721:34:4",
																		"nodeType": "YulLiteral",
																		"src": "721:34:4",
																		"type": "",
																		"value": "Cannot set a proxy implementatio"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "694:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "694:6:4"
																},
																"nativeSrc": "694:62:4",
																"nodeType": "YulFunctionCall",
																"src": "694:62:4"
															},
															"nativeSrc": "694:62:4",
															"nodeType": "YulExpressionStatement",
															"src": "694:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "776:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "776:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "787:2:4",
																				"nodeType": "YulLiteral",
																				"src": "787:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "772:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "772:3:4"
																		},
																		"nativeSrc": "772:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "772:18:4"
																	},
																	{
																		"hexValue": "6e20746f2061206e6f6e2d636f6e74726163742061646472657373",
																		"kind": "string",
																		"nativeSrc": "792:29:4",
																		"nodeType": "YulLiteral",
																		"src": "792:29:4",
																		"type": "",
																		"value": "n to a non-contract address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "765:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "765:6:4"
																},
																"nativeSrc": "765:57:4",
																"nodeType": "YulFunctionCall",
																"src": "765:57:4"
															},
															"nativeSrc": "765:57:4",
															"nodeType": "YulExpressionStatement",
															"src": "765:57:4"
														},
														{
															"nativeSrc": "831:27:4",
															"nodeType": "YulAssignment",
															"src": "831:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "843:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "843:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "854:3:4",
																		"nodeType": "YulLiteral",
																		"src": "854:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "839:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "839:3:4"
																},
																"nativeSrc": "839:19:4",
																"nodeType": "YulFunctionCall",
																"src": "839:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "831:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "831:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "441:423:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "592:9:4",
														"nodeType": "YulTypedName",
														"src": "592:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "606:4:4",
														"nodeType": "YulTypedName",
														"src": "606:4:4",
														"type": ""
													}
												],
												"src": "441:423:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x01()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"Cannot set a proxy implementatio\")\n        mstore(add(headStart, 96), \"n to a non-contract address\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516101bc3803806101bc83398101604081905261002f916100e3565b6100388161003e565b50610113565b6001600160a01b0381163b6100bf5760405162461bcd60e51b815260206004820152603b60248201527f43616e6e6f742073657420612070726f787920696d706c656d656e746174696f60448201527f6e20746f2061206e6f6e2d636f6e747261637420616464726573730000000000606482015260840160405180910390fd5b7f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c355565b6000602082840312156100f557600080fd5b81516001600160a01b038116811461010c57600080fd5b9392505050565b609b806101216000396000f3fe608060405236601057600e6013565b005b600e5b6040603c7f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c35490565b6042565b565b3660008037600080366000845af43d6000803e8080156060573d6000f35b3d6000fdfea26469706673582212206f88df4a0e5e375480ae80f6b72a054bb45858c3522965b795416dafae68134b64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1BC CODESIZE SUB DUP1 PUSH2 0x1BC DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xE3 JUMP JUMPDEST PUSH2 0x38 DUP2 PUSH2 0x3E JUMP JUMPDEST POP PUSH2 0x113 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0xBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073657420612070726F787920696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E20746F2061206E6F6E2D636F6E747261637420616464726573730000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x9B DUP1 PUSH2 0x121 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH1 0x10 JUMPI PUSH1 0xE PUSH1 0x13 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xE JUMPDEST PUSH1 0x40 PUSH1 0x3C PUSH32 0x7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x42 JUMP JUMPDEST JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x60 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x88DF4A0E5E375480AE80F6B72A054BB4 PC PC 0xC3 MSTORE 0x29 PUSH6 0xB795416DAFAE PUSH9 0x134B64736F6C634300 ADDMOD NOT STOP CALLER ",
							"sourceMap": "1576:2136:3:-:0;;;2266:291;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2508:42;2527:22;2508:18;:42::i;:::-;2266:291;1576:2136;;3314:396;-1:-1:-1;;;;;1465:19:1;;;3387:197:3;;;;-1:-1:-1;;;3387:197:3;;643:2:4;3387:197:3;;;625:21:4;682:2;662:18;;;655:30;721:34;701:18;;;694:62;792:29;772:18;;;765:57;839:19;;3387:197:3;;;;;;;;2067:66;3663:31;3314:396::o;14:290:4:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:4;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:4:o;441:423::-;1576:2136:3;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_37": {
									"entryPoint": null,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_45": {
									"entryPoint": null,
									"id": 45,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_beforeFallback_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_delegate_10": {
									"entryPoint": 66,
									"id": 10,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_fallback_29": {
									"entryPoint": 19,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_implementation_646": {
									"entryPoint": null,
									"id": 646,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405236601057600e6013565b005b600e5b6040603c7f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c35490565b6042565b565b3660008037600080366000845af43d6000803e8080156060573d6000f35b3d6000fdfea26469706673582212206f88df4a0e5e375480ae80f6b72a054bb45858c3522965b795416dafae68134b64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH1 0x10 JUMPI PUSH1 0xE PUSH1 0x13 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xE JUMPDEST PUSH1 0x40 PUSH1 0x3C PUSH32 0x7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x42 JUMP JUMPDEST JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x60 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x88DF4A0E5E375480AE80F6B72A054BB4 PC PC 0xC3 MSTORE 0x29 PUSH6 0xB795416DAFAE PUSH9 0x134B64736F6C634300 ADDMOD NOT STOP CALLER ",
							"sourceMap": "1576:2136:3:-:0;;;;;;2898:11:0;:9;:11::i;:::-;1576:2136:3;;2675:11:0;2322:110;2397:28;2407:17;2067:66:3;2843:11;;2685:185;2407:17:0;2397:9;:28::i;:::-;2322:110::o;948:895::-;1286:14;1283:1;1280;1267:34;1500:1;1497;1481:14;1478:1;1462:14;1455:5;1442:60;1576:16;1573:1;1570;1555:38;1614:6;1681:66;;;;1796:16;1793:1;1786:27;1681:66;1716:16;1713:1;1706:27"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "31000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite"
							},
							"internal": {
								"_implementation()": "infinite",
								"_setImplementation(address)": "infinite",
								"_upgradeTo(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1576,
									"end": 3712,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 1576,
									"end": 3712,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1576,
									"end": 3712,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2266,
									"end": 2557,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 2266,
									"end": 2557,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2266,
									"end": 2557,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2266,
									"end": 2557,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2266,
									"end": 2557,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2266,
									"end": 2557,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2266,
									"end": 2557,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2266,
									"end": 2557,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 2266,
									"end": 2557,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2266,
									"end": 2557,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2266,
									"end": 2557,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2266,
									"end": 2557,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2266,
									"end": 2557,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2266,
									"end": 2557,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 2266,
									"end": 2557,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 2266,
									"end": 2557,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 2266,
									"end": 2557,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2266,
									"end": 2557,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 2266,
									"end": 2557,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2266,
									"end": 2557,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 2266,
									"end": 2557,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2266,
									"end": 2557,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2266,
									"end": 2557,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2266,
									"end": 2557,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2266,
									"end": 2557,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2266,
									"end": 2557,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2266,
									"end": 2557,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 2266,
									"end": 2557,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2266,
									"end": 2557,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 2266,
									"end": 2557,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2266,
									"end": 2557,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 2266,
									"end": 2557,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2508,
									"end": 2550,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 2527,
									"end": 2549,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2508,
									"end": 2526,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 2508,
									"end": 2550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2508,
									"end": 2550,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 2508,
									"end": 2550,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2266,
									"end": 2557,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1576,
									"end": 3712,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1576,
									"end": 3712,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3314,
									"end": 3710,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 3314,
									"end": 3710,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1465,
									"end": 1484,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1465,
									"end": 1484,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1465,
									"end": 1484,
									"name": "EXTCODESIZE",
									"source": 1
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 643,
									"end": 645,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 625,
									"end": 646,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 682,
									"end": 684,
									"name": "PUSH",
									"source": 4,
									"value": "3B"
								},
								{
									"begin": 662,
									"end": 680,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 662,
									"end": 680,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 662,
									"end": 680,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 655,
									"end": 685,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 721,
									"end": 755,
									"name": "PUSH",
									"source": 4,
									"value": "43616E6E6F742073657420612070726F787920696D706C656D656E746174696F"
								},
								{
									"begin": 701,
									"end": 719,
									"name": "PUSH",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 701,
									"end": 719,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 701,
									"end": 719,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 694,
									"end": 756,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 792,
									"end": 821,
									"name": "PUSH",
									"source": 4,
									"value": "6E20746F2061206E6F6E2D636F6E747261637420616464726573730000000000"
								},
								{
									"begin": 772,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 772,
									"end": 790,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 772,
									"end": 790,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 765,
									"end": 822,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 839,
									"end": 858,
									"name": "PUSH",
									"source": 4,
									"value": "84"
								},
								{
									"begin": 839,
									"end": 858,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 3387,
									"end": 3584,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2067,
									"end": 2133,
									"name": "PUSH",
									"source": 3,
									"value": "7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3"
								},
								{
									"begin": 3663,
									"end": 3694,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 3314,
									"end": 3710,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 441,
									"end": 864,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 441,
									"end": 864,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1576,
									"end": 3712,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1576,
									"end": 3712,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1576,
									"end": 3712,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1576,
									"end": 3712,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1576,
									"end": 3712,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1576,
									"end": 3712,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1576,
									"end": 3712,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206f88df4a0e5e375480ae80f6b72a054bb45858c3522965b795416dafae68134b64736f6c63430008190033",
									".code": [
										{
											"begin": 1576,
											"end": 3712,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1576,
											"end": 3712,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1576,
											"end": 3712,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1576,
											"end": 3712,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1576,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1576,
											"end": 3712,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2898,
											"end": 2909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 3712,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1576,
											"end": 3712,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1576,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2675,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2322,
											"end": 2432,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2322,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2067,
											"end": 2133,
											"name": "PUSH",
											"source": 3,
											"value": "7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3"
										},
										{
											"begin": 2843,
											"end": 2854,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2854,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 2870,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2397,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2397,
											"end": 2425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 948,
											"end": 1843,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 948,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1300,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1283,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1301,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1497,
											"end": 1498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1495,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1478,
											"end": 1479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1460,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1502,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1592,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1573,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1593,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1812,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1813,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 1732,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1733,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol",
								"upgradeability/AdminUpgradeabilityProxy.sol",
								"upgradeability/UpgradeabilityProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementationContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Forked from https://github.com/zeppelinos/zos-lib/blob/8a16ef3ad17ec7430e3a9d2b5e3f39b8204f8c8d/contracts/upgradeability/UpgradeabilityProxy.sol Modifications: 1. Reformat, conform to Solidity 0.6 syntax, and add error messages (5/13/20) 2. Use Address utility library from the latest OpenZeppelin (5/13/20)\",\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\",\"params\":{\"implementation\":\"Address of the new implementation.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Contract constructor.\",\"params\":{\"implementationContract\":\"Address of the initial implementation.\"}}},\"stateVariables\":{\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"org.zeppelinos.proxy.implementation\\\", and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract implements a proxy that allows to change the implementation address to which it will delegate. Such a change is called an implementation upgrade.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"upgradeability/UpgradeabilityProxy.sol\":\"UpgradeabilityProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"upgradeability/UpgradeabilityProxy.sol\":{\"keccak256\":\"0x64f6d7eb84ca987e2e1755b90555b318eba2e88b8351c56bd2def0c0a763800d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3d37a7a846d8649b9abd48d7c1b18bc3e0be9cbb574e93dd504fa1d32bca961c\",\"dweb:/ipfs/Qmb6aMVPdQ4DrFZbqMAcReBAGcoEPu6eQcch9DPQYeekP8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "This contract implements a proxy that allows to change the implementation address to which it will delegate. Such a change is called an implementation upgrade.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol",
					"exportedSymbols": {
						"Proxy": [
							51
						]
					},
					"id": 52,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "124:598:0",
								"text": " @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."
							},
							"fullyImplemented": false,
							"id": 51,
							"linearizedBaseContracts": [
								51
							],
							"name": "Proxy",
							"nameLocation": "741:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "1008:835:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1027:810:0",
													"nodeType": "YulBlock",
													"src": "1027:810:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1280:1:0",
																		"nodeType": "YulLiteral",
																		"src": "1280:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1283:1:0",
																		"nodeType": "YulLiteral",
																		"src": "1283:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "1286:12:0",
																			"nodeType": "YulIdentifier",
																			"src": "1286:12:0"
																		},
																		"nativeSrc": "1286:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:14:0"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1267:12:0",
																	"nodeType": "YulIdentifier",
																	"src": "1267:12:0"
																},
																"nativeSrc": "1267:34:0",
																"nodeType": "YulFunctionCall",
																"src": "1267:34:0"
															},
															"nativeSrc": "1267:34:0",
															"nodeType": "YulExpressionStatement",
															"src": "1267:34:0"
														},
														{
															"nativeSrc": "1428:74:0",
															"nodeType": "YulVariableDeclaration",
															"src": "1428:74:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "1455:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "1455:3:0"
																		},
																		"nativeSrc": "1455:5:0",
																		"nodeType": "YulFunctionCall",
																		"src": "1455:5:0"
																	},
																	{
																		"name": "implementation",
																		"nativeSrc": "1462:14:0",
																		"nodeType": "YulIdentifier",
																		"src": "1462:14:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1478:1:0",
																		"nodeType": "YulLiteral",
																		"src": "1478:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "1481:12:0",
																			"nodeType": "YulIdentifier",
																			"src": "1481:12:0"
																		},
																		"nativeSrc": "1481:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "1481:14:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1497:1:0",
																		"nodeType": "YulLiteral",
																		"src": "1497:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1500:1:0",
																		"nodeType": "YulLiteral",
																		"src": "1500:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nativeSrc": "1442:12:0",
																	"nodeType": "YulIdentifier",
																	"src": "1442:12:0"
																},
																"nativeSrc": "1442:60:0",
																"nodeType": "YulFunctionCall",
																"src": "1442:60:0"
															},
															"variables": [
																{
																	"name": "result",
																	"nativeSrc": "1432:6:0",
																	"nodeType": "YulTypedName",
																	"src": "1432:6:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1570:1:0",
																		"nodeType": "YulLiteral",
																		"src": "1570:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1573:1:0",
																		"nodeType": "YulLiteral",
																		"src": "1573:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nativeSrc": "1576:14:0",
																			"nodeType": "YulIdentifier",
																			"src": "1576:14:0"
																		},
																		"nativeSrc": "1576:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "1576:16:0"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nativeSrc": "1555:14:0",
																	"nodeType": "YulIdentifier",
																	"src": "1555:14:0"
																},
																"nativeSrc": "1555:38:0",
																"nodeType": "YulFunctionCall",
																"src": "1555:38:0"
															},
															"nativeSrc": "1555:38:0",
															"nodeType": "YulExpressionStatement",
															"src": "1555:38:0"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1688:59:0",
																		"nodeType": "YulBlock",
																		"src": "1688:59:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1713:1:0",
																							"nodeType": "YulLiteral",
																							"src": "1713:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nativeSrc": "1716:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "1716:14:0"
																							},
																							"nativeSrc": "1716:16:0",
																							"nodeType": "YulFunctionCall",
																							"src": "1716:16:0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nativeSrc": "1706:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "1706:6:0"
																					},
																					"nativeSrc": "1706:27:0",
																					"nodeType": "YulFunctionCall",
																					"src": "1706:27:0"
																				},
																				"nativeSrc": "1706:27:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "1706:27:0"
																			}
																		]
																	},
																	"nativeSrc": "1681:66:0",
																	"nodeType": "YulCase",
																	"src": "1681:66:0",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1686:1:0",
																		"nodeType": "YulLiteral",
																		"src": "1686:1:0",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "1768:59:0",
																		"nodeType": "YulBlock",
																		"src": "1768:59:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1793:1:0",
																							"nodeType": "YulLiteral",
																							"src": "1793:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nativeSrc": "1796:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "1796:14:0"
																							},
																							"nativeSrc": "1796:16:0",
																							"nodeType": "YulFunctionCall",
																							"src": "1796:16:0"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nativeSrc": "1786:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "1786:6:0"
																					},
																					"nativeSrc": "1786:27:0",
																					"nodeType": "YulFunctionCall",
																					"src": "1786:27:0"
																				},
																				"nativeSrc": "1786:27:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "1786:27:0"
																			}
																		]
																	},
																	"nativeSrc": "1760:67:0",
																	"nodeType": "YulCase",
																	"src": "1760:67:0",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nativeSrc": "1614:6:0",
																"nodeType": "YulIdentifier",
																"src": "1614:6:0"
															},
															"nativeSrc": "1607:220:0",
															"nodeType": "YulSwitch",
															"src": "1607:220:0"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "1462:14:0",
														"valueSize": 1
													}
												],
												"id": 8,
												"nodeType": "InlineAssembly",
												"src": "1018:819:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "753:190:0",
										"text": " @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nameLocation": "957:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "975:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "967:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "966:24:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1008:0:0"
									},
									"scope": 51,
									"src": "948:895:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "1849:173:0",
										"text": " @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n and {_fallback} should delegate."
									},
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "2036:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "2085:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2085:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2084:9:0"
									},
									"scope": 51,
									"src": "2027:67:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "2360:72:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 20,
														"name": "_beforeFallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "2370:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2370:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "2370:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 24,
																"name": "_implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "2407:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2407:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 23,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2397:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2397:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2397:28:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "2100:217:0",
										"text": " @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fallback",
									"nameLocation": "2331:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2340:2:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2360:0:0"
									},
									"scope": 51,
									"src": "2322:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "2665:28:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 33,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "2675:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2675:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2675:11:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2438:186:0",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."
									},
									"id": 37,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2637:2:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2665:0:0"
									},
									"scope": 51,
									"src": "2629:64:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "2888:28:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 41,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "2898:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2898:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "2898:11:0"
											}
										]
									},
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "2699:149:0",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n is empty."
									},
									"id": 45,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2860:2:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2888:0:0"
									},
									"scope": 51,
									"src": "2853:63:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "3242:2:0",
										"statements": []
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "2922:271:0",
										"text": " @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n call, or as part of the Solidity `fallback` or `receive` functions.\n If overridden should call `super._beforeFallback()`."
									},
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeFallback",
									"nameLocation": "3207:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3222:2:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3242:0:0"
									},
									"scope": 51,
									"src": "3198:46:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 52,
							"src": "723:2523:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:3148:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							381
						]
					},
					"id": 382,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 53,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 54,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:1",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 381,
							"linearizedBaseContracts": [
								381
							],
							"name": "Address",
							"nameLocation": "202:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "1241:254:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 62,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 57,
																"src": "1465:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:1",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 61,
												"id": 67,
												"nodeType": "Return",
												"src": "1458:30:1"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:1",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "1195:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:1"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "1235:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 59,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:1"
									},
									"scope": 381,
									"src": "1175:320:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2483:241:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 80,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$381",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$381",
																				"typeString": "library Address"
																			}
																		],
																		"id": 79,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 78,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 81,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:1",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 83,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "2526:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 77,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:1"
											},
											{
												"assignments": [
													89,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 89,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2578:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 88,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 96,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 90,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 72,
																"src": "2596:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:1",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 93,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 92,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "2618:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 98,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "2647:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 97,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:1"
											}
										]
									},
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:1",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2431:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2458:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:1"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:1"
									},
									"scope": 381,
									"src": "2412:312:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "3555:96:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 114,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "3594:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 115,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "3602:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 113,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															161,
															205
														],
														"referencedDeclaration": 205,
														"src": "3572:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 112,
												"id": 119,
												"nodeType": "Return",
												"src": "3565:79:1"
											}
										]
									},
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:1",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3488:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3504:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 107,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:1"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3541:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 110,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:1"
									},
									"scope": 381,
									"src": "3466:185:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "4020:76:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 134,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "4059:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 135,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "4067:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 137,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "4076:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 133,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															161,
															205
														],
														"referencedDeclaration": 205,
														"src": "4037:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 132,
												"id": 139,
												"nodeType": "Return",
												"src": "4030:59:1"
											}
										]
									},
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "3904:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "3928:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 125,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "3955:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 127,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:1"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4006:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 130,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:1"
									},
									"scope": 381,
									"src": "3873:223:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "4601:111:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 154,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "4640:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 155,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "4648:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 156,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "4654:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 153,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															161,
															205
														],
														"referencedDeclaration": 205,
														"src": "4618:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 152,
												"id": 159,
												"nodeType": "Return",
												"src": "4611:94:1"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "4498:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "4522:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 145,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "4549:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:1"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "4587:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 150,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:1"
									},
									"scope": 381,
									"src": "4458:254:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "5139:267:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 178,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$381",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$381",
																				"typeString": "library Address"
																			}
																		],
																		"id": 177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 176,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5171:7:1",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 181,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 168,
																"src": "5182:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 175,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:1"
											},
											{
												"assignments": [
													187,
													189
												],
												"declarations": [
													{
														"constant": false,
														"id": 187,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 204,
														"src": "5241:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 186,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 189,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 204,
														"src": "5255:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 188,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 196,
												"initialValue": {
													"arguments": [
														{
															"id": 194,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "5308:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 190,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "5282:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5289:4:1",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 192,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 168,
																"src": "5301:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 198,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "5357:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 199,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "5365:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 200,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "5374:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 201,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "5386:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 197,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "5330:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 174,
												"id": 203,
												"nodeType": "Return",
												"src": "5323:76:1"
											}
										]
									},
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:1",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "5000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "5024:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 165,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "5051:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "5074:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 169,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:1"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "5125:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 172,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:1"
									},
									"scope": 381,
									"src": "4960:446:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "5683:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 216,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "5719:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 217,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "5727:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 215,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															222,
															251
														],
														"referencedDeclaration": 251,
														"src": "5700:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 214,
												"id": 220,
												"nodeType": "Return",
												"src": "5693:80:1"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "5611:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "5627:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 209,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:1"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "5669:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 212,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:1"
									},
									"scope": 381,
									"src": "5583:197:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "6122:168:1",
										"statements": [
											{
												"assignments": [
													235,
													237
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 250,
														"src": "6133:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 234,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 237,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 250,
														"src": "6147:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 236,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 242,
												"initialValue": {
													"arguments": [
														{
															"id": 240,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "6192:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 238,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "6174:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6181:10:1",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 244,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "6241:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 245,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "6249:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 246,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "6258:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 247,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "6270:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 243,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "6214:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 233,
												"id": 249,
												"nodeType": "Return",
												"src": "6207:76:1"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "6001:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "6025:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 226,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "6052:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 228,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:1"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "6108:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 231,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:1"
									},
									"scope": 381,
									"src": "5964:326:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "6566:101:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 262,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "6604:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 263,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "6612:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 261,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															268,
															297
														],
														"referencedDeclaration": 297,
														"src": "6583:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 260,
												"id": 266,
												"nodeType": "Return",
												"src": "6576:84:1"
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "6499:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "6515:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 255,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:1"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "6552:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 258,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:1"
									},
									"scope": 381,
									"src": "6469:198:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "7008:170:1",
										"statements": [
											{
												"assignments": [
													281,
													283
												],
												"declarations": [
													{
														"constant": false,
														"id": 281,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 296,
														"src": "7019:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 280,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 283,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 296,
														"src": "7033:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 282,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 288,
												"initialValue": {
													"arguments": [
														{
															"id": 286,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "7080:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 284,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "7060:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7067:12:1",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 290,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "7129:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 291,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "7137:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 292,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "7146:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 293,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "7158:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 289,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "7102:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 279,
												"id": 295,
												"nodeType": "Return",
												"src": "7095:76:1"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "6892:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "6916:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 272,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "6943:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 274,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:1"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "6994:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 277,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:1"
									},
									"scope": 381,
									"src": "6853:325:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "7660:434:1",
										"statements": [
											{
												"condition": {
													"id": 311,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "7674:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 333,
													"nodeType": "Block",
													"src": "8030:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 329,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 304,
																		"src": "8052:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 330,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 306,
																		"src": "8064:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 328,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "8044:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 332,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:1"
														}
													]
												},
												"id": 334,
												"nodeType": "IfStatement",
												"src": "7670:418:1",
												"trueBody": {
													"id": 327,
													"nodeType": "Block",
													"src": "7683:341:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 312,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 304,
																		"src": "7701:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7712:6:1",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 324,
															"nodeType": "IfStatement",
															"src": "7697:286:1",
															"trueBody": {
																"id": 323,
																"nodeType": "Block",
																"src": "7725:258:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 318,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 300,
																							"src": "7927:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 317,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 69,
																						"src": "7916:10:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 319,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 320,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 316,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 321,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 322,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:1"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 325,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "8003:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 310,
															"id": 326,
															"nodeType": "Return",
															"src": "7996:17:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:1",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "7511:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "7535:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 301,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "7557:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 303,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "7590:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 305,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:1"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "7646:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 308,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:1"
									},
									"scope": 381,
									"src": "7466:628:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "8475:135:1",
										"statements": [
											{
												"condition": {
													"id": 348,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 339,
													"src": "8489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "8546:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 353,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 341,
																		"src": "8568:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 354,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "8580:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 352,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "8560:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 356,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:1"
														}
													]
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "8485:119:1",
												"trueBody": {
													"id": 351,
													"nodeType": "Block",
													"src": "8498:42:1",
													"statements": [
														{
															"expression": {
																"id": 349,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "8519:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 347,
															"id": 350,
															"nodeType": "Return",
															"src": "8512:17:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:1",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "8350:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 338,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "8372:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 340,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "8405:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 342,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:1"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "8461:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:1"
									},
									"scope": 381,
									"src": "8315:295:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "8699:457:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 367,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "8775:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8786:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 369,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 377,
													"nodeType": "Block",
													"src": "9105:45:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 374,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 364,
																		"src": "9126:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 373,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 376,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:1"
														}
													]
												},
												"id": 378,
												"nodeType": "IfStatement",
												"src": "8771:379:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "8798:301:1",
													"statements": [
														{
															"AST": {
																"nativeSrc": "8956:133:1",
																"nodeType": "YulBlock",
																"src": "8956:133:1",
																"statements": [
																	{
																		"nativeSrc": "8974:40:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "9003:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8997:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:1"
																			},
																			"nativeSrc": "8997:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:1"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "8978:15:1",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9042:2:1",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:1",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "9046:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9038:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:1"
																					},
																					"nativeSrc": "9038:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:1"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "9059:15:1",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9031:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:1"
																			},
																			"nativeSrc": "9031:44:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:1"
																		},
																		"nativeSrc": "9031:44:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:1"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 362,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:1",
																	"valueSize": 1
																},
																{
																	"declaration": 362,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:1",
																	"valueSize": 1
																}
															],
															"id": 371,
															"nodeType": "InlineAssembly",
															"src": "8947:142:1"
														}
													]
												}
											}
										]
									},
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "8633:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 361,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "8658:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 363,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:1"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:1"
									},
									"scope": 381,
									"src": "8616:540:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 382,
							"src": "194:8964:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:9058:1"
				},
				"id": 1
			},
			"upgradeability/AdminUpgradeabilityProxy.sol": {
				"ast": {
					"absolutePath": "upgradeability/AdminUpgradeabilityProxy.sol",
					"exportedSymbols": {
						"AdminUpgradeabilityProxy": [
							596
						],
						"UpgradeabilityProxy": [
							682
						]
					},
					"id": 597,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 383,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "660:23:2"
						},
						{
							"absolutePath": "upgradeability/UpgradeabilityProxy.sol",
							"file": "./UpgradeabilityProxy.sol",
							"id": 385,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 597,
							"sourceUnit": 683,
							"src": "685:64:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 384,
										"name": "UpgradeabilityProxy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 682,
										"src": "694:19:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 387,
										"name": "UpgradeabilityProxy",
										"nameLocations": [
											"1246:19:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 682,
										"src": "1246:19:2"
									},
									"id": 388,
									"nodeType": "InheritanceSpecifier",
									"src": "1246:19:2"
								}
							],
							"canonicalName": "AdminUpgradeabilityProxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 386,
								"nodeType": "StructuredDocumentation",
								"src": "751:457:2",
								"text": " @notice This contract combines an upgradeability proxy with an authorization\n mechanism for administrative tasks.\n @dev Forked from https://github.com/zeppelinos/zos-lib/blob/8a16ef3ad17ec7430e3a9d2b5e3f39b8204f8c8d/contracts/upgradeability/AdminUpgradeabilityProxy.sol\n Modifications:\n 1. Reformat, conform to Solidity 0.6 syntax, and add error messages (5/13/20)\n 2. Remove ifAdmin modifier from admin() and implementation() (5/13/20)"
							},
							"fullyImplemented": true,
							"id": 596,
							"linearizedBaseContracts": [
								596,
								682,
								51
							],
							"name": "AdminUpgradeabilityProxy",
							"nameLocation": "1218:24:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 389,
										"nodeType": "StructuredDocumentation",
										"src": "1272:185:2",
										"text": " @dev Emitted when the administration has been transferred.\n @param previousAdmin Address of the previous admin.\n @param newAdmin Address of the new admin."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 395,
									"name": "AdminChanged",
									"nameLocation": "1468:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "1489:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1481:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1481:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "1512:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1504:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1504:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1480:41:2"
									},
									"src": "1462:60:2"
								},
								{
									"constant": true,
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "1528:180:2",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"org.zeppelinos.proxy.admin\", and is\n validated in the constructor."
									},
									"id": 399,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "1746:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 596,
									"src": "1713:112:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 397,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1713:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307831306436613534613437353463383836396436383836623566356437666266613562343532323233376561356336306431316263346537613166663933393062",
										"id": 398,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_7616251639890160809447714111544359812065171195189364993079081710756264753419_by_1",
											"typeString": "int_const 7616...(68 digits omitted)...3419"
										},
										"value": "0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "2046:112:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 402,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2060:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2064:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2060:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 404,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "2074:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2074:8:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2060:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 412,
													"nodeType": "Block",
													"src": "2116:36:2",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 409,
																	"name": "_fallback",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "2130:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2130:11:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 411,
															"nodeType": "ExpressionStatement",
															"src": "2130:11:2"
														}
													]
												},
												"id": 413,
												"nodeType": "IfStatement",
												"src": "2056:96:2",
												"trueBody": {
													"id": 408,
													"nodeType": "Block",
													"src": "2084:26:2",
													"statements": [
														{
															"id": 407,
															"nodeType": "PlaceholderStatement",
															"src": "2098:1:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "1832:190:2",
										"text": " @dev Modifier to check whether the `msg.sender` is the admin.\n If it is, it will run the function. Otherwise, it will delegate the call\n to the implementation."
									},
									"id": 415,
									"name": "ifAdmin",
									"nameLocation": "2036:7:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2043:2:2"
									},
									"src": "2027:131:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "2468:110:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"id": 425,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "2485:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "6f72672e7a657070656c696e6f732e70726f78792e61646d696e",
																		"id": 427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2509:28:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b",
																			"typeString": "literal_string \"org.zeppelinos.proxy.admin\""
																		},
																		"value": "org.zeppelinos.proxy.admin"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b",
																			"typeString": "literal_string \"org.zeppelinos.proxy.admin\""
																		}
																	],
																	"id": 426,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "2499:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2499:39:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "2485:53:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 424,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "2478:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2478:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "2478:61:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 433,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2560:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2564:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2560:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 432,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "2550:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2550:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "2550:21:2"
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "2164:181:2",
										"text": " @dev Contract constructor.\n It sets the `msg.sender` as the proxy administrator.\n @param implementationContract address of the initial implementation."
									},
									"id": 438,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 421,
													"name": "implementationContract",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 418,
													"src": "2440:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 422,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 420,
												"name": "UpgradeabilityProxy",
												"nameLocations": [
													"2420:19:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 682,
												"src": "2420:19:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2420:43:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "implementationContract",
												"nameLocation": "2370:22:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "2362:30:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2362:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2361:32:2"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2468:0:2"
									},
									"scope": 596,
									"src": "2350:228:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "2696:32:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 444,
														"name": "_admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "2713:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2713:8:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 443,
												"id": 446,
												"nodeType": "Return",
												"src": "2706:15:2"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "2584:58:2",
										"text": " @return The address of the proxy admin."
									},
									"functionSelector": "f851a440",
									"id": 448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "admin",
									"nameLocation": "2656:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2661:2:2"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "2687:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2687:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2686:9:2"
									},
									"scope": 596,
									"src": "2647:81:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "2858:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 454,
														"name": "_implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															646
														],
														"referencedDeclaration": 646,
														"src": "2875:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2875:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 453,
												"id": 456,
												"nodeType": "Return",
												"src": "2868:24:2"
											}
										]
									},
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "2734:61:2",
										"text": " @return The address of the implementation."
									},
									"functionSelector": "5c60da1b",
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "2809:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2823:2:2"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2849:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2849:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2848:9:2"
									},
									"scope": 596,
									"src": "2800:99:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "3143:216:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 467,
																"name": "newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "3174:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3194:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3186:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 468,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3186:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3186:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3174:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f787920746f20746865207a65726f2061646472657373",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3210:56:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_37112268ceb11e15373f32f9374a1f3287d0a3e6e5a9a435ac06367e6cd0cf00",
																"typeString": "literal_string \"Cannot change the admin of a proxy to the zero address\""
															},
															"value": "Cannot change the admin of a proxy to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_37112268ceb11e15373f32f9374a1f3287d0a3e6e5a9a435ac06367e6cd0cf00",
																"typeString": "literal_string \"Cannot change the admin of a proxy to the zero address\""
															}
														],
														"id": 466,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3153:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3153:123:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 475,
												"nodeType": "ExpressionStatement",
												"src": "3153:123:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 477,
																"name": "_admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "3304:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3304:8:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 479,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "3314:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 476,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "3291:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3291:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "EmitStatement",
												"src": "3286:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 483,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "3343:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 482,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "3333:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3333:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "3333:19:2"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "2905:177:2",
										"text": " @dev Changes the admin of the proxy.\n Only the current admin can call this function.\n @param newAdmin Address to transfer proxy administration to."
									},
									"functionSelector": "8f283970",
									"id": 487,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 464,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 463,
												"name": "ifAdmin",
												"nameLocations": [
													"3135:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 415,
												"src": "3135:7:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3135:7:2"
										}
									],
									"name": "changeAdmin",
									"nameLocation": "3096:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3116:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "3108:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3108:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3107:18:2"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3143:0:2"
									},
									"scope": 596,
									"src": "3087:272:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "3618:46:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 496,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "3639:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 495,
														"name": "_upgradeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "3628:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3628:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "3628:29:2"
											}
										]
									},
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "3365:185:2",
										"text": " @dev Upgrade the backing implementation of the proxy.\n Only the admin can call this function.\n @param newImplementation Address of the new implementation."
									},
									"functionSelector": "3659cfe6",
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 493,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 492,
												"name": "ifAdmin",
												"nameLocations": [
													"3610:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 415,
												"src": "3610:7:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3610:7:2"
										}
									],
									"name": "upgradeTo",
									"nameLocation": "3564:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "3582:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "3574:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3574:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3573:27:2"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3618:0:2"
									},
									"scope": 596,
									"src": "3555:109:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "4335:151:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 511,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "4356:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 510,
														"name": "_upgradeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "4345:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4345:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "4345:29:2"
											},
											{
												"assignments": [
													515,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 515,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4399:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 531,
														"src": "4394:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 514,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4394:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 526,
												"initialValue": {
													"arguments": [
														{
															"id": 524,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "4448:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 518,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4419:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AdminUpgradeabilityProxy_$596",
																			"typeString": "contract AdminUpgradeabilityProxy"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_AdminUpgradeabilityProxy_$596",
																			"typeString": "contract AdminUpgradeabilityProxy"
																		}
																	],
																	"id": 517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4411:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 516,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4411:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4411:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4425:4:2",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4411:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 521,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4437:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4441:5:2",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "4437:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4411:36:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4411:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4393:60:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 528,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "4471:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 527,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4463:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4463:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "4463:16:2"
											}
										]
									},
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "3670:533:2",
										"text": " @dev Upgrade the backing implementation of the proxy and call a function\n on the new implementation.\n This is useful to initialize the proxied contract.\n @param newImplementation Address of the new implementation.\n @param data Data to send as msg.data in the low level call.\n It should include the signature and the parameters of the function to be\n called, as described in\n https://solidity.readthedocs.io/en/develop/abi-spec.html#function-selector-and-argument-encoding."
									},
									"functionSelector": "4f1ef286",
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 508,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 507,
												"name": "ifAdmin",
												"nameLocations": [
													"4323:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 415,
												"src": "4323:7:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4323:7:2"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4217:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4242:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "4234:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4234:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4276:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "4261:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 504,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4261:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4233:48:2"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4335:0:2"
									},
									"scope": 596,
									"src": "4208:278:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "5048:97:2",
										"statements": [
											{
												"assignments": [
													539,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 539,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5064:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 550,
														"src": "5059:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 538,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5059:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 545,
												"initialValue": {
													"arguments": [
														{
															"id": 543,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "5107:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 540,
																"name": "_implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	646
																],
																"referencedDeclaration": 646,
																"src": "5076:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5076:17:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5094:12:2",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "5076:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5076:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5058:54:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 547,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "5130:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 546,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5122:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5122:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "5122:16:2"
											}
										]
									},
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "4492:475:2",
										"text": " @dev Upgrade the backing implementation of the proxy and delegate call a function\n on the new implementation.\n This is useful to initialize the proxied contract.\n @param data Data to send as msg.data in the low level call.\n It should include the signature and the parameters of the function to be\n called, as described in\n https://solidity.readthedocs.io/en/develop/abi-spec.html#function-selector-and-argument-encoding."
									},
									"functionSelector": "6c9ad7db",
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "funcCall",
									"nameLocation": "4981:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5005:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "4990:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 534,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4990:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4989:21:2"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5048:0:2"
									},
									"scope": 596,
									"src": "4972:173:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "5256:103:2",
										"statements": [
											{
												"assignments": [
													558
												],
												"declarations": [
													{
														"constant": false,
														"id": 558,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "5274:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 562,
														"src": "5266:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 557,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5266:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 560,
												"initialValue": {
													"id": 559,
													"name": "ADMIN_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 399,
													"src": "5281:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5266:25:2"
											},
											{
												"AST": {
													"nativeSrc": "5311:42:2",
													"nodeType": "YulBlock",
													"src": "5311:42:2",
													"statements": [
														{
															"nativeSrc": "5325:18:2",
															"nodeType": "YulAssignment",
															"src": "5325:18:2",
															"value": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5338:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "5338:4:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "5332:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "5332:5:2"
																},
																"nativeSrc": "5332:11:2",
																"nodeType": "YulFunctionCall",
																"src": "5332:11:2"
															},
															"variableNames": [
																{
																	"name": "adm",
																	"nativeSrc": "5325:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "5325:3:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 555,
														"isOffset": false,
														"isSlot": false,
														"src": "5325:3:2",
														"valueSize": 1
													},
													{
														"declaration": 558,
														"isOffset": false,
														"isSlot": false,
														"src": "5338:4:2",
														"valueSize": 1
													}
												],
												"id": 561,
												"nodeType": "InlineAssembly",
												"src": "5302:51:2"
											}
										]
									},
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "5151:46:2",
										"text": " @return adm The admin slot."
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_admin",
									"nameLocation": "5211:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5217:2:2"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "adm",
												"nameLocation": "5251:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5243:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5243:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5242:13:2"
									},
									"scope": 596,
									"src": "5202:157:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "5531:107:2",
										"statements": [
											{
												"assignments": [
													570
												],
												"declarations": [
													{
														"constant": false,
														"id": 570,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "5549:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "5541:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 569,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5541:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 572,
												"initialValue": {
													"id": 571,
													"name": "ADMIN_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 399,
													"src": "5556:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5541:25:2"
											},
											{
												"AST": {
													"nativeSrc": "5586:46:2",
													"nodeType": "YulBlock",
													"src": "5586:46:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5607:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "5607:4:2"
																	},
																	{
																		"name": "newAdmin",
																		"nativeSrc": "5613:8:2",
																		"nodeType": "YulIdentifier",
																		"src": "5613:8:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5600:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "5600:6:2"
																},
																"nativeSrc": "5600:22:2",
																"nodeType": "YulFunctionCall",
																"src": "5600:22:2"
															},
															"nativeSrc": "5600:22:2",
															"nodeType": "YulExpressionStatement",
															"src": "5600:22:2"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 566,
														"isOffset": false,
														"isSlot": false,
														"src": "5613:8:2",
														"valueSize": 1
													},
													{
														"declaration": 570,
														"isOffset": false,
														"isSlot": false,
														"src": "5607:4:2",
														"valueSize": 1
													}
												],
												"id": 573,
												"nodeType": "InlineAssembly",
												"src": "5577:55:2"
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "5365:115:2",
										"text": " @dev Sets the address of the proxy admin.\n @param newAdmin Address of the new proxy admin."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "5494:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "5512:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "5504:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5504:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5503:18:2"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5531:0:2"
									},
									"scope": 596,
									"src": "5485:153:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										50
									],
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "5766:169:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 581,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5797:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5801:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5797:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 583,
																	"name": "_admin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "5811:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5811:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5797:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e2066726f6d207468652070726f78792061646d696e",
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5833:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_08b466bde770d6d309a22d90ec051a62ad397be6218a53e741989877ec297fc9",
																"typeString": "literal_string \"Cannot call fallback function from the proxy admin\""
															},
															"value": "Cannot call fallback function from the proxy admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_08b466bde770d6d309a22d90ec051a62ad397be6218a53e741989877ec297fc9",
																"typeString": "literal_string \"Cannot call fallback function from the proxy admin\""
															}
														],
														"id": 580,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5776:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5776:119:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "5776:119:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 589,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "5905:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_AdminUpgradeabilityProxy_$596_$",
																"typeString": "type(contract super AdminUpgradeabilityProxy)"
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5911:15:2",
														"memberName": "_beforeFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 50,
														"src": "5905:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "5905:23:2"
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "5644:72:2",
										"text": " @dev Only fall back when the sender is not the admin."
									},
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeFallback",
									"nameLocation": "5730:15:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 578,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5757:8:2"
									},
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5745:2:2"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5766:0:2"
									},
									"scope": 596,
									"src": "5721:214:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 597,
							"src": "1209:4728:2",
							"usedErrors": [],
							"usedEvents": [
								395,
								610
							]
						}
					],
					"src": "660:5277:2"
				},
				"id": 2
			},
			"upgradeability/UpgradeabilityProxy.sol": {
				"ast": {
					"absolutePath": "upgradeability/UpgradeabilityProxy.sol",
					"exportedSymbols": {
						"Address": [
							381
						],
						"Proxy": [
							51
						],
						"UpgradeabilityProxy": [
							682
						]
					},
					"id": 683,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 598,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "660:23:3"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/proxy/Proxy.sol",
							"id": 600,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 683,
							"sourceUnit": 52,
							"src": "753:117:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 599,
										"name": "Proxy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 51,
										"src": "762:5:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol",
							"id": 602,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 683,
							"sourceUnit": 382,
							"src": "943:121:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 601,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 381,
										"src": "952:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 604,
										"name": "Proxy",
										"nameLocations": [
											"1608:5:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 51,
										"src": "1608:5:3"
									},
									"id": 605,
									"nodeType": "InheritanceSpecifier",
									"src": "1608:5:3"
								}
							],
							"canonicalName": "UpgradeabilityProxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 603,
								"nodeType": "StructuredDocumentation",
								"src": "1066:509:3",
								"text": " @notice This contract implements a proxy that allows to change the\n implementation address to which it will delegate.\n Such a change is called an implementation upgrade.\n @dev Forked from https://github.com/zeppelinos/zos-lib/blob/8a16ef3ad17ec7430e3a9d2b5e3f39b8204f8c8d/contracts/upgradeability/UpgradeabilityProxy.sol\n Modifications:\n 1. Reformat, conform to Solidity 0.6 syntax, and add error messages (5/13/20)\n 2. Use Address utility library from the latest OpenZeppelin (5/13/20)"
							},
							"fullyImplemented": true,
							"id": 682,
							"linearizedBaseContracts": [
								682,
								51
							],
							"name": "UpgradeabilityProxy",
							"nameLocation": "1585:19:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "1620:132:3",
										"text": " @dev Emitted when the implementation is upgraded.\n @param implementation Address of the new implementation."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 610,
									"name": "Upgraded",
									"nameLocation": "1763:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"indexed": false,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1780:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1772:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1772:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1771:24:3"
									},
									"src": "1757:39:3"
								},
								{
									"constant": true,
									"documentation": {
										"id": 611,
										"nodeType": "StructuredDocumentation",
										"src": "1802:205:3",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"org.zeppelinos.proxy.implementation\", and is\n validated in the constructor."
									},
									"id": 614,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "2045:19:3",
									"nodeType": "VariableDeclaration",
									"scope": 682,
									"src": "2012:121:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 612,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2012:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307837303530633965306634636137363963363962643361386566373430626333373933346638653263303336653561373233666438656530343865643366386333",
										"id": 613,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2067:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50801780122331352337026042894847907698553222651959119521779622085092237899971_by_1",
											"typeString": "int_const 5080...(69 digits omitted)...9971"
										},
										"value": "0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "2310:247:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"id": 621,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "2400:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "6f72672e7a657070656c696e6f732e70726f78792e696d706c656d656e746174696f6e",
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2449:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3",
																			"typeString": "literal_string \"org.zeppelinos.proxy.implementation\""
																		},
																		"value": "org.zeppelinos.proxy.implementation"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3",
																			"typeString": "literal_string \"org.zeppelinos.proxy.implementation\""
																		}
																	],
																	"id": 622,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "2439:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:48:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "2400:87:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 620,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "2380:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2380:117:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 627,
												"nodeType": "ExpressionStatement",
												"src": "2380:117:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 629,
															"name": "implementationContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "2527:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 628,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "2508:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2508:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 631,
												"nodeType": "ExpressionStatement",
												"src": "2508:42:3"
											}
										]
									},
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "2140:121:3",
										"text": " @dev Contract constructor.\n @param implementationContract Address of the initial implementation."
									},
									"id": 633,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "implementationContract",
												"nameLocation": "2286:22:3",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "2278:30:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2278:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2277:32:3"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2310:0:3"
									},
									"scope": 682,
									"src": "2266:291:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										16
									],
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "2758:112:3",
										"statements": [
											{
												"assignments": [
													641
												],
												"declarations": [
													{
														"constant": false,
														"id": 641,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2776:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 645,
														"src": "2768:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 640,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2768:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 643,
												"initialValue": {
													"id": 642,
													"name": "IMPLEMENTATION_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 614,
													"src": "2783:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2768:34:3"
											},
											{
												"AST": {
													"nativeSrc": "2821:43:3",
													"nodeType": "YulBlock",
													"src": "2821:43:3",
													"statements": [
														{
															"nativeSrc": "2835:19:3",
															"nodeType": "YulAssignment",
															"src": "2835:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2849:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "2849:4:3"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "2843:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "2843:5:3"
																},
																"nativeSrc": "2843:11:3",
																"nodeType": "YulFunctionCall",
																"src": "2843:11:3"
															},
															"variableNames": [
																{
																	"name": "impl",
																	"nativeSrc": "2835:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2835:4:3"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 638,
														"isOffset": false,
														"isSlot": false,
														"src": "2835:4:3",
														"valueSize": 1
													},
													{
														"declaration": 641,
														"isOffset": false,
														"isSlot": false,
														"src": "2849:4:3",
														"valueSize": 1
													}
												],
												"id": 644,
												"nodeType": "InlineAssembly",
												"src": "2812:52:3"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "2563:117:3",
										"text": " @dev Returns the current implementation.\n @return impl Address of the current implementation"
									},
									"id": 646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "2694:15:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 636,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2721:8:3"
									},
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2709:2:3"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "impl",
												"nameLocation": "2752:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "2744:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2744:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2743:14:3"
									},
									"scope": 682,
									"src": "2685:185:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "3071:96:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 653,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "3100:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 652,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "3081:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3081:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "3081:37:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 657,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "3142:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 656,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "3133:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3133:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 659,
												"nodeType": "EmitStatement",
												"src": "3128:32:3"
											}
										]
									},
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "2876:134:3",
										"text": " @dev Upgrades the proxy to a new implementation.\n @param newImplementation Address of the new implementation."
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeTo",
									"nameLocation": "3024:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "3043:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "3035:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3035:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3034:27:3"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3071:0:3"
									},
									"scope": 682,
									"src": "3015:152:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "3377:333:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 670,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 664,
																	"src": "3427:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 668,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 381,
																	"src": "3408:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$381_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3416:10:3",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 69,
																"src": "3408:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3408:37:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373",
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3513:61:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c",
																"typeString": "literal_string \"Cannot set a proxy implementation to a non-contract address\""
															},
															"value": "Cannot set a proxy implementation to a non-contract address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c",
																"typeString": "literal_string \"Cannot set a proxy implementation to a non-contract address\""
															}
														],
														"id": 667,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3387:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3387:197:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "3387:197:3"
											},
											{
												"assignments": [
													676
												],
												"declarations": [
													{
														"constant": false,
														"id": 676,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "3603:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 680,
														"src": "3595:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 675,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3595:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 678,
												"initialValue": {
													"id": 677,
													"name": "IMPLEMENTATION_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 614,
													"src": "3610:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3595:34:3"
											},
											{
												"AST": {
													"nativeSrc": "3649:55:3",
													"nodeType": "YulBlock",
													"src": "3649:55:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3670:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "3670:4:3"
																	},
																	{
																		"name": "newImplementation",
																		"nativeSrc": "3676:17:3",
																		"nodeType": "YulIdentifier",
																		"src": "3676:17:3"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3663:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3663:6:3"
																},
																"nativeSrc": "3663:31:3",
																"nodeType": "YulFunctionCall",
																"src": "3663:31:3"
															},
															"nativeSrc": "3663:31:3",
															"nodeType": "YulExpressionStatement",
															"src": "3663:31:3"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 664,
														"isOffset": false,
														"isSlot": false,
														"src": "3676:17:3",
														"valueSize": 1
													},
													{
														"declaration": 676,
														"isOffset": false,
														"isSlot": false,
														"src": "3670:4:3",
														"valueSize": 1
													}
												],
												"id": 679,
												"nodeType": "InlineAssembly",
												"src": "3640:64:3"
											}
										]
									},
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "3173:136:3",
										"text": " @dev Sets the implementation address of the proxy.\n @param newImplementation Address of the new implementation."
									},
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "3323:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "3350:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "3342:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3342:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3341:27:3"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3377:0:3"
									},
									"scope": 682,
									"src": "3314:396:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 683,
							"src": "1576:2136:3",
							"usedErrors": [],
							"usedEvents": [
								610
							]
						}
					],
					"src": "660:3052:3"
				},
				"id": 3
			}
		}
	}
}